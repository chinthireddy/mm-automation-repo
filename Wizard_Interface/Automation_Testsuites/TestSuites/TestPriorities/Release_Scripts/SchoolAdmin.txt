*** Settings ***
Resource          ../../../Keywords/super.txt

*** Test Cases ***
Student Do 100% completed assignment functionality with class
    [Documentation]    ATC46 Verify Collect Functionality for 100% completed assignment of Class
    ...
    ...    Step1:Login as a Student.
    ...    Step2:Verify Assignments present,if present Complete the writing of assignment.
    ...    Step3:Signout from the application
    ...    Step4:Login with Teacher Credentials.
    ...    Step5:Verify Collect Functionality for 100% completed assignment
    [Tags]    SCHOOL_ADMIN_1    COMPLETE_ASSIGNMENT_WITH_CLASS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC30A
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${ClassName}    Set Variable    @{preClassesList}[0]
    ${Studentname}    Set Variable    ${StudentFName} ${StudentLName}
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login with Valid Student credentials.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Verfiy Assignments present or not.
    ${AssignmentsStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Comment    Write Assignments by Student.
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Comment    Submit Assignment.
    ${NavSubmitBtnStatus}    Run Keyword And Return Status    Click Nav. Controller Buttons    TurnIn
    Sleep    5s
    Run Keyword And Ignore Error    Wait Until Element Is Visible    ${common.homepage.Loading}    10s
    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Comment    Closing the Assignment report if present and then Checking Home page displayed or not.
    ${DialogStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    15s
    Run Keyword If    ${DialogStatus}    Wait And Click Element    ${button.student.dialogContainerYes}
    ${reportStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.student.assignmentReport}    ${TimeOut}
    ${Studentname}    Run Keyword If    ${reportStatus}    Wait Until Keyword Succeeds    2m    5s    Get Text
    ...    //div[@id="sessionReportDlg"]//span[@id="srUserName"]
    ...    ELSE    Set Variable    ${Studentname}
    ${Studentname}    Replace String    ${Studentname}    :    ${EMPTY}
    Run Keyword If    ${reportStatus}    Wait And Click Element    ${button.studentReports.close}
    ${nextAssignmentStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    ${TimeOut}
    Run Keyword If    ${nextAssignmentStatus}    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    ${AssignementSubmtTodayDate}    Get Current Date
    ${AssignmentDetails}    Create Dictionary    Subject Name    ${AssignmentNameTitle}    Activity    ${AssignmentNameSubTitle}    StudentName
    ...    ${Studentname}    Class Name    ${ClassName}    School Name    ${schoolName}    SubmitDate
    ...    ${AssignementSubmtTodayDate}
    Set Global Variable    ${AssignmentDetails}    ${AssignmentDetails}
    Set Global Variable    ${assignmentCompletionStatus}    True
    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    10s
    Run Keyword If    ${NextAssignStatus}    Run Keyword And Ignore Error    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    Comment    MYS-3211 : Replaced \ with wait for element visible keyword to wait for an accurate given time for an element.
    ${homePageStatus}    Wait For Element Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Fail and Capture Screenshot    After "TurnIn" the assignment Student Homepage was not displayed.
    Comment    Signout the student ,and relogin with Teacher credentials.
    [Teardown]    Stop Application

ATC69 Login with School Admin Created from Management view
    [Documentation]    ATC69 Login with School Admin Created from Management view
    ...
    ...    1.Login with valid School Admin credentials.
    ...    2.Create one School Admin role from Management.
    ...    3.Signout from the application
    ...    4.Login with created school Admin credentials.
    ...    5.Verify Login is possible with created School Admin credentials.
    [Tags]    SCHOOL_ADMIN_3    CREATED_FROM_MANAGEMENT    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Selecting School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying the visibility of New User window.
    ${uniqueVal}    GetUniqueValue    Std
    ${firstName}    Set Variable    ALN${uniqueVal}
    ${lastName}    Set Variable    AFN${uniqueVal}
    ${userId}    Set Variable    qa4mme+test${uniqueVal}
    ${password}    Set Variable    test1${uniqueVal}
    Comment    Adding SchoolAdmin Role from Management.
    ${adminUserId}    Add Role From Management    ${firstName}    ${lastName}    ${userId}    ${password}    SchoolAdmin
    Comment    Verifing for the created school admin role in the users table.
    ${adminStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword If    ${adminStatus}==False    Fail    The newly added user is not shown in the 'Users' table.
    Close Browser
    Comment    School Admin signout and Relogin with District Admin credentials.
    ${loginStatus}=    LoginToWizardApp    ${adminUserId}    ${password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    after login get last name and first name
    ${NameOfAdmin}=    Get Text    ${label.Home.HeaderlabelUser}
    Comment    check for first name existence in home page
    ${FirstNameStatus}=    String Should Contain    ${NameOfAdmin}    ${firstName}
    Run Keyword And Continue On Failure    Run Keyword If    ${FirstNameStatus}!=True    Fail    The First Name:${firstName} is not as expected after login as Admin
    Run Keyword If    ${FirstNameStatus}!=True    Capture Page Screenshot And Log    ${OUTPUTDIR}    FirstNameError.png
    Comment    check for last name existence in home page
    ${LastNameStatus}=    String Should Contain    ${NameOfAdmin}    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${LastNameStatus}!=True    Fail    The Last Name:${lastName} is not as expected after login as Admin
    Run Keyword If    ${LastNameStatus}!=True    Capture Page Screenshot And Log    ${OUTPUTDIR}    LastNameError.png
    [Teardown]    Stop Application

ATC 72-School Admin - Verify Help and its sub menu item
    [Documentation]    ATC 72 Verify Help and its sub menu item
    ...
    ...    1.Login with valid Teacher Credentials.
    ...    2.Verify Help and its sub menu item
    [Tags]    SCHOOL_ADMIN_4    HELP_SUBMENU    MEDIUM
    Pass Execution If    ${isDemoQURL}    For school admin on 'demoque1.mysatori.com' URL no 'Help' menu is available.
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentials.
    ${Login_Status}=    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${Login_Status}'=='false'    Fail    The user is not able to login with valid credentials.
    Comment    Validate the functionality of Quick Tips window.
    Validate The Sub Menus Under Help Menu    ${link.home.quickTips}    ${header.home.help.quickTipsWindowClose}
    Comment    Validate the functionality of 'Email Support'.
    Validate The Sub Menus Under Help Menu    ${link.home.emailSupport}    ${button.howCanWeHelpYou.close}
    Comment    Validate the functionality of 'Contact Us'.
    Validate The Sub Menus Under Help Menu    ${link.home.contactUs}    ${button.contactUsDlg.close}
    Comment    Validate the functionality of 'Terms and conditions'.
    Validate The Sub Menus Under Help Menu    ${link.home.termsAndConditions}    ${header.help.CloseTermsAndConditionDlg}
    Mouse Over    ${button.home.help}
    comment    Mys-3849:Updated test script to resolve event triggering for single time click.It will run second iteration when first one is failed.
    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Comment    Verify the live chat in the help menu
    ${bStatus}    Verify Element Visible    ${link.help.LiveChat}
    Run Keyword Unless    ${bStatus}    Click On Element    ${button.home.help}
    Wait And Click Element    ${button.home.help}
    Comment    verify the LiveChat link in Help menu
    Wait And Click Element    ${link.help.LiveChat}
    Sleep    15s
    @{windowNames}=    Get Window Titles
    ${windowNames}=    Set Variable    @{windowNames}
    ${bStatus}=    Select the desired window    ${windowNames}    Customer Chat
    Run Keyword If    ${bStatus}==False    Fail    Captcha window should be dispalyed.
    Select Window    Mentoring Minds
    Focus    ${button.home.help}
    Wait And Click Element    ${button.home.help}
    ${bStatus}    Verify Element Visible    ${button.help.browserTest}
    Run Keyword Unless    ${bStatus}    Click On Element    ${button.home.help}
    Comment    verify the Browser Test link in Help menu
    Wait And Click Element    ${button.help.browserTest}
    Sleep    15s
    @{windowNames}=    Get Window Titles
    ${windowNames}=    Set Variable    @{windowNames}
    ${bStatus}=    Select the desired window    ${windowNames}    Mentoring Minds
    Run Keyword If    ${bStatus}==False    Fail    The Window is not able to open an xxx page
    [Teardown]    Stop Application

ATC 74 75 Verify District Admin Credentials are editable and displayed in '*' symbol
    [Documentation]    ATC 74 75 Verify District Admin Credentials are editable and displayed in '*' symbol
    ...
    ...    Step1:Login with School Admin credentials.
    ...    Step2:Edit Distrcit admin record in Management page.
    ...    Step3:Verify District Admin Credentials are editable and displayed in '*' symbol
    [Tags]    SCHOOL_ADMIN_5    MANAGEMENT_VERIFY_DISTRICT_ADMIN_CREDENTIALS_MASKED    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${DistrictAdminUid}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${DistrictAdminPwd}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${uniqueVal}    GetUniqueValue
    ${loginStatus}    LoginToWizardApp    ${DistrictAdminUid}    ${DistrictAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    DistrictAdmin- ${DistrictAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the DistrictAdmin-${DistrictAdminUid}
    Comment    MYS-3211:Updated code to handle enhancements dialog if not in login keyword.
    Wait For Element Visible    //div[@class='dashLink']/div[@class='headerLabelSchool']
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enhancementAlertStatus}    Wait For Element Visible    ${common.window.Enhancements}    5s
    Comment    Run Keyword If    ${enhancementAlertStatus}    Wait And Click Element    ${button.Alert.OK}
    Select The School Name    ${selectingSchool}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add Role From Management    ${uniqueVal}FN    ${uniqueVal}LN    qa4mme+da${uniqueVal}    ${uniqueVal}pwd    District Admin
    ${selectedRecordStatus}    Select The Record In Table    ${table.users}    Last Name    ${uniqueVal}LN
    Run Keyword If    "${selectedRecordStatus}"=="False"    Fail    District admin record is not displayed in management page.
    ${loginStatus}    Signout And Relogin    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${SchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3329: Replaced with wait for element visible keyword.
    Wait For Element Visible    ${table.users}    ${TimeOut}
    ${usersGridStatus}    Verify Element Visible    ${table.users}
    Run Keyword If    '${usersGridStatus}'!='True'    Fail    The users table is not displayed.
    ${usersGridStatus}    Table Column Values Sorting    ${table.users}    Created
    Run Keyword If    '${usersGridStatus}'!='True'    Fail    The users table is not displayed.
    ${selectedRow}    Select The Record In Table    ${table.users}    Last Name    ${uniqueVal}LN    False
    Run Keyword If    '${selectedRow}'=='0'    Fail    pls select a valid schooladmin which has district admin
    ${editClass}    Get Element Attribute    ${button.userDetails.edit}@class
    ${editButtonDisableStatus}    Run Keyword And Return Status    String Should Contain    ${editClass}    Disabled
    Run Keyword If    '${editButtonDisableStatus}'!='True'    Fail    The District admin credentials are editable with the SchoolAdmin Role
    Click Element    ${button.classesAndUsers.showPassword}
    ${password}    Get Element Attribute    ${text.user.passwordValue}
    Run Keyword And Continue On Failure    Should Contain    ${password}    ***
    ${userId}    Get Element Attribute    ${text.user.userIdValue}
    Should Contain    ${userId}    ***
    [Teardown]    Stop Application

ATC73 Verify Student,Teacher and Admin credentials are editable By SchoolAdmin
    [Documentation]    ATC73 Verify Student,Teacher and Admin credentials are editable By SchoolAdmin
    ...
    ...    Step1:Login with School Admin credentials.
    ...    Step2:Navigate to Management page.
    ...    Step3:Verify Student,Teacher and Admin credentials are editable By SchoolAdmin
    [Tags]    SCHOOL_ADMIN_6    MANAGEMENT_ALL_ROLES_CREDENTIALS_ARE_EDITABLE    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC73
    ${student_FN}    Get From Dictionary    ${stdDetails}    First Name
    ${student_MN}    Get From Dictionary    ${stdDetails}    Middle Name
    ${student_LN}    Get From Dictionary    ${stdDetails}    Last Name
    Comment    Login with Valid School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${SchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${usersGridStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.users}    ${TimeOut}
    Run Keyword If    ${usersGridStatus}!=True    Fail    The users table was not displayed.
    Comment    Selecting the record of student.
    TypeCharactertoTextBox    ${text.management.search}    ${student_FN}
    Select The Record In Table    ${table.users}    First Name    ${student_FN}
    Wait And Click Element    //div[@id='userGrid']/div[@class="dgrid-scroller"]/div[contains(@class,"dgrid-content")]//div[contains(@id,"-row")][1]/table/tr/td[contains(@class,"dgrid-cell")][2]
    Comment    Select desired role of the record from Table    Student
    Wait And Click Element    ${button.userDetails.edit}
    Comment    Clearing the middle name text and entering the ${globalSchoolAdminUid}.
    Clear Text    ${text.caseDetail.middleName}
    Input Text    ${text.caseDetail.middleName}    ${globalSchoolAdminUid}
    Comment    Wait and click on the element of Grade arrowbutton.
    Wait And Click Element    ${table.Management.userGradeArrowButton}
    ${xpathCount}    Get Matching Xpath Count    ${table.schoolAdmin.userGradeMenuItem}
    Comment    MYS-4923: Updated test script according to the changes in application (not available grade is displayed)
    ${randomNoValue}    Get Random Number In Given Range    3    ${xpathCount}
    Comment    Getting Text of the the menuitem.
    ${StudentSgnUpGradeLevel}    Get Text    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Clicking on the Menuitem which is selected.    \    ${table.schoolAdmin.userGradeMenuItem}
    Wait And Click Element    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Clicking on the Save button.
    ${saveStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.Details.Save}
    Wait Until Element is Invisible    ${button.Details.Save}
    Comment    Getting Attribute value of the middlename.
    ${middlNameValue}    Get Value    ${text.caseDetail.middleName}
    ${len}    Get Length    ${middlNameValue}
    ${middlNameValue}    Run Keyword If    ${len}==0    Get Element Attribute    ${text.caseDetail.middleName}@value
    ...    ELSE    Set Variable    ${middlNameValue}
    Comment    Comparing the Strings ${middlNameValue} and ${globalSchoolAdminUid}.
    Should Be Equal As Strings    ${middlNameValue}    ${globalSchoolAdminUid}    The edited Student middle name is not effected
    TypeCharactertoTextBox    ${text.management.search}    ${EMPTY}
    Comment    Selecting the record of the role School Admin.
    Select desired role of the record from Table    School Admin
    Wait And Click Element    ${button.userDetails.edit}
    Comment    Clear the middle name and enter Middle name as ${globalSchoolAdminUid}.
    Clear Text    ${text.caseDetail.middleName}
    Input Text    ${text.caseDetail.middleName}    ${globalSchoolAdminUid}
    Comment    MYS-1239:Grade level is removed for teacher and higher roles.
    Comment    Click on the Arrow button of the Grade.
    Comment    Wait And Click Element    ${table.Management.userGradeArrowButton}
    Comment    ${xpathCount}    Get Matching Xpath Count    ${table.schoolAdmin.userGradeMenuItem}
    Comment    ${randomNoValue}    Get Random Number In Given Range    2    ${xpathCount}
    Comment    Comment    Getting text of the Menuitem.
    Comment    ${StudentSgnUpGradeLevel}    Get Text    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Comment    Clicking on the selected menuitem.
    Comment    Wait And Click Element    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Clicking on the save button.
    ${saveStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.Details.Save}
    Wait Until Element is Invisible    ${button.Details.Save}
    Comment    getting attribute value of the middle name.
    Comment    Reload Page
    Comment    Wait Until Element Is Visible    //span[contains(text(),'Management')]/parent::button[contains(@class,'Btn')]    3m
    Comment    Navigate To Management Page
    Comment    Select the School Admin frame.
    Comment    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Select desired role of the record from Table    School Admin
    : FOR    ${icount}    IN RANGE    1    50
    \    ${middlNameValue}    Get Value    ${text.caseDetail.middleName}
    \    ${len}    Get Length    ${middlNameValue}
    \    Run Keyword If    ${len}>=1    Exit For Loop
    \    ${middlNameValue}    Run Keyword If    ${len}==0    Get Element Attribute    ${text.caseDetail.middleName}@value
    \    ...    ELSE    Get Value    ${text.caseDetail.middleName}
    \    Run Keyword If    ${len}==0    Continue For Loop
    Comment    Comapring ${middlNameValue} and ${globalSchoolAdminUid}.
    Should Be Equal As Strings    ${middlNameValue}    ${globalSchoolAdminUid}    The edited Teacher middle name is not effected
    Select desired role of the record from Table    Teacher
    Wait And Click Element    ${button.userDetails.edit}
    Comment    Clear the middle name and enter ${globalSchoolAdminUid} as middle name.
    Clear Text    ${text.caseDetail.middleName}
    Input Text    ${text.caseDetail.middleName}    ${globalSchoolAdminUid}
    Comment    MYS-1239:Grade level is removed for teacher and higher roles.
    Comment    Wait And Click Element    ${table.Management.userGradeArrowButton}
    Comment    getting xpath count of the menuitem.
    Comment    ${xpathCount}    Get Matching Xpath Count    ${table.schoolAdmin.userGradeMenuItem}
    Comment    ${randomNoValue}    Get Random Number In Given Range    2    ${xpathCount}
    Comment    getting text of the menuitem.
    Comment    ${StudentSgnUpGradeLevel}    Get Text    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Clicking on the selected menuitem.
    Comment    Click Element    ${table.schoolAdmin.userGradeMenuItem}[${randomNoValue}]
    Comment    Click on Save button.
    ${saveStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.Details.Save}
    Wait Until Element is Invisible    ${button.Details.Save}
    Comment    getting attribute value of the middle name.
    ${middlNameValue}    Get Value    ${text.caseDetail.middleName}
    ${len}    Get Length    ${middlNameValue}
    ${middlNameValue}    Run Keyword If    ${len}==0    Get Element Attribute    ${text.caseDetail.middleName}@value
    ...    ELSE    Set Variable    ${middlNameValue}
    Comment    Comapring ${middlNameValue} and ${globalSchoolAdminUid}.
    Should Be Equal As Strings    ${middlNameValue}    ${globalSchoolAdminUid}    The edited Teacher middle name is not effected
    [Teardown]    Stop Application

ATC76 Create Student user from Management
    [Documentation]    ATC76 Create Student user from Management
    ...
    ...    Step1:Login with valid School Admin credentails.
    ...    Step2:Navigate to Management page.
    ...    Step3:click on 'Add User' button.
    ...    Step4:Create Student user from Management
    [Tags]    SCHOOL_ADMIN_7    MANAGEMENT_CREATE_STUDENT_ROLE    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with Valid School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${SchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying the visibility of New User window.
    ${uniqueVal}    GetUniqueValue    Std
    ${firstName}    Set Variable    ALN${uniqueVal}
    ${lastName}    Set Variable    AFN${uniqueVal}
    ${userId}    Set Variable    test${uniqueVal}
    ${password}    Set Variable    test1${uniqueVal}
    Comment    Adding Student role from management.
    ${adminUserId}    Add Role From Management    ${firstName}    ${lastName}    ${userId}    ${password}    Student
    ...    \    6
    Comment    Verifying that Created student is displayed or not in table.
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${userId}.png
    ${adminNameStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword If    ${adminNameStatus}==False    Fail    The newly added user is not shown in the 'Users' table.
    [Teardown]    Stop Application

ATC78 Create Class from Management and add Student&Titles to the Class
    [Documentation]    ATC78 Create Class from Management and add Student&Titles to the Class
    ...
    ...    Step1:Login with valid School Admin credentials.
    ...    Step2:Navigate to Management page.
    ...    Step3:Click on Add button of Classes table.
    ...    Step4:Create class and add Students and Titles.
    [Tags]    SCHOOL_ADMIN_8    MANAGEMENT_ADD_STUDENTS_TITLES_TO_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${userId}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${password}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC30B
    ${studentUId}    Get From Dictionary    ${stdDetails}    User ID
    ${assignmentTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${instructorFullName}    Set Variable    ${preTeacherLastName}, ${preTeacherFirstName}
    ${class}    GetUniqueValue    QASAClass
    ${userIdList}    Create List    ${studentUId}
    ${titleList}    Create List    ${assignmentTitle}
    ${userStatusList}    Create List    true
    Comment    Login with Valid School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${userId}    ${password}
    Run Keyword If    '${loginStatus}'=='False'    Fail    ${alertText}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the frame School admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3394:Updated to wait and inteeract with the first row which get displayed in classes table, to deal with loading.
    Wait And Click Element    //div[@id='groupGrid']//div[@role='row'][1]//table//tr//td[1]
    Comment    Verifng and Clicking on the element 'Show Classes' button.
    ${bStatus}    Verify Element Visible    ${button.reportFilters.showClasses}
    Run Keyword If    '${bStatus}'=='True'    Click Element    ${button.reportFilters.showClasses}
    Comment    Add Class from the management.
    Add A Class Or Group    ${class}    ${instructorFullName}    Created by off shore QA team
    Comment    Select the record of the created class.
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${class}
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Set Test Message    Logged in user does not have any class
    Comment    Click on Edit button
    Comment    Editing Class or Group.
    Edit The Class Or Group Details
    Comment    Editing Students or Titles to the Class.
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Comment    Waiting for the element save button invisible.
    Wait Until Element is Invisible    ${button.editStudentsAndTitles.save}
    [Teardown]    Stop Application

ATC 80 Verify Print/Export using admin credentials
    [Documentation]    ATC 80 Verify Print/Export using admin credentials
    ...
    ...    Step1:Login with valid School admin credentails.
    ...    Step2:Navigate to Management.
    ...    Step3:Click on Print/Export button of All users.
    [Tags]    SCHOOL_ADMIN_10    MANAGEMENT_VERIFY_PRINT_AND_EXPORT_FUNCTIONALITY    HIGH
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    Export or Print All Users Data    print
    Sleep    ${TimeOut}
    ${title}    Get Window Titles
    ${noOfWindowsCount}    Get Length Of List    ${title}
    Run Keyword If    ${noOfWindowsCount}<2    Sleep    15s
    ${title}    Run Keyword If    ${noOfWindowsCount}<2    Get Window Titles
    ...    ELSE    Set Variable    ${title}
    List Should Contain Value    ${title}    Print Users    Print Users window is not displayed
    Select Window By Title    @{title}[1]
    Wait Until Element Is Visible    ${table.schoolAdmin.printUsersTable}    ${TimeOut}
    Select Window By Title    @{title}[0]
    Reload Page
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Print/Export all users.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export
    Sleep    30s
    Save Exported File    ${fileDir}    ${lengthOFList}
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Sleep    10s
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded
    [Teardown]    Stop Application

ATC82 Delete Class from Management
    [Documentation]    ATC82 Delete Class From Management.
    ...
    ...    Precondition:Class should be created .
    ...
    ...    Step1:Login with School Admin credentails.
    ...    Step2:Navigate to Management.
    ...    Step3:Delete class from Management.
    [Tags]    SCHOOL_ADMIN_11    MANAGEMENT_DELETE_CLASS    HIGH
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${ClassName}    GetUniqueValue    TestClass
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    selecting School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a class from Management.
    Add A Class Or Group    ${ClassName}    \    Created By QA
    Comment    verifying the created class displayed or not in table.
    ${classStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${ClassName}_01.png
    Run Keyword If    ${classStatus}==False    Fail    The created class:${ClassName} is not in the table hence it cannot be deleted.
    Comment    Delete the created class from the table.
    Delete The Record From table    ${table.classesAndGroups}    Name    ${ClassName}
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${ClassName}_02.png
    Comment    verifying the deleted class name present or not in the table.
    Comment    MYS-2566:Updated the script to wait for the loading and wait until it's invisible and then verify whetrher the deleted record is displayed or not.
    ${loadingVisib}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}    10s
    Run Keyword If    ${loadingVisib}    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    ${recordNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Comment    Run Keyword If    "${recordNo}"!="0"    Fail    ${ClassName} was not deleted from class table in Management page.
    ${value}    Verify Values In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword If    "${value}"!="False"    Fail    ${ClassName}
    [Teardown]    Stop Application

ATC84 Change the instructor of a class using School Admin credentials
    [Documentation]    ATC84 Change the instructor of a class using School Admin credentials
    ...
    ...    Step1:Login with School Admin credentials.
    ...    Step2:Navigate to Management.
    ...    Step3: Change the instructor of a class using School Admin credentials
    [Tags]    SCHOOL_ADMIN_13    MANAGEMENT_CHANGE_INSTRUCTOR_OF_A_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'!='True' or '${secondTeacherCreationStatus}'!='True'    Fail    PreRequisite School Admin is not created or prerequisite second teacher is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueVal}    Get Unique Id
    ${ClassName}    Set Variable    Teacher_Class_Chng${uniqueVal}
    ${tc01FName}    Get From Dictionary    ${preTeacherDetails}    FirstName
    ${tc01LName}    Get From Dictionary    ${preTeacherDetails}    LastName
    ${oldTutor}    Set Variable    ${tc01FName}${SPACE}${tc01LName}
    ${tc02FName}    Get From Dictionary    ${preTeacherDetails02}    FirstName
    ${tc02LName}    Get From Dictionary    ${preTeacherDetails02}    LastName
    ${newTutor}    Set Variable    ${tc02FName}${SPACE}${tc02LName}
    ${classCreatingTeacherFullName}    Set Variable    ${tc02LName},${SPACE}${tc02FName}
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classStatus}    Add A Class Or Group    ${ClassName}    ${classCreatingTeacherFullName}
    Run Keyword If    "${classStatus}"!="False"    CommonLibrary.Table Column Values Sorting    ${table.classesAndGroups}    Created
    Comment    Change the Instructor of a class.
    Change the class Tutor Of a Class From School Admin    ${ClassName}    ${newTutor}    ${oldTutor}
    Wait Until Element is Invisible    ${button.classDetails.save}    ${TimeOut}
    ${Rowno}=    Select The Record In Table    ${table.classesAndGroups}    Teacher    ${oldTutor}    False
    Run Keyword If    '${Rowno}'=='0'    Fail and Capture Screenshot    No ${newTutor} is selected for the class.
    Comment    Resetting the tutor to old one.
    Change the class Tutor Of a Class From School Admin    ${ClassName}    ${oldTutor}    ${newTutor}
    Wait Until Element is Invisible    ${button.classDetails.save}
    ${Rowno}=    Select The Record In Table    ${table.classesAndGroups}    Teacher    ${newTutor}    False
    Run Keyword If    '${Rowno}'=='0'    Fail and Capture Screenshot    Resetting of teacher to old one failed.
    [Teardown]    Stop Application

ATC90-Verify Sign Out for School Admin
    [Documentation]    ATC90-Verify Sign Out for School Admin
    ...
    ...    Step1:Login with school Admin credentials.
    ...    Step2:Verify Sign Out for School Admin
    [Tags]    SCHOOL_ADMIN_14    HOME_SIGNOUT    HIGH
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${SchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Signout the school admin.
    ${signoutStatus}    SignOut
    Run Keyword If    ${signoutStatus}!=True    Fail    The login page is not displayed when we click on the signout button
    [Teardown]    Stop Application

ATC91-Verify the users are imported using “Import Template”
    [Documentation]    ATC91-Verify the users are imported using “Import Template”
    ...
    ...    Step1:Login with School Admin credentials.
    ...    step2:Validate the Import Template.
    [Tags]    SCHOOL_ADMIN_15    IMPORT_USERS_USING_TEMPLATE    MEDIUM
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    Importing the users from the csv file.
    ${sheetName}    Set Variable If    ${isDemoQURL}    DemoQStudentDetails    StudentDetails
    Create Csv File Using Ms Excel File    ${Upload Users Teamplate}    ${Import Users Template}    ${sheetName}
    ${uploadStatus}    Upload Students From CSV    ${Upload Users Teamplate}
    Run Keyword If    '${uploadStatus}'!='True'    Fail    ${impUsersMsg}
    [Teardown]    Stop Application

ATC92-Verify whether Template is downloaded
    [Tags]    SCHOOL_ADMIN_16    VERIFY_CAN_DOWNLOAD_TEMPLATE    MEDIUM
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    Navigate to 'Import Users'
    Wait And Click Element    ${button.home.ImportUsers}
    ${importWindowStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[@id='downloadImportUsersTemplateBtn']//span[contains(text(),'Download an import template now.')]    ${TimeOut}
    Run Keyword If    ${importWindowStatus}==True    Wait And Click Element    //span[@id='downloadImportUsersTemplateBtn']//span[contains(text(),'Download an import template now.')]
    ${defaultDownloadPath}    Get Default Download Path    import_users_template.csv
    Remove File    ${defaultDownloadPath}
    Screenshot.Take Screenshot    Downloading.png
    Wait Until Created    ${defaultDownloadPath}    ${Delay}
    Comment    Verify whether template is downloaded or not
    File Should Exist    ${defaultDownloadPath}    The Import Template is not downloaded
    Comment    Verify whether the all the expected student headers are displayed in it or not.
    ${Exp_Template_Headers_List}    Create List    User ID    Password    First Name    Middle Name    Last Name
    ...    Grade Level    Role    School    Class Label    ${EMPTY}    ${EMPTY}
    ...    DIRECTIONS FOR PREPARING DATA FOR EACH COLUMN OF THIS FILE
    ${Template_Headers_List}    Get Csv File Row Values Into List    ${defaultDownloadPath}    1
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${Exp_Template_Headers_List}    ${Template_Headers_List}
    Remove File    ${defaultDownloadPath}
    [Teardown]    Stop Application

ATC 96 97 SchoolAdmin-Verify whether class is added in 10 seconds
    [Documentation]    SchoolAdmin-Verify whether Management screen is displayed in 10 seconds
    ...
    ...
    ...    Step1 : Login as a School Admin.
    ...
    ...    Step2 : Add a class \ management button.
    ...
    ...    Step3 : Verify whether Management screen is displayed in 10 seconds
    [Tags]    SCHOOL_ADMIN_17    MANAGEMENT_VERIFY_CLASS_IS_ADDED_PERFORMANCE_TEST    MEDIUM
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${description}    Set Variable    Created by QA
    ${uniqueValue}    GetUniqueValue
    ${ClassName}    Set Variable    Class${uniqueValue}
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Run Keyword And Continue On Failure    Wait Until Element Is Visible    ${table.classesAndGroups}    10s    The "Management Page" was not displayed within 10 sec time.
    Comment    Add Class to the table.
    ${classStatus}    Add A Class Or Group    ${ClassName}    \    ${description}    Class
    Wait Until Element Is Visible    ${table.classesAndGroups}/div[@class='dgrid-scroller']/div[contains(@class,'dgrid-content')]/div[@role='row']/table/tr/td[1][text()='${ClassName}']    10s    The newlly created Class was not displayed within 10s in classes table.
    [Teardown]    Stop Application

ATC 98 SchoolAdmin-Verify whether user is added in 10 seconds
    [Documentation]    Adding user from SchoolAdmin management and verifying wheather the user is added in 10seconds or not
    ...
    ...    1.Login in to the application using 'SchoolAdmin' Credentials
    ...
    ...    2.Navigating to the management window.
    ...
    ...    3.Adding the user from the management.
    ...
    ...    4.Verifying the list of users if the user is added or not.
    [Tags]    SCHOOL_ADMIN_18    MANAGEMENT_VERIFY_NEW_USER_ADDED_PERFORMANCE_TEST    MEDIUM
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueValue}    GetUniqueValue    AAASTD
    ${stdFN}    Set Variable    ${uniqueValue}FN
    ${stdLN}    Set Variable    ${uniqueValue}LN
    ${stdUserId}    Set Variable    student${uniqueValue}
    ${password}    Set Variable    ${uniqueValue}PWD
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add Role From Management    ${stdFN}    ${stdLN}    ${stdUserId}    ${password}    Student    ${EMPTY}
    ...    6
    Comment    Sort the table values by 'Created'
    Wait Until Element Is Visible    ${table.users}/div[@class='dgrid-scroller']/div[contains(@class,'dgrid-content')]/div[@role='row']/table/tr/td[2][text()='${stdFN}']    10s    The user is not added to the table in 10 secs.
    [Teardown]    Stop Application

ATC111 Create Class from Management and add Student and Titles to the class
    [Documentation]    ATC111 Create Class from Management and add Student and Titles to the class.
    ...
    ...    Step1:Login with valid District Admin credentials.
    ...    Step2:Navigate to Management page.
    ...    Step3:Create Class from Management and Add Student and Titles to the Class.
    [Tags]    SCHOOL_ADMIN_19    MANAGEMENT_CREATE_CLASS_AND_ADD_STUDENTS_TITLES    HIGH
    Run Keyword If    '${preDistrictAdminStatus}'=='False' or '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite for School Admin and teacher is not created
    ${userId}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${password}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC30A
    ${studentUId}    Get From Dictionary    ${stdDetails}    User ID
    ${assignmentTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${userIdList}    Create List    ${studentUId}
    ${titleList}    Create List    ${assignmentTitle}
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${className}    GetUniqueValue    QASAClass
    ${userStatusList}    Create List    true
    Comment    Login with valid District Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${userId}    ${password}
    ${alertText}    Set Variable    The user is not able to login with valid credentials.
    Run Keyword If    '${loginStatus}'=='False'    Fail    ${alertText}
    Comment    Select the school name ${preSchoolName}
    ${kwStatus}    Select The School Name    ${schoolName}
    Run Keyword Unless    ${kwStatus}    Fail    The required school name was not selected correctlly from scolls list.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    select the school admin frame.
    Select Frame    ${header.management.schoolAdminFrame}
    ${bStatus}    Verify Element Visible    ${button.reportFilters.showClasses}
    Run Keyword If    '${bStatus}'=='True'    Click Element    ${button.reportFilters.showClasses}
    ${tcFName}    Set Variable    ${preTeacherFirstName}
    ${tcLName}    Set Variable    ${preTeacherLastName}
    ${instFullName}    Set Variable    ${tcLName},${SPACE}${tcFName}
    Comment    Add Class from Management.
    Add A Class Or Group    ${className}    ${instFullName}    Created by QA off shore
    Comment    Select the Created Class name record.
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Set Test Message    Logged in user does not have any class
    Comment    Click on Edit button
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Edit students to the class.
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    15
    Comment    Edit Titles to the class.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    15s
    Comment    Clicking on the button 'save'.
    Wait And Click Element    ${button.classDetails.save}
    [Teardown]    Stop Application

ATC117 Verify Standard Mastery Report is displayed in 10 Sec
    [Documentation]    ATC117 Verify Standard Mastery Report is displayed in 10 Sec
    ...
    ...    Step1:Login with Valid District Admin credentials.
    ...    Step2:Navigate to Reports page.
    ...    Step3:Generate 'Standard Mastery Report'.
    ...    Step4:Verify Standard Mastery Report is displayed in 10 Sec
    [Tags]    SCHOOL_ADMIN_20    REPORTS_VERIFY_STANDARD_MASTERY_REPORT_PERFORMANCE_TEST    MEDIUM
    Comment    This test depends on ATC 30A staus.
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    Run Keyword If    '${assignmentCompletionStatus}'!='True'    Fail    The student do assigment process was not done.
    ${DistrictAdminUid}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${DistrictAdminPwd}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${reportType}    Set Variable    ${preReportType1}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${SchoolName}    Get From Dictionary    ${AssignmentDetails}    School Name
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    Comment    Login with valid Districtl Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${DistrictAdminUid}    ${DistrictAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Comment    Generating report: ${reportType} with detials:${className},${SubjectName},${SchoolName}
    Get Report for A Class or Group    ${reportType}    Classes    ${className}    ${SubjectName}    ${SchoolName}    ${EMPTY}
    ...    ${fromdate}    ${todate}
    Comment    Selecting Report frame.
    Wait And Select Frame    ${header.report.reportFrame}
    Comment    MYS-3329:Replaced with wait for element visible.
    ${eStatus}=    Wait For Element Visible    ${label.reports.reportEmptyMessage}    10s
    Run Keyword If    ${eStatus}    Fail    Report generated with message "There is no information to display for the current selection." OR Please check with previous day,the day might have been changed during the assignment subission and report verification time.
    Comment    MYS-3329:Replaced with wait for element visible.
    ${status}    Wait For Element Visible    ${label.reports.Subject}    2m
    Run Keyword If    '${status}'!='True'    Fail and Capture Screenshot    The Standard Mastery Report is not displayedwith data in given time.    SMR.png
    [Teardown]    Stop Application

ATC118 Verify Item Analysis Report is displayed in 10 Sec
    [Documentation]    ATC117 Verify Item Analysis Report is displayed in 10 Sec
    ...
    ...    Step1:Login with Valid District Admin credentials.
    ...    Step2:Navigate to Reports page.
    ...    Step3:Generate \ Item Analysis \ Report'.
    ...    Step4:Verify \ Item Analysis \ Report is displayed in 10 Sec
    [Tags]    SCHOOL_ADMIN_21    REPORTS_VERIFY_ITEM_ANALYSIS_REPORT_PERFORMANCE_TEST    MEDIUM
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    Run Keyword If    '${assignmentCompletionStatus}'!='True'    Fail    The student do assigment process was not done.
    ${DistrictAdminUid}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${DistrictAdminPwd}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${reportType}    Set Variable    ${preReportType2}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${SchoolName}    Get From Dictionary    ${AssignmentDetails}    School Name
    ${ActivityName}    Get From Dictionary    ${AssignmentDetails}    Activity
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    Comment    Login with valid Districtl Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${DistrictAdminUid}    ${DistrictAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Comment    Generating report: ${reportType} with detials:${className},${SubjectName},${SchoolName}
    Get Report for A Class or Group    ${reportType}    Classes    ${className}    ${SubjectName}    ${SchoolName}    ${ActivityName}
    ...    ${fromdate}    ${todate}
    Comment    Selecting Report frame.
    Wait And Select Frame    ${header.report.reportFrame}
    Comment    MYS-3329:Replaced with wait for element visible keyword.
    ${eStatus}=    Wait For Element Visible    ${label.reports.reportEmptyMessage}    10s
    Run Keyword If    ${eStatus}    Fail    Report generated with message "There is no information to display for the current selection." OR Please check with previous day,the day might have been changed during the assignment subission and report verification time.
    Comment    MYS-3329:Replaced with wait for element visible keyword.
    ${status}    Wait For Element Visible    ${label.reports.Subject}    60s
    Run Keyword If    '${status}'!='True'    Fail and Capture Screenshot    The Item Analysis Report is not displayed with data \ in given time.    IAR.png
    [Teardown]    Stop Application

ATC123 Verify School Admin creation with using 0 times Reg Code
    [Documentation]    ATC123 Verify School Admin creation with using 0 times Reg Code
    ...
    ...    Step1:Create the School Admin with using 0 times Reg Code
    [Tags]    SCHOOL_ADMIN_22    REGISTRATION_VERIFY_NON_REUSABLE_REGISTRATION_CODE    HIGH
    OpenBrowserToLoginPage
    ${schoolAdminDetails}    Get Ms Excel Row Values Into Dictionary Based On Key    ${PrerequisitesFilePath}    ATC123    SchoolAdmin
    Comment    Comment    Create the new school Admin with 'SADMIN-000000' reg code.
    ${ZipCode}    Set Variable If    ${isDemoQURL}==False    ${schoolZipCode}    ${demoQSchoolZipCode}
    ${schoolName}    Set Variable If    ${isDemoQURL}==False    ${preSchoolName}    ${demoQPreSchoolName}
    Comment    ${SAStatus}=    Run Keyword And Return Status    Create New School Admin    ${schoolAdminDetails}    ${schoolName}    SADMIN-000000
    ...    ${ZipCode}
    Comment    Run Keyword If    ${SAStatus}!=True    Set Test Message    Failed to create School Admin with registration code SADMIN-000000
    Comment    Run Keyword If    ${SAStatus}==True    Fail    Created School Admin with registration code SADMIN-000000
    ${SchoolAdminCode}    Set Variable    SADMIN-000000
    ${zip}    Set Variable    76008
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'SchoolAdmin'.
    Select Role in Create Account    ${schoolAdmin}
    ${filePath}=    Set Variable    ${daRegistrationCodesFile}
    ${sheetName}=    Set Variable If    ${isDemoQURL}    STAAR mysdb_m3    CCS
    ${zipCode}=    Run Keyword If    "${zip}"=="${EMPTY}"    Newuser.Get Zipcode For School    ${filePath}    ${sheetName}    ${schoolName}
    ...    ELSE    Set Variable    ${zip}
    Comment    Enter Zip Code And Select School    ${zipCode}    admin    ${schoolName}
    Select Zip code    ${zipCode}    admin    ${schoolName}
    ${spinnerStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.spinner.loadingIcon}
    ${loadingIconInvisibleStatus}    Run Keyword If    ${spinnerStatus}    Run Keyword And Return Status    Wait Until Element is Invisible    ${common.spinner.loadingIcon}
    Comment    Run Keyword If    ${loadingIconInvisibleStatus}!=False    Wait And Click Element    ${button.signUp.next}
    Comment    Validate The Step Precondition    ${label.SchoolAdmin.DialogMessage}    Enter a valid (school) email address to use as your User ID    "Enter a valid (school) email address to use as your User ID" step was not displayed in School Admin Registration process.
    Comment    Enter a valid Email address.
    ${SchoolAdminUid}    Get From Dictionary    ${schoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${schoolAdminDetails}    Password
    ${SchoolAdminFName}    Get From Dictionary    ${schoolAdminDetails}    FirstName
    ${SchoolAdminLName}    Get From Dictionary    ${schoolAdminDetails}    LastName
    Wait For Element Visible    ${text.adminSignUp.firstName}
    Input Text    ${text.adminSignUp.firstName}    ${SchoolAdminFName}
    Input Text    ${text.adminSignUp.lastName}    ${SchoolAdminLName}
    Input Text    ${text.adminSignUp.email}    ${SchoolAdminUid}
    Input Text    ${text.adminsignup.ConfirmEmail}    ${SchoolAdminUid}
    Input Text    ${text.adminSignUp.password}    ${SchoolAdminPwd}
    Input Text    ${text.adminSignUp.confirmPassword}    ${SchoolAdminPwd}
    Validate The Step Precondition    ${label.adminSignUp.titleSelectionDlgMessage}    Select your job title.    "Select your job title" step was not displayed in School Admin Registration process.
    Comment    Select Job Title from job List.
    Select DropDown Values    ${dropdown.adminSignUp.jobTitleDrpDwn}    //table[@id='adminSignUpDlg-jobTitle_menu']//tr
    ${bStatus}=    Run Keyword And Return Status    Verify Element Present    ${button.signUp.next}
    Run Keyword If    ${bStatus}    Select DropDown Values    ${dropdown.adminSignUp.jobTitleDrpDwn}    //table[@id='adminSignUpDlg-jobTitle_menu']//tr
    Wait And Click Element    //input[@id='adminSignUpDlg-subscribe']
    Wait And Click Element    ${button.signUp.next}
    Validate The Step Precondition    ${label.adminSignUp.adminRegCodeDlgMessage}    Administrator Registration Code below.    The "Enter the Administrator Registration Code below" step was not displayed in District Admin Registration process.
    ${statusOfRegistration}=    Enter DA or SA Registration Code    SADMIN-000000
    ${alert}=    Get Text    //div[@class='dijitToasterContent' and contains(text(),'Invalid registration code.')]
    ${bStatus}=    String Should Contain    ${alert}    Invalid registration code.
    Run Keyword If    ${bStatus} == False    Wait And Click Element    ${button.signUp.next}
    ${alert}=    Get Text    //div[@class='dijitToasterContent' and contains(text(),'Invalid registration code.')]
    ${AlertStatus}=    String Should Contain    ${alert}    Invalid registration code.
    Run Keyword Unless    ${AlertStatus}    Fail    Invalid registration code. alert message should be dispalyed
    [Teardown]    Stop Application

ATC124 Verify School Admin creation with using reusable Reg Code
    [Documentation]    ATC124 Verify School Admin creation with using reusable Reg Code
    ...
    ...    Step1:Create the School Admin with using reusable Reg Code
    [Tags]    SCHOOL_ADMIN_23    REGISTRATION_VERIFY_REUSABLE_REGISTRATION_CODE    HIGH
    ${schoolAdminDetails}    Get Ms Excel Row Values Into Dictionary Based On Key    ${PrerequisitesFilePath}    ATC124_1    SchoolAdmin
    Comment    Open the Mentoring Minds url.
    OpenBrowserToLoginPage
    Comment    Create the new School Admin with reusable Reg code.
    ${ZipCode}    Set Variable If    ${isDemoQURL}==False    ${schoolZipCode}    ${demoQSchoolZipCode}
    ${schoolName}    Set Variable If    ${isDemoQURL}==False    ${preSchoolName}    ${demoQPreSchoolName}
    ${kwStatus}    Run Keyword And Return Status    Create New School Admin    ${schoolAdminDetails}    ${schoolName}    SADMIN-999999    ${ZipCode}
    Run Keyword If    ${kwStatus}!=True    Fail    Failed to Create School Admin with Reg. code SADMIN-999999
    Comment    Signout from the application.
    ${kwStatus}    SignOut
    Run Keyword Unless    ${kwStatus}    Go To    ${WizardURL}
    ${schoolAdminDetails}    Get Ms Excel Row Values Into Dictionary Based On Key    ${PrerequisitesFilePath}    ATC124_2    SchoolAdmin
    Comment    Create the new School Admin with reusable Reg code.
    ${kwStatus}    Run Keyword And Return Status    Create New School Admin    ${schoolAdminDetails}    ${schoolName}    SADMIN-999999    ${ZipCode}
    Run Keyword If    ${kwStatus}!=True    Fail    Failed to Create School Admin with Reg. code SADMIN-999999
    [Teardown]    Stop Application

ATC 144 - School admin-management edit the class,change the teacher
    [Documentation]    School Admin verifies weather the class is removed from old techer and added to the new teacher on changing the respective teacher of a Group.
    ...
    ...    1.Login as School Admin .
    ...
    ...    2.Go to "Management" view.
    ...
    ...    4.Click on Respective Class and update the "instructor" & do save.
    ...
    ...    5.Handle If alert raises on techer titles mismatch by assigning titles.
    ...
    ...    6.SignOut & ReLogin with corresponding Teacher credentials.
    ...
    ...    7.Verify weaher the "Instructor" changed Class present or not.
    ...
    ...    8.Pass on respective Class not present in the respective list of Class.
    [Tags]    SCHOOL_ADMIN_33    MANAGEMNET_EDIT_THE_CLASS_CHANGE_THE_TEACHER    HIGH
    Run Keyword If    '${secondTeacherCreationStatus}'!='True'    Fail    PreRequisite for groups is not created / PreRequisite teacher is not created
    ${SA_UN}    Set Variable    ${preSchoolAdminID}
    ${SA_PWD}    Set Variable    ${preSchoolAdminPassword}
    ${Instructor_changing_Class}    Set Variable    @{preClassesList}[0]
    ${Old_Teacher}    Set Variable    ${preTeacherFirstName} ${preTeacherLastName}
    ${New_TA_FN}    Get From Dictionary    ${preTeacherDetails02}    FirstName
    ${New_TA_LN}    Get From Dictionary    ${preTeacherDetails02}    LastName
    ${New_Teacher}    Set Variable    ${New_TA_FN} ${New_TA_LN}
    ${Old_Teacher_UN}    Set Variable    ${preTeacherID}
    ${Old_Teacher_PWD}    Set Variable    ${preTeacherPassword}
    Comment    Login with School Admin Credentials.
    ${Login_Status}=    LoginToWizardApp    ${SA_UN}    ${SA_PWD}
    Run Keyword If    ${Login_Status}!=True    Capture Page Screenshot And Log    ${OUTPUTDIR}    LoginFail.png
    Run Keyword If    ${Login_Status}!=True    Fail    Failed to login with given credentials
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Change the Teacher for the class.
    Change the class Tutor Of a Class From School Admin    ${Instructor_changing_Class}    ${Old_Teacher}    ${New_Teacher}
    Comment    Verifing for the alert and handling the alert.
    ${alert_Status}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.Details.Alert}    5s
    Run Keyword If    ${alert_Status}==True    Handle alert and select titles on instructor change
    Comment    Waiting for the button 'Save'.
    Wait Until Element is Invisible    ${button.classDetails.save}
    Comment    Select the created record from the table.
    ${Rowno}=    Select The Record In Table    ${table.classesAndGroups}    Teacher    ${New_Teacher}
    Run Keyword If    '${Rowno}'=='0'    Fail    No ${New_Teacher} is selected for the class
    [Teardown]    Stop Application

ATC 145 - District admin-management edit the class,change the teacher
    [Documentation]    District Admin verifies weather the class is removed from old techer and added to the new teacher on changing the respective teacher of a Group.
    ...
    ...    1.Login as District Admin .
    ...
    ...    2.Go to "Management" view.
    ...
    ...    3.Click on Respective Class and update the "instructor" \ & do save.
    ...
    ...    4.Handle If alert raises on techer titles mismatch by assigning titles.
    ...
    ...    5.SignOut & ReLogin with corresponding Teacher credentials.
    ...
    ...    6.Verify weaher the "Instructor" changed Class present or not.
    ...
    ...    7.Pass on respective Class not present in the respective list of Classes.
    [Tags]    SCHOOL_ADMIN_34    MANAGEMENT_EDIT_THE_CLASS_CHANGE_THE_TEACHER    HIGH
    Run Keyword If    '${secondTeacherCreationStatus}'!='True' or '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite are not created
    ${DA_UN}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${DA_PWD}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${Instructor_changing_Class}    Set Variable    @{preClassesList}[1]
    ${Old_Teacher}    Set Variable    ${preTeacherFirstName} ${preTeacherLastName}
    ${New_TA_FN}    Get From Dictionary    ${preTeacherDetails02}    FirstName
    ${New_TA_LN}    Get From Dictionary    ${preTeacherDetails02}    LastName
    ${New_Teacher}    Set Variable    ${New_TA_FN} ${New_TA_LN}
    ${Old_Teacher_UN}    Set Variable    ${preTeacherID}
    ${Old_Teacher_PWD}    Set Variable    ${preTeacherPassword}
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login with valid Distrcit admin credentials.
    ${Login_Status}=    LoginToWizardApp    ${DA_UN}    ${DA_PWD}
    Run Keyword If    ${Login_Status}!=True    Capture Page Screenshot And Log    ${OUTPUTDIR}    LoginFail.png
    Run Keyword If    ${Login_Status}!=True    Fail    Failed to login with given credentials
    ${schoolNameStatus}    Select The School Name    ${schoolName}
    Run Keyword If    "${schoolNameStatus}"=="False"    Fail    School name is not selected from schools drop down menu.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Change the old teacher with new teacher for thr class.
    Change the class Tutor Of a Class From School Admin    ${Instructor_changing_Class}    ${Old_Teacher}    ${New_Teacher}
    Comment    Waiting for the alert present and handling alert.
    ${alert_Status}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.Details.Alert}    5s
    Run Keyword If    ${alert_Status}==True    Handle alert and select titles on instructor change
    Comment    Waiting for the save button invisible.
    Wait Until Element is Invisible    ${button.classDetails.save}
    Comment    Selecting the newly added record.
    ${Rowno}=    Select The Record In Table    ${table.classesAndGroups}    Teacher    ${New_Teacher}
    Run Keyword If    '${Rowno}'=='0'    Fail    No ${New_Teacher} is selected for the class
    [Teardown]    Stop Application

ATC 149 150 School Admin-New User Verify "Terms and Conditions" window is displayed first and Second time login
    [Documentation]    School Admin-New User Verify whether "Terms and Conditions" window is displayed when the user is first time logged into application and Verify whether "Terms and Conditions" window is not displayed when the user is second time logged into application.
    ...
    ...
    ...    Step1 : Login as School admin.
    ...
    ...    Step2 : Add new user (School Admin) in management.
    ...
    ...    Step3 : Login with new user (School Admin).
    ...
    ...    Step4 : Verify whether "Terms and Conditions" window is displayed when the user is first time logged into application, click on signout button.
    ...
    ...    Step5 : Verify whether "Terms and Conditions" window is not displayed when the user is second time logged into application.
    [Tags]    SCHOOL_ADMIN_37    HOME_NEW_USER_TERMS_AND_CONDITIONS    MEDIUM
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueVal}    GetUniqueValue    SA
    ${schoolAdmindetails}    Create Dictionary    User Name    qa4mme+${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Last Name    LN
    ${SALName}    Get From Dictionary    ${schoolAdmindetails}    Last Name
    ${SAFName}    Get From Dictionary    ${schoolAdmindetails}    First Name
    ${SAUid}    Get From Dictionary    ${schoolAdmindetails}    User Name
    ${SAPwd}    Get From Dictionary    ${schoolAdmindetails}    Password
    Comment    Login with valid School admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the frame School admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-2410 : Handle loading on navigation to management page.
    ${loadingStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}
    Run Keyword If    ${loadingStatus}    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Add School admin from the Management.
    ${roles}    Create List    SchoolAdmin
    ${adminUserId}    Add Role From Management    ${SAFName}    ${SALName}    ${SAUid}    ${SAPwd}    ${roles}
    Comment    Verifing the newly created School admin record displayed in Table .
    ${adminStatus}    Verify Values In Table    ${table.users}    Last Name    ${SALName}
    Run Keyword If    ${adminStatus}==False    Fail    The newly added user is not shown in the 'Users' table.
    Comment    School Admin Signout and Login with newly created School Admin credentials.
    Run Keyword If    '${BROWSER}'=='ie'    Close Browser
    Run Keyword If    '${BROWSER}'=='ie'    Open Browser    ${WizardURL}    ${BROWSER}
    Sleep    10s
    Run Keyword If    '${BROWSER}'=='ie'    Maximize Browser Window
    ${loginStatus}    Run Keyword If    '${BROWSER}'=='ie'    Enter Login Details    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'=='ie'    Fail    The user is not able to login with valid credentials.
    ${loginStatus}    Run Keyword If    '${BROWSER}'!='ie'    Signout And Relogin    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'!='ie'    Fail    The user is not able to login with valid credentials.
    Comment    MYS-2410 : Handle loading.
    ${loadingStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}
    Run Keyword If    ${loadingStatus}    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Wait and click on IAgree button
    Comment    MYS-2410 : To handle 'Enhancements' and 'Terms And Conditions' dialogs.
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enchancementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.window.Enhancements}
    Comment    Run Keyword If    '${enchancementStatus}'=='True'    Click On Element    //button[@id='mysAlertBtn']//parent::div[@id='alertOkBtn']
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    ${TimeOut}    Terms and conditions window is not displayed.
    Run Keyword If    ${bStatus}    Wait And Click Element    //button[@id='termsAndConditionsDlg-submit']
    Comment    Wait and click on IAgree button
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.SignUp.IAgreeBttn}    ${TimeOut}    "I Agree" button is not visible after clicking on "Terms And Conditions" button.
    Run Keyword If    ${bStatus}    Wait And Click Element    ${common.SignUp.IAgreeBttn}
    Wait Until Element is Invisible    ${common.SignUp.IAgreeBttn}
    Comment    Relogin with the same credentials
    Run Keyword If    '${BROWSER}'=='ie'    Close Browser
    Run Keyword If    '${BROWSER}'=='ie'    Open Browser    ${WizardURL}    ${BROWSER}
    Sleep    10s
    Run Keyword If    '${BROWSER}'=='ie'    Maximize Browser Window
    ${loginStatus}    Run Keyword If    '${BROWSER}'=='ie'    Enter Login Details    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'=='ie'    Fail    The user is not able to login with valid credentials.
    ${loginStatus}    Run Keyword If    '${BROWSER}'!='ie'    Signout And Relogin    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'!='ie'    Fail    The user is not able to login with valid credentials.
    Comment    Waiting for the 'IAgree' button.
    ${TermsStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    5s
    Run Keyword If    ${TermsStatus}    Fail    Terms and condition is visible for second time login
    [Teardown]    Stop Application

ATC151 152 School Admin- Verify whether "Terms and Conditions" window is displayed or not
    [Documentation]    School Admin and Teacher-New User Verify whether "Terms and Conditions" window is displayed when logged in with multiple role like Teacher and school admin for the first time.
    ...
    ...    School Admin and Teacher-New UserVerify whether "Terms and Conditions" window is displayed when logged in with multiple role like Teacher and school admin for the second time.
    ...
    ...    Step1 : Login as School admin.
    ...
    ...    Step2 : Add new users (School Admin and Teacher) in management.
    ...
    ...    Step3 : Login with Created new userID.
    ...
    ...    Step4 : Verify whether "Terms and Conditions" window is displayed when the user is first time logged into application, click on signout button.
    ...
    ...    Step5 : Verify whether "Terms and Conditions" window is not displayed when the user is second time logged into application.
    [Tags]    SCHOOL_ADMIN_38    HOME_NEW_USER_TERMS_AND_CONDITIONS    MEDIUM
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueVal}    GetUniqueValue    SA
    ${schoolAdmindetails}    Create Dictionary    User Name    qa4mme+${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Last Name    LN
    ${SALName}    Get From Dictionary    ${schoolAdmindetails}    Last Name
    ${SAFName}    Get From Dictionary    ${schoolAdmindetails}    First Name
    ${SAUid}    Get From Dictionary    ${schoolAdmindetails}    User Name
    ${SAPwd}    Get From Dictionary    ${schoolAdmindetails}    Password
    Comment    login into the Wizard application with SchoolAdmin Credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    Wait and click on management button.
    Navigate To Management Page
    Comment    Wait and select iframe of schooladmin in managemet page.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add newuser with multiple roles (SchoolAdmin,Teacher) from management.
    ${role}    Create List    SchoolAdmin    Teacher
    ${adminUserId}    Add Role from Management    ${SAFName}    ${SALName}    ${SAUid}    ${SAPwd}    ${role}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    Verify the Created newuser is displayed in table or not.
    Table Column Sorting    ${table.users}    Created    descend
    ${adminStatus}    Verify Values In Table    ${table.users}    Last Name    ${SALName}
    Run Keyword If    ${adminStatus}!=True    Fail    The newly added user is not shown in the 'Users' table.
    Comment    Signout from the application and relogin with the created newuser credentials.
    Run Keyword If    '${BROWSER}'=='ie'    Close Browser
    Run Keyword If    '${BROWSER}'=='ie'    Open Browser    ${WizardURL}    ${BROWSER}
    Sleep    10s
    Run Keyword If    '${BROWSER}'=='ie'    Maximize Browser Window
    ${loginStatus}    Run Keyword If    '${BROWSER}'=='ie'    Enter Login Details    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'=='ie'    Fail    The user is not able to login with valid credentials.
    ${loginStatus}    Run Keyword If    '${BROWSER}'!='ie'    Signout And Relogin    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'!='ie'    Fail    The user is not able to login with valid credentials.
    Comment    Wait and click on IAgree button
    Comment    MYS-2410 : To handle 'Enhancements' and 'Terms And Conditions' dialogs.
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enchancementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.window.Enhancements}
    Comment    Run Keyword If    '${enchancementStatus}'=='True'    Click On Element    //button[@id='mysAlertBtn']//parent::div[@id='alertOkBtn']
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    ${TimeOut}    Terms and conditions window is not displayed.
    Run Keyword If    ${bStatus}    Wait And Click Element    //button[@id='termsAndConditionsDlg-submit']
    Comment    Wait and click on IAgree button
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.SignUp.IAgreeBttn}    ${TimeOut}    "I Agree" button is not visible after clicking on "Terms And Conditions" button.
    Run Keyword If    ${bStatus}    Wait And Click Element    ${common.SignUp.IAgreeBttn}
    Wait Until Element is Invisible    ${common.SignUp.IAgreeBttn}
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    10s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Relogin with the same credentials verify terms and conditions window display or not
    Run Keyword If    '${BROWSER}'=='ie'    Close Browser
    Run Keyword If    '${BROWSER}'=='ie'    Open Browser    ${WizardURL}    ${BROWSER}
    Sleep    10s
    Run Keyword If    '${BROWSER}'=='ie'    Maximize Browser Window
    ${loginStatus}    Run Keyword If    '${BROWSER}'=='ie'    Enter Login Details    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'=='ie'    Fail    The user is not able to login with valid credentials.
    ${loginStatus}    Run Keyword If    '${BROWSER}'!='ie'    Signout And Relogin    ${adminUserId}    ${SAPwd}
    Run Keyword If    '${loginStatus}'=='False' and '${BROWSER}'!='ie'    Fail    The user is not able to login with valid credentials.
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    10s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    ${Status}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    5s
    Run Keyword If    ${Status}    Fail    "Terms and Conditions" window is displayed for second time login
    [Teardown]    Stop Application

ATC 153 School Admin-Verify whether Alert message is displayed when school admin creates multiple roles
    [Documentation]    School Admin-Verify whether Alert message is displayed when school admin creates multiple roles like (Student and Teacher).
    ...
    ...
    ...    Step1 : Login as School admin.
    ...
    ...    Step2 : Add new users (Student and Teacher) in management and click on save button.
    ...
    ...    Step3 : Verify whether Alert message is displayed or not.
    [Tags]    SCHOOL_ADMIN_39    MANAGEMENT_VERIFY_ALERT_MESSAGE_IS_DISPLAYED_ADMIN_ADD_DIFFERENT_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    comment    To get unique schoolAdmin Name.
    ${uniqueVal}    GetUniqueValue    SA
    ${schoolAdmindetails}    Create Dictionary    User Name    qa4mme+${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Last Name    LN
    ${SALName}    Get From Dictionary    ${schoolAdmindetails}    Last Name
    ${SAFName}    Get From Dictionary    ${schoolAdmindetails}    First Name
    ${SAUid}    Get From Dictionary    ${schoolAdmindetails}    User Name
    ${SAPwd}    Get From Dictionary    ${schoolAdmindetails}    Password
    Comment    Login to Wizard application using School Adminn credentials
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${loginStatus}'=='False'    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    comment    Wait and click on Management Button.
    Navigate To Management Page
    comment    Wait and select the iframe of SchoolAdmin
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${role}    Create List    Student    Instructor
    Comment    Verify Add two diff. roles(Teacher and student) from management.
    ${adminUserId}    Add Role from Management    ${SAFName}    ${SALName}    ${SAUid}    ${SAPwd}    ${role}
    Comment    Verify the Alert message is display or not.
    ${AlertMsgStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.Details.Alert}    30s
    Run Keyword If    ${AlertMsgStatus}!=True    Fail    Alert message box is not displayed.
    comment    Wait and click on Ok button.
    Wait And Click Element    ${button.Alert.OK}
    [Teardown]    Stop Application

ATC 160 DistrictAdmin - Verify whether district admin can Export & Print students of a class
    [Documentation]    DistrictAdmin - Verify whether district admin can Export & Print students of a class
    ...
    ...
    ...    Step1 : login as DistrictAdmin.
    ...
    ...    Step2 : Select the School.
    ...
    ...    Step3 : Export & print students in class from management.
    ...
    ...    Step4 : Verify whether district admin can Export & Print students of a class or not.
    [Tags]    SCHOOL_ADMIN_40    MANAGEMNET_VERIFY_PRINT_AND_EXPORT_USERS_OF_CLASS    HIGH
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${districtAdminUserID}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${districtAdminPWD}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${ClassName}    Set Variable    @{preClassesList}[0]
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    Comment    PrefixFilenmae and fileDirectory are exits in particular location.
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to Wizard application with Districtadmin credentials.
    ${loginStatus}    LoginToWizardApp    ${districtAdminUserID}    ${districtAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    DistrictAdmin- ${districtAdminPWD} logged in.
    ...    ELSE    Fail    Login failed for the DistrictAdmin- ${districtAdminPWD}
    ${schoolNameStatus}    Select The School Name    ${schoolName}
    Run Keyword If    "${schoolNameStatus}"=="False"    Fail    School name is not selected from schools drop down menu.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Export or print all users data of a class from management.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    Export or Print All Users Data    print    ${ClassName}
    ${title}    Get Window Titles
    List Should Contain Value    ${title}    Print Users    Print Users window is not displayed
    Select Window By Title    Print Users
    Wait Until Element Is Visible    ${table.schoolAdmin.printUsersTable}    ${TimeOut}
    Select Window By Title    @{title}[0]
    Reload Page
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Print/Export all users.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export    ${ClassName}
    Sleep    5s
    Save Exported File    ${fileDir}    ${lengthOFList}
    Comment    exporting users file.
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded
    [Teardown]    Stop Application

ATC 171-District Admin - Management Verify whether district admin can edit mandatory fields of any class
    [Documentation]    District Admin - Verify whether district admin can edit mandatory fields of any group.
    ...
    ...    Step1 : Login as a DistrictAdmin.
    ...
    ...    Step2 : Create Group from management.
    ...
    ...    Step3 : Verify whether district admin can edit mandatory fields of any group or not.
    [Tags]    SCHOOL_ADMIN_42    MANAGEMENT_VERIFY_ADMIN_CAN_EDIT_MANDATORY_FIELDS_OF_CLASS    HIGH
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    Comment    Run Keyword If    '${preGroupsScriptStatus}'!='True'    Fail    PreRequisite for groups is not created
    Run Keyword If    '${secondTeacherCreationStatus}'!='True'    Fail    PreRequisite teacher is not created
    ${districtAdminUserID}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${districtAdminPWD}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${oldTeacherFN}    Get From Dictionary    ${preTeacherDetails}    FirstName
    ${oldTeacherLN}    Get From Dictionary    ${preTeacherDetails}    LastName
    ${oldTeacherLNFN}    Set Variable    ${oldTeacherLN},${SPACE}${oldTeacherFN}
    ${New_TA_FN}    Get From Dictionary    ${preTeacherDetails02}    FirstName
    ${New_TA_LN}    Get From Dictionary    ${preTeacherDetails02}    LastName
    ${New_TA_LNFN}    Set Variable    ${New_TA_LN},${SPACE}${New_TA_FN}
    ${assignmentTitle}    Set Variable    ${preSignUpTitleMenu}
    ${titleList}    Create List    ${assignmentTitle}
    ${uniqueValue}    GetUniqueValue    classes
    ${Classes_List}    Set Variable    ${preClassesList}
    ${Classes_Name}    Set Variable    ClassChanged${uniqueValue}
    ${userStatusList}    Create List    true
    ${SchoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to Wizard application with Districtadmin credentials.
    ${loginStatus}    LoginToWizardApp    ${districtAdminUserID}    ${districtAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    DistrictAdmin- ${districtAdminPWD} logged in.
    ...    ELSE    Fail    Login failed for the DistrictAdmin- ${districtAdminPWD}
    ${schoolNameStatus}    Select The School Name    ${SchoolName}
    Run Keyword If    "${schoolNameStatus}"=="False"    Fail    School name is not selected from schools drop down menu.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To add a Group from management
    Add A Class Or Group    ${uniqueValue}    ${oldTeacherLNFN}
    Comment    To Edit the group details.
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${uniqueValue}
    Run Keyword If    '${rowNo}'==0    Fail    ${uniqueValue} record not found.
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    ${TimeOut}
    Wait And Click Element    ${button.classDetails.save}
    Comment    Edit Group details by changing group name and Teacher values.
    Edit The Class Or Group Details
    ${textBoxStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.classDetails.name}
    Run Keyword If    ${textBoxStatus}==True    Clear Text    ${text.classDetails.name}
    Enter Text In Text Field    ${text.classDetails.name}    ${Classes_Name}
    Selenium2Library.Mouse Down    ${table.classOrGroupDetails.groupLeader}
    Wait And Click Element    //div[@id='groupLeader_dropdown']//tbody//td[text()='${New_TA_LNFN}']
    ${AssignedTeacher}    Get Text    ${table.classOrGroupDetails.groupLeader}
    Run Keyword If    '${AssignedTeacher}'=='${New_TA_LNFN}'    Set Test Message    The tutor '${New_TA_LNFN}' has been assigned sucesfully to the group '${Classes_Name}'.
    Wait And Click Element    ${button.classDetails.save}
    ${alertstatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.Details.Alert}    10s
    Run Keyword If    ${alertstatus}==True    Fail    Alert message is not displayed.
    [Teardown]    Stop Application

ATC 174 Verify whether School admin is able to export students for a class
    [Documentation]    Login to wizard application as an district admin and navigate to manigate to management.
    ...    Click on the "Print/Export" button of the "All Users" table and select a class from the exhisting classes and some students to the class and click \ on the "Export". It should download an "users.csv" file with selected student details in it.
    ...
    ...    Precondition: Testcases "PreRequisite School Admin & Test Prerequisites" in the "Test Prerequisites" \ folder should be executed properly.
    [Tags]    SCHOOL_ADMIN_43    MANAGEMENT_VERIFY_ADMIN_ABLE_TO_EXPORT_STUDENTS_OF_CLASS    HIGH
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${className}    Set Variable    @{preClassesList}[0]
    ${studentUserIdList}    Create List    @{preStudentIds}[0]    @{preStudentIds}[1]
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Set Test Message    All the files in the downloads with prefix "${prefixFileName}" are not deleted.
    Comment    Login to wizard app as an district admin.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${schoolAdminUserID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUserID}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Export some students of a class
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export    ${className}    ${studentUserIdList}
    Sleep    10s
    Save Exported File    ${fileDir}    ${lengthOFList}
    Comment    Verify whether the exported file is downloaded or not
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    Exported student details is not downloaded
    Comment    Verify whether the downloaded csv contains the exported student details ore not.
    ${exportedStdUserIds}    Get Csv File Column Values Into List    ${expFileName}    User ID
    Remove From List    ${exportedStdUserIds}    0
    List Should Contain Sub List    ${exportedStdUserIds}    ${studentUserIdList}    All the students are not exported properly.
    [Teardown]    Stop Application

ATC175 School Admin - Management Verify whether School admin is able to export students for a school
    [Documentation]    SchoolAdmin-Verify whether school admin can Export & Print users of complete school.
    ...
    ...    Step1 : login as SchoolAdmin.
    ...
    ...    Step2 : Export & print students in school from management.
    ...
    ...    Step3 : Verify whether school admin can Export & Print users of complete school or not.
    [Tags]    SCHOOL_ADMIN_44    MANAGEMENT_EXPORTS_STUDENTS_FOR_A_SCHOOL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${schoolAdminPWD}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    Comment    Login to Wizard apllication with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To export or print the users data of School.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export
    Sleep    10s
    Save Exported File    ${fileDir}    ${lengthOFList}
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    Exported student details is not downloaded
    Comment    Verify whether the downloaded csv contains the exported student details ore not.
    ${exportedStdUserIds}    Get Csv File Column Values Into List    ${expFileName}    User ID
    Remove From List    ${exportedStdUserIds}    0
    List Should Contain Sub List    ${exportedStdUserIds}    ${preStudentIds}    All the students are not exported properly.
    Capture Whole Screen And Log    ${OUTPUTDIR}
    [Teardown]    Stop Application

ATC 184 -Verify whether alert is displayed or not when school admin adds diff. roles.
    [Documentation]    School Admin- Verify whether alert is displayed as "School Admins can only have a teacher role.All other roles are not allowed." when school admin adds all the Student,Teacher and School Admin roles in " New User" window.
    ...
    ...    Step1 : Login as a School Admin
    ...
    ...    Step2 : Add different roles like Student,School Admin and Teacher from management.
    ...
    ...    Step3 : Verify whether alert is displayed as "School Admins can only have a teacher role.All other roles are not allowed." when school admin adds all roles.
    [Tags]    SCHOOL_ADMIN_45    MANAGEMENT_VERIFY_ALERT_WHEN_ADD_ILLEGAL_COMBINATION_OF_ROLES    HIGH
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${uniqueVal}    GetUniqueValue    user
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of school Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${role}=    Create List    Student    Instructor    SchoolAdmin
    Comment    Creating new 'School Admin' by Checking the Checkboxes 'Student,Teacher,School Admin' roles.
    ${adminUserId}    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    qa4mme+${uniqueVal}    Password${uniqueVal}    ${role}
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}    "School Admins can only have a teacher role.All other roles are not allowed." message is displayed.
    Run Keyword If    '${alertStatus}'!='True'    Fail    The student and Teacher role added ,This is not an expected behaviour.
    Comment    wait and click on alert ok button
    Wait And Click Element    ${button.login.AlertMsg.Ok}
    Comment    wait and click on cancel button
    Wait And Click Element    ${button.newUser.Cancel}
    [Teardown]    Stop Application

ATC 185-Verify whether alert is displayed or not when school admin adds Student and Teacher roles.
    [Documentation]    Verify whether alert is displayed as "Teachers can only have a teacher role.All other roles are not allowed." when school admin adds Student and Teacher roles in " New User" window
    ...
    ...
    ...    Step1 : Login as a School Admin
    ...
    ...    Step2 : Add different roles like Student and Teacher from management.
    ...
    ...    Step3 : Verify whether alert is displayed as "Teachers can only have a teacher role.All other roles are not allowed." when school admin adds Student and Teacher roles in " New User" window
    [Tags]    SCHOOL_ADMIN_46    MANAGEMENT_VERIFY_ALERT_WHEN_ADD_TEACHER_AND_STUDENT_ROLES    HIGH
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${uniqueVal}    GetUniqueValue    user
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of school Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${role}=    Create List    Instructor    Student
    Comment    Creating new 'School Admin' by Checking the Checkboxes 'Student and Teacher' roles.
    ${adminUserId}    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    qa4mme+${uniqueVal}    Password${uniqueVal}    ${role}
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}    "Teachers can only have a teacher role.All other roles are not allowed." message is displayed.
    Run Keyword If    '${alertStatus}'!='True'    Fail    The student and Teacher role added ,This is not an expected behaviour.
    Comment    wait and click on alert ok button
    Wait And Click Element    ${button.login.AlertMsg.Ok}
    Comment    wait and click on cancel button
    Wait And Click Element    ${button.newUser.Cancel}
    [Teardown]    Stop Application

ATC 186-Verify whether password is displayed not more than 8 seconds when "Show Password" button is clicked
    [Documentation]    Verify whether password is displayed not more than 8 seconds when "Show Password" button is clicked for any user.
    ...
    ...    Step1 : Login as a school admin
    ...
    ...    Step2 : Select any user from records.
    ...
    ...    Step3 : Verify whether password is displayed not more than 8 seconds when "Show Password" button is clicked for any user or not.
    [Tags]    SCHOOL_ADMIN_47    MANAGEMENT_VERIFY_PASSWORD_SHOW_TIME    MEDIUM
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    The School Admin creation test case was failed.
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of school Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To select the user from the Record.
    Select The Record    ${table.users}    Role    Student
    Comment    wait and click on edit button.
    Wait And Click Element    ${button.classesAndUsers.Edit}
    Comment    wait and click on show password button.
    Wait And Click Element    ${button.users.showPassword}
    Comment    wait until password: is visible
    Wait Until Element Is Visible    ${label.users.passwordLabel}    8s
    Comment    wait and click on save button.
    Wait And Click Element    ${button.Details.Save}
    [Teardown]    Stop Application

ATC 187 School Admin -Verify whether error Msg is displayed when invalid userid/password are imported.
    [Documentation]    School Admin -Verify whether error window is displayed as "Row 1 Column Password () is invalid: User ID and Password are equal." when same userid and password are imported.
    ...
    ...    Step1 : Login as a School Admin
    ...
    ...    Step2 : Import student with same userID and password.
    ...
    ...    Step3 : Verify whether error window is displayed as "Row 1 Column Password () is invalid: User ID and Password are equal." when same userid and password are imported.
    [Tags]    SCHOOL_ADMIN_48    IMPORT_USER_WITH_INVALID_USERID_PASSWORD    HIGH
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    The School Admin creation test case was failed.
    ${SchoolAdminUid}    Set Variable    ${preSchoolAdminID}
    ${SchoolAdminPwd}    Set Variable    ${preSchoolAdminPassword}
    ${SchoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${studentUserId}    GetUniqueValue    student
    ${studentDetails}    Create Dictionary    User ID    ${studentUserId}    Password    ${studentUserId}    First Name
    ...    studentfn    Middle Name    studentmn    Last Name    studentln    Grade Level
    ...    10    Role    student    School    ${SchoolName}
    ${schoolDetails}    Create Dictionary    1    ${studentDetails}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC166.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Upload Students From CSV    ${filePath}
    Remove File    ${filePath}
    Comment    Verify whether the import displays an error or not
    ${errorMsgStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${impUsersMsg}    ${EMPTY}
    Run Keyword If    ${errorMsgStatus}    Fail    The import is accepting the student details which have same userid and password.
    Comment    Verify whether the import students displays the expected error msg for student data with same userid and password.
    ${expectedErrMsg}    Set Variable    Password (${studentUserId}) is invalid: User ID and Password are equal
    ${errMsgStatus}    String Should Contain    ${impUsersMsg}    ${expectedErrMsg}
    Run Keyword Unless    ${errMsgStatus}    Fail    The expected error msg is "${expectedErrMsg}". But it displays ${impUsersMsg} msg.
    [Teardown]    Stop Application

ATC 173 Distrcit Admin-Verify class code information is displayed when clicked on "Class Code"
    [Documentation]    ATC 173 Distrcit Admin-Verify class code information is displayed when clicked on "Class Code".
    ...    Step1:Login with valid District Admin credentials.and Navigate to 'Management'.
    ...    Step2:Create Class with Details and capture the classcode.
    ...    Step3:Select the record in table of created classcode.
    ...    Step4: Verify class code information is displayed when clicked on "Class Code".
    ...
    ...
    ...
    ...    If district admin Credentials are not available,use" Userid:qa4mme+da163827551000391@gmail.com
    ...    Pwd:test012345" for "http://b11test1.mentoringmindsonline.com".
    [Tags]    SCHOOL_ADMIN_50    MANAGEMENT_CLASS_CODE_INFO    MEDIUM
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${districtAdminUserId}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${districtAdminPassword}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${SchoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    District Admin Signin to the Application with Valid Credentials.
    ${loginStatus}    LoginToWizardApp    ${districtAdminUserId}    ${districtAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Select The School Name    ${SchoolName}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of District Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${className}    Get Unique Value    DataClass
    ${description}    Set Variable    Added by QA
    Comment    Click on add button to add class.
    Wait And Click Element    ${button.newGroup.Add}
    Comment    Enter Class name,Description and click on OK.
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Wait And Click Element    ${button.newGroup.Ok}
    Comment    Verifing Ok button is Invisible or not in ${TimeOut}.
    Wait Until Element is Invisible    ${button.newGroup.Ok}    ${TimeOut}
    Comment    Getting newly created Class code.
    ${createdClassCode}    Get Text    ${text.management.createdClassCode}
    Comment    Verifing newly added class is visible in 10s.
    Wait Until Element Is Visible    ${table.classesAndGroups}//td[text()='${createdClassCode}']    10s    Newly added class ${createdClassCode} is not displayed within 10 sec in Class List
    Comment    Selecting The Record of Role "${roleName}".
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${rowNo}==0    Fail    The newelly added user is not visible in users table.
    Comment    Getting values of the "entered class name and description" .
    ${classNameDisplayed}    Get Value    ${text.newClass.Name}
    ${descriptionDisplayed}    Get Value    ${text.newGroup.Description}
    Comment    Comparing "Entered classname and description" with "Displayed classname and description".if Both are different testcase fail.
    Should Be Equal    ${className}    ${classNameDisplayed}    "${className},${classNameDisplayed}" are different
    Should Be Equal    ${description}    ${descriptionDisplayed}    "${description},${descriptionDisplayed}" are different
    [Teardown]    Stop Application

ATC 181 Verify whether school admin can delete student,teacher,school admin and teacher,school admin roles.
    [Documentation]    School Admin-Verify whether school admin can delete student,teacher,school admin and teacher,school admin roles.
    ...
    ...    Step1 : Login as School Admin.
    ...
    ...    Step2 : Add different roles (Student,Teacher,SchoolAdmin and Teacher,SchoolAdmin) from management.
    ...
    ...    Step3 : Delete created roles from the table.
    ...
    ...    Step4 : Verify whether school admin can delete student,teacher,school admin and teacher,school admin roles or not.
    [Tags]    SCHOOL_ADMIN_51    MANAGEMENT_DELETE_DIFFERENT_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${testData}    GetUniqueValue    user
    ${userFN}    Set Variable    FN${testData}
    ${userLN}    Set Variable    LN${testData}
    ${userUID}    Set Variable    qa4mme+${testData}@gmail.com
    ${userPWD}    Set Variable    qa4mme+${testData}
    ${userStatusList}    Create List    true
    ${teacherRole}    Set Variable    Instructor
    ${schoolAdminRole}    Set Variable    SchoolAdmin
    ${roles}    Create List    ${teacherRole}    ${schoolAdminRole}
    ${rolesCount}    Get Length Of List    ${roles}
    ${mandatoryList}=    Create List    ${userFN}    ${userLN}    ${userUID}    ${userPWD}
    comment    Login to Wizard application with SchoolAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    To navigate to management page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${role_List}    Create List    ${roles}    Student    SchoolAdmin    Teacher
    : FOR    ${each_Role}    IN    @{role_List}
    \    ${uniqueVal}    GetUniqueValue    SDTUserDeleteTest
    \    comment    To add different roles from management table.
    \    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    qa4mme+${uniqueVal}    Password${uniqueVal}    ${each_Role}
    \    ...    \    6
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${status}    Verify Values In Table    ${table.users}    Last Name    LN${uniqueVal}
    \    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    \    comment    To delete all created roles from the Record.
    \    Run Keyword If    ${status}    Delete The Record From table    ${table.users}    Last Name    LN${uniqueVal}
    \    ...    User
    \    Sleep    10s
    \    Comment    Verify whether district admin is able to delete the Student,SchoolAdmin,DistrictAdmin users.
    \    ${status}    Verify Values In Table    ${table.users}    Last Name    LN${uniqueVal}
    \    Run Keyword And Continue On Failure    Run Keyword If    ${status}==True    Fail    The new user with ${each_Role} role was not deleted from users table.
    \    Comment    ${role_List}    Create List    Teacher
    Comment    To add Teacher role from management.
    Comment    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    ${uniqueVal}    Password${uniqueVal}    Teacher
    Comment    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}
    Comment    Run Keyword If    '${alertStatus}'!='True' and '${each_Role}'=='Teacher'    Fail    The Teacher role added ,This is not an expected behaviour.
    Comment    Wait And Click Element    ${button.login.AlertMsg.Ok}
    Comment    Wait And Click Element    ${button.newUser.Cancel}
    Comment    Enter user details to add new role (Teacher,schooladmin).
    Comment    Enter User Details    ${mandatoryList}
    Comment    : FOR    ${role}    IN    @{roles}
    Comment    \    ${roleStatus}    Set Variable    newUserRole${role}
    Comment    \    Wait And Click Element    //input[@name='newUserRole${role}']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Comment    Wait And Click Element    ${button.newUser.oK}
    Comment    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    ${bStatus}    Verify Values In Table    ${table.users}    Last Name    ${userLN}
    Comment    Run Keyword Unless    ${bStatus}    Fail    Added User ${userLN} is not displayed in the Users list
    Comment    comment    To delete the new role from the table.
    Comment    Delete The Record From table    ${table.users}    Last Name    ${userLN}    User
    Comment    ${bRoleStatus}=    Verify Values In Table    ${table.users}    Last Name    ${userLN}
    Comment    Run Keyword If    ${bRoleStatus}    Fail    The role is not deleted.
    [Teardown]    Stop Application

ATC 188 School Admin-Verify error window is displayed for invalid Grade Level (15) user.
    [Documentation]    Verify whether error window is displayed as "Row 1 Column Grade Level (15) is invalid: Contains invalid characters." when grade other K or 1 to 12 is imported.
    ...
    ...
    ...    Step1 : Login as a school admin.
    ...
    ...    Step2 : To upload invalid student grade levels.
    ...
    ...    Step3 : Verify whether error window is displayed as "Row 1 Column Grade Level (15) is invalid: Contains invalid characters." when grade other K or 1 to 12 is imported or not.
    [Tags]    SCHOOL_ADMIN_52    IMPORT_USER_WITH_INVALID_GRADE_LEVEL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Set Variable    ${preSchoolAdminID}
    ${SchoolAdminPwd}    Set Variable    ${preSchoolAdminPassword}
    ${SchoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to upload invalid student grade level
    ${student1UserId}    GetUniqueValue    student
    ${student1Pwd}    GetUniqueValue    password
    ${student2UserId}    GetUniqueValue    student
    ${student2Pwd}    GetUniqueValue    password
    ${student3UserId}    GetUniqueValue    student
    ${student3Pwd}    GetUniqueValue    password
    ${studentDetails1}    Create Dictionary    User ID    ${student1UserId}    Password    ${student1Pwd}    First Name
    ...    student1fn    Middle Name    student1mn    Last Name    studen1tln    Grade Level
    ...    2    Role    student    School    ${SchoolName}
    ${studentDetails2}    Create Dictionary    User ID    ${student2UserId}    Password    ${student2Pwd}    First Name
    ...    student2fn    Middle Name    student2mn    Last Name    studen2tln    Grade Level
    ...    k    Role    student    School    ${SchoolName}
    ${studentDetails3}    Create Dictionary    User ID    ${student3UserId}    Password    ${student3Pwd}    First Name
    ...    student3fn    Middle Name    student3mn    Last Name    studen3tln    Grade Level
    ...    15    Role    student    School    ${SchoolName}
    ${schoolDetails}    Create Dictionary    1    ${studentDetails1}    2    ${studentDetails2}    3
    ...    ${studentDetails3}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC188.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Upload Students From CSV    ${filePath}
    Remove File    ${filePath}
    Comment    Verify whether the import displays an error or not
    ${errorMsgStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${impUsersMsg}    ${EMPTY}
    Run Keyword If    ${errorMsgStatus}    Fail    The import is accepting the student details which have same userid and password.
    ${expectedErrMsg}    Set Variable    Column Grade Level (15) is invalid: Grade level contains invalid characters.
    ${errMsgStatus}    String Should Contain    ${impUsersMsg}    ${expectedErrMsg}
    Run Keyword Unless    ${errMsgStatus}    Fail    The expected error msg is "${expectedErrMsg}". But it displays ${impUsersMsg} msg.
    [Teardown]    Stop Application

ATC 189 School Admin-Verify whether error window is displayed with invalid User ID or same userid is imported.
    [Documentation]    Verify whether error window is displayed as "Row 1 Column User ID () is invalid: This User ID already exists." when same userid is imported.
    ...
    ...    Step1 : Login as a School admin.
    ...
    ...    Step2 : Try to import student details with already existing userid.
    ...
    ...    Step3 : Verify whether error window is displayed as "Row 1 Column User ID () is invalid: This User ID already exists." when same userid is imported or not.
    [Tags]    SCHOOL_ADMIN_53    IMPORT_USERS_WITH_INVALID_USER_NAME    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${SchoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to import student details with already existing userid.
    ${student1UserId}    GetUniqueValue    student
    ${studentDetails1}    Create Dictionary    User ID    ${student1UserId}    Password    password123    First Name
    ...    ${student1UserId}    Middle Name    ${student1UserId}    Last Name    ${student1UserId}    Grade Level
    ...    2    Role    student    School    ${SchoolName}
    ${studentDetails2}    Create Dictionary    User ID    ${student1UserId}    Password    password1234    First Name
    ...    ${student1UserId}    Middle Name    ${student1UserId}    Last Name    ${student1UserId}    Grade Level
    ...    2    Role    student    School    ${SchoolName}
    ${schoolDetails}    Create Dictionary    1    ${studentDetails1}    2    ${studentDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC168.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Upload Students From CSV    ${filePath}
    Remove File    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC168.csv
    Comment    Verify whether the import displays an error or not
    Log    ${impUsersMsg}
    ${errorMsgStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${impUsersMsg}    ${None}
    Run Keyword If    ${errorMsgStatus}    Fail    The import is accepting the students who are having same userid.
    Comment    Verify whether it displays expected error message or not.
    ${expectedErrMsgUserIdTaken}    Set Variable    Column User ID (${student1UserId}) is invalid: This User ID is already taken
    ${errMsgIdTakenStatus}    String Should Contain    ${impUsersMsg}    ${expectedErrMsgUserIdTaken}
    Run Keyword If    '${errMsgIdTakenStatus}'!='True'    Fail    The displayed errormsg is not matching with the expected one.
    [Teardown]    Stop Application

ATC 193 Verify whether class code information is displayed when clicked on "Class Code"
    [Documentation]    School admin-Verify whether class code information is displayed when clicked on "Class Code".
    ...
    ...
    ...    Step1 : Login as a school admin.
    ...
    ...    Step 2 : Click on class code from the management page.
    ...
    ...    Step3 : Verify whether class code information is displayed when clicked on "Class Code" or not.
    [Tags]    SCHOOL_ADMIN_54    MANAGEMENT_CLASS_CODE_INFO    MEDIUM
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    Comment    School Admin Signin to the Application with Valid Credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${className}    Get Unique Value    DataClass
    ${description}    Set Variable    Added by QA
    Comment    Click on add button to add class.
    Wait And Click Element    ${button.newGroup.Add}
    Comment    Enter Class name,Description and click on OK.
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Wait And Click Element    ${button.newGroup.Ok}
    Comment    Verifing Ok button is Invisible or not in ${TimeOut}.
    Wait Until Element is Invisible    ${button.newGroup.Ok}    ${TimeOut}
    Comment    Getting newly created Class code.
    ${createdClassCode}=    Get Text    ${text.management.createdClassCode}
    Comment    Verifing newly added class is visible in 10s.
    Run Keyword And Continue On Failure    Wait Until Element Is Visible    ${table.classesAndGroups}//td[text()='${createdClassCode}']    10s    Newly added class ${createdClassCode} is not displayed within 10 sec in Class List
    Table Column Sorting    ${table.classesAndGroups}    Created    descend
    Comment    Selecting The Record of Role "${roleName}".
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${rowNo}==0    Fail    The newelly added user is not visible in users table.
    Comment    Getting values of the "entered class name and description" .
    ${classNameDisplayed}=    Get Value    ${text.newClass.Name}
    ${descriptionDisplayed}=    Get Value    ${text.newGroup.Description}
    Comment    Comparing "Entered classname and description" with "Displayed classname and description".if Both are different testcase fail.
    Should Be Equal    ${className}    ${classNameDisplayed}    "${className},${classNameDisplayed}" are different
    Should Be Equal    ${description}    ${descriptionDisplayed}    "${description},${descriptionDisplayed}" are different
    [Teardown]    Stop Application

ATC 195 - Verify whether School admin is able to export students for a school
    [Documentation]    ATC 195 - Verify whether School Admin is able to export students for a school
    ...
    ...    Precondition: Classes and students should be created
    ...
    ...    Step 1 : Login as school admin and navigate to Management
    ...
    ...    Step 2 : Click on Export/Print button
    ...
    ...    Step 3 : Select the 'whole class' from dropdown list and select available students then click on Export button.
    ...
    ...    Step 4: Verify whether School admin is able to export students for a school
    [Tags]    SCHOOL_ADMIN_55    MANAGEMENT_EXPORT_STUDENTS_FOR_SCHOOL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${schoolAdminPWD}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${studentList}    Set Variable    ${preStudentIds}
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    comment    Login to Wizard apllication with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to 'Management' page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To export or print the users data of School.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export    \    ${studentList}
    Sleep    10s
    Save Exported File    ${fileDir}    ${lengthOFList}
    Comment    To Exported File with prefixfilename in Directory
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded
    Comment    Verify whether the downloaded csv contains the exported student details ore not.
    ${exportedStdUserIds}    Get Csv File Column Values Into List    ${expFileName}    User ID
    List Should Contain Sub List    ${exportedStdUserIds}    ${studentList}    All the students are not exported properly.
    Capture Whole Screen And Log    ${OUTPUTDIR}
    [Teardown]    Stop Application

ATC 197 Verify whether School admin cannot create duplicate class for a teacher.
    [Documentation]    Verify whether School admin cannot create duplicate class for a teacher.
    ...
    ...    Step1:Login with valid school Admin credentials.and Navigate to 'Management'.
    ...
    ...    Step2:Create Class with Details and capture the classname.
    ...
    ...    Step3:Try to create another class with same classname.
    ...
    ...    Step4: Verify whether school admin cannot create duplicate class for a teacher.
    [Tags]    SCHOOL_ADMIN_56    MANAGEMENT_CANT_CREATE_DUPLICATE_CLASS_FOR_TEACHER    HIGH
    ${schoolAdminUserId}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPassword}    Set Variable    ${preSchoolAdminPassword}
    Comment    School Admin Signin to the Application with Valid Credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserId}    ${schoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Get unique classname.
    ${className}    Get Unique Value    Class
    ${description}    Set Variable    Added by QA
    Wait And Click Element    ${button.newGroup.Add}
    Comment    Enter Class name,Description and click on OK.
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Wait And Click Element    ${button.newGroup.Ok}
    Wait And Click Element    ${button.newGroup.Add}
    Comment    Enter Class name,Description and click on OK.
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Wait And Click Element    ${button.newGroup.Ok}
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert message is not displayed
    Run Keyword If    ${tooltipStatus}    Should Contain    ${toolTipMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    Comment    Comment    Verifing newly added class is visible in 10s.
    Comment    Wait Until Element Is Visible    ${table.classesAndGroups}//td[text()='${className}']    10s    Newly added class ${className} is not displayed within 10 sec in Class List
    Comment    Comment    Click on add button to add class.
    Comment    Wait And Click Element    ${button.newGroup.Add}
    Comment    Comment    Enter Class name,Description and click on OK.
    Comment    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Comment    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Comment    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Comment    Wait And Click Element    ${button.newGroup.Ok}
    Comment    Getting Text of Alert Mesaage and click on OK button of Alert.
    Comment    Wait Until Element Is Visible    ${text.Details.Alert}    10s
    Comment    ${alert}=    Get Text    ${text.Details.Alert}
    Comment    Comment    Handling the alert.
    Comment    Wait And Click Element    ${button.Alert.OK}
    Comment    Comment    Verifing the text of Alert "Group name is not valid."message.
    Comment    ${bStatus}=    String Should Contain    ${alert}    Class name already exists
    Comment    Run Keyword If    ${bStatus}!=True    Fail    Alert "Class name is not valid. " is not displayed when selecting roles and Student and Teacher and Click on Save button .
    [Teardown]    Stop Application

ATC 155 Verify whether Delete and Edit button are disabled when select the District Admin
    [Documentation]    School Admin-Verify whether "Edit" button is disabled in "Details" frame and "Delete" button is disabled in "All Users" frame when"District Admin" is selected in "All Users" frame.
    ...
    ...    Step1 : Login as School Admin.
    ...
    ...    Step2 : Click on mangement adn select Distric admin Role from users table.
    ...
    ...    Step3 : Verify whether the Delete and Edit button is in disabled mode when select the Distric Admin role or not.
    [Tags]    SCHOOL_ADMIN_57    MANAGEMENT_CANT_DELETE_AND_EDIT_DISTRICT_ADMIN    HIGH
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${schoolAdminUserId}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPassword}    Set Variable    ${preSchoolAdminPassword}
    ${DistrictAdminUid}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${DistrictAdminPwd}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${uniqueVal}    GetUniqueValue
    ${loginStatus}    LoginToWizardApp    ${DistrictAdminUid}    ${DistrictAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    DistrictAdmin- ${DistrictAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the DistrictAdmin-${DistrictAdminUid}
    Select The School Name    ${selectingSchool}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add Role From Management    ${uniqueVal}FN    ${uniqueVal}LN    qa4mme+da${uniqueVal}    ${uniqueVal}pwd    District Admin
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${DistrictAdminLN}    Set Variable    ${uniqueVal}LN
    Wait Until Element Is Visible    ${text.management.search}    ${TimeOut}
    Input Text    ${text.management.search}    ${DistrictAdminLN}
    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${DistrictAdminLN}    False
    Run Keyword If    "${rowNo}"=="0"    Fail    District admin record is not displayed in management page.
    Comment    School Admin Signin to the Application with Valid Credentials.
    ${loginStatus}    Signout And Relogin    ${schoolAdminUserId}    ${schoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Comment    "Created" column name is sorted in descending order.
    Comment    Table Column Sorting    ${table.users}    Last Name    ${DistrictAdminLN}
    Comment    Comment    @{Selecting The Record of Role "${roleName}".}
    Comment    Select The Record In Table    ${table.users}    Role    District Admin
    Wait Until Element Is Visible    ${text.management.search}    ${TimeOut}
    Input Text    ${text.management.search}    ${DistrictAdminLN}
    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${DistrictAdminLN}    False
    Run Keyword If    "${rowNo}"=="0"    Fail    No District Admin role has found which is created from respective Schools's district admin.
    ${statusDelete}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.disabledDelete}    ${TimeOut}
    Run Keyword If    '${statusDelete}'!='True'    Fail    Delete button is in enable mode.
    ${statusEdit}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.disabledEdit}    ${TimeOut}
    Run Keyword If    '${statusEdit}'!='True'    Fail    Edit button is in enable mode.
    [Teardown]    Stop Application

ATC 154 Create School Admin and Teacher combination role from Management
    [Documentation]    Create School Admin and Teacher combination role from Management.
    ...
    ...    Step1 : Login as School Admin.
    ...
    ...    Step2 : Add newuser (Teacher,School Admin) from mangement.
    ...
    ...    Step3 : Verify wether School Admin,Teacher combination role is created or not.
    [Tags]    SCHOOL_ADMIN_58    MANAGEMENT_VERIFY_CAN_CREATE_COMBINATION_ROLES_TEACHER_SCHOOL_ADMIN    MEDIUM
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${uniqueValue}    GetUniqueValue    newuser
    ${SALName}    Set Variable    LN${uniqueValue}
    ${SAFName}    Set Variable    FN${uniqueValue}
    ${SAUid}    Set Variable    qa4mme+${uniqueValue}
    ${SAPwd}    Set Variable    ${uniqueValue}123
    ${teacherRole}    Set Variable    Instructor
    ${schoolAdminRole}    Set Variable    SchoolAdmin
    ${roles}    Create List    ${teacherRole}    ${schoolAdminRole}
    ${rolesCount}    Get Length Of List    ${roles}
    comment    Login to wizard application with School admin credentials
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    Navigate to management page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    comment    To add combination role(School Admin,Teacher) from mangement.
    Add Role From Management    ${SAFName}    ${SALName}    ${SAUid}    ${SAPwd}    ${roles}
    comment    To wait untill Ok button is invisible.
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    LN${uniqueValue}
    Run Keyword And Continue On Failure    Run Keyword If    '${status}'!='True'    Fail    The new user role not added.
    [Teardown]    Stop Application

ATC 194 - Verify whether School admin is able to export students for a class
    [Documentation]    ATC 94 - Verify whether School Admin is able to export students for a class
    ...
    ...    Precondition: Class should be created and students should be \ assigned to that class
    ...
    ...    Step 1 : Login as school admin and navigate to Management
    ...
    ...    Step 2 : Click on Export/Print button
    ...
    ...    Step 3 : Select the created class from dropdown list and select available students then click on Export button.
    ...
    ...    Step 4: Verify whether School admin is able to export students for a class
    [Tags]    SCHOOL_ADMIN_59    MANAGEMENT_EXPORT_STUDENT_OF_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    @{preClassesList}    Set Variable    ${preClassesList}
    ${className}    Set Variable    @{preClassesList}[0]
    Comment    MYS-2514 : Updated script to take student useId's as a list
    Comment    MYS-3329:Updated with copylist keyword to recognize a proper interpretation of global variable as a list type.
    ${preStudentsIDsList}    Copy List    ${preStudentIds}
    Comment    Login to wizard app as an school admin.
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    Comment    PrefixFilenmae and fileDirectory are exits in particular location.
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    Comment    Login to Wizard application with Districtadmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    DistrictAdmin- ${schoolAdminPWD} logged in.
    ...    ELSE    Fail    Login failed for the DistrictAdmin- ${schoolAdminPWD}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Export or print all users data of a class from management.
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export    ${className}    ${preStudentsIDsList}
    Sleep    5s
    Save Exported File    ${fileDir}    ${lengthOFList}
    Comment    Verify whether the exported file is downloaded or not
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    Exported student details is not downloaded
    Comment    Verify whether the downloaded csv contains the exported student details or not.
    ${exportedStdUserIds}    Get Csv File Column Values Into List    ${expFileName}    User ID
    List Should Contain Sub List    ${exportedStdUserIds}    ${preStudentsIDsList}    All the students are not exported properly.
    [Teardown]    Stop Application

ATC 191 Verify whether school admin can edit mandatory fields of any class.
    [Documentation]    Verify whether school admin can edit mandatory fields of any class.
    ...
    ...    Step1 : Login as a school admin.
    ...
    ...    Step2 : To edit the class details from management page.
    ...
    ...    Step3 : Verify whether school admin can edit mandatory fields of any class or not.
    [Tags]    SCHOOL_ADMIN_60    MANAGEMENT_EDIT_MANDATORY_FIELDS_OF_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    Comment    Run Keyword If    '${preGroupsScriptStatus}'!='True'    Fail    PreRequisite for groups is not created
    Run Keyword If    '${secondTeacherCreationStatus}'!='True'    Fail    PreRequisite teacher is not created
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${oldTeacherFN}    Get From Dictionary    ${preTeacherDetails}    FirstName
    ${oldTeacherLN}    Get From Dictionary    ${preTeacherDetails}    LastName
    ${oldTeacherLNFN}    Set Variable    ${oldTeacherLN},${SPACE}${oldTeacherFN}
    ${New_TA_FN}    Get From Dictionary    ${preTeacherDetails02}    FirstName
    ${New_TA_LN}    Get From Dictionary    ${preTeacherDetails02}    LastName
    ${New_TA_LNFN}    Set Variable    ${New_TA_LN},${SPACE}${New_TA_FN}
    ${assignmentTitle}    Set Variable    ${preSignUpTitleMenu}
    ${titleList}    Create List    ${assignmentTitle}
    ${uniqueValue}    GetUniqueValue    class
    ${Classes_List}    Set Variable    ${preClassesList}
    ${Classes_Name}    Set Variable    ClassChanged${uniqueValue}
    ${userStatusList}    Create List    true
    comment    Login to Wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    School Admin- ${schoolAdminPWD} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin- ${schoolAdminPWD}
    comment    To navigate to management page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    comment    To add a Class from management
    Add A Class Or Group    ${uniqueValue}    ${oldTeacherLNFN}
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${uniqueValue}
    Run Keyword If    '${rowNo}'==0    Fail    ${uniqueValue} record not found.
    comment    To Edit the group details.
    Edit The Class Or Group Details
    comment    To edit titels.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    ${TimeOut}
    Wait And Click Element    ${button.classDetails.save}
    comment    Enter the new group name.
    Edit The Class Or Group Details
    ${textBoxStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.classDetails.name}
    Run Keyword If    ${textBoxStatus}==True    Clear Text    ${text.classDetails.name}
    comment    To enter the class name
    Enter Text In Text Field    ${text.classDetails.name}    ${Classes_Name}
    Selenium2Library.Mouse Down    ${dropdown.Classdetails.Teacherdrpdwn}
    Wait And Click Element    //div[@id='groupLeader_dropdown']//tbody//td[text()='${New_TA_LNFN}']
    ${AssignedTeacher}    Get Text    ${table.classOrGroupDetails.groupLeader}
    Run Keyword If    '${AssignedTeacher}'=='${New_TA_LNFN}'    Set Test Message    The tutor '${New_TA_LNFN}' has been assigned sucesfully to the group '${Classes_Name}'.
    Wait And Click Element    ${button.classDetails.save}
    ${alertstatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.Details.Alert}    10s
    Run Keyword If    '${alertstatus}'=='True'    Fail    Alert messsage is not displayed.
    [Teardown]    Stop Application

ATC 99 School Admin-Verify whether users are imported in 10 seconds
    [Documentation]    School Admin-Verify whether users are imported in 10 seconds
    ...
    ...    Step1 : Login as School Admin.
    ...
    ...    Step2 : Click on Import users and upload CSV file.
    ...
    ...    Step3 : Verify whether users are imported in 10 seconds or not.
    [Tags]    SCHOOL_ADMIN_61    VERIFY_IMPORT_USERS_PERFORMANCE_TEST    MEDIUM
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${sheetName}    Set Variable If    ${isDemoQURL}    DemoQStudentDetails    StudentDetails
    Comment    Login to wizard application with School admin credentials
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${impUsersMsg}    Set Variable    Import Users Functionality Failed
    Create Csv File Using Ms Excel File    ${Upload Users Teamplate}    ${Import Users Template}    ${sheetName}
    comment    To upload students from CSV
    ${uploadStatus}    Upload Students From CSV    ${Upload Users Teamplate}
    ${uploadStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.importTemplate.importSuccessMsg}    10s
    Run Keyword If    '${uploadStatus}'!='True'    Fail    ${impUsersMsg}
    Set Test Message    ${impUsersMsg}
    [Teardown]    Stop Application

ATC 192 Verify whether school admin can edit details of diff. Roles.
    [Documentation]    Verify whether school admin can edit details of below Roles. 1.Student 2.Teacher 3.School Admin 4.School Admin and Teacher.
    ...
    ...    Step1 : Login as a school admin.
    ...
    ...    Step2 : To edit the \ diff. (Student,Teacher,SchoolAdmin,School admin,Teacher) user details from management.
    ...
    ...    Step3 : Verify whether school admin can edit details of below Roles. 1.Student 2.Teacher 3.School Admin 4.School Admin and Teacher or not.
    [Tags]    SCHOOL_ADMIN_62    MANAGEMENT_EDIT_DETAILS_OF_DIFFERENT_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Set Variable    ${preSchoolAdminID}
    ${SchoolAdminPwd}    Set Variable    ${preSchoolAdminPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC192
    ${student_FN}    Get From Dictionary    ${stdDetails}    First Name
    Comment    Login to Wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${SchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${SchoolAdminUid}
    Comment    To navigate to management page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${role}=    Create List    Student    Teacher    School Admin    Teacher,School Admin
    : FOR    ${roleName}    IN    @{role}
    \    Run Keyword If    '${roleName}'=='Student'    TypeCharactertoTextBox    ${text.management.search}    ${student_FN}
    \    Run Keyword If    '${roleName}'!='Student'    TypeCharactertoTextBox    ${text.management.search}    ${EMPTY}
    \    Select The Record In Table    ${table.users}    First Name    ${student_FN}
    \    ${usersGridStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.users}    ${TimeOut}
    \    Run Keyword If    ${usersGridStatus}!=True    Fail    The users table was not displayed.
    \    Comment    To sort the column in table
    \    Select desired role of the record from Table    ${roleName}
    \    Click Element    ${button.userDetails.edit}
    \    Clear Text    ${text.caseDetail.middleName}
    \    Comment    MYS-4097 :Updated test script by changing the middle name from static value to unique value .
    \    ${Update middle name}    Get Unique Test Data    MN_Unique
    \    Input Text    ${text.caseDetail.middleName}    ${Update middle name}
    \    Run Keyword If    '${roleName}'=='Student'    update student grade
    \    ${saveStatus}    Run Keyword And Return Status    Click Element    ${button.userDetails.save}
    \    Wait Until Element is Invisible    ${button.userDetails.save}
    \    ${middlNameValue}    Get Element Attribute    ${text.caseDetail.middleName}@value
    \    Should Be Equal As Strings    ${middlNameValue}    ${Update middle name}    The edited user middle name is not effected
    \    ${usersGridStatus}    Verify Element Visible    ${table.users}
    \    Capture Page Screenshot And Log    ${OUTPUTDIR}    Screen.png
    [Teardown]    Stop Application

ATC 245 School Admin-Alert message is displayed when selected another user without saving the existing user
    [Documentation]    ATC 245 School Admin- Verify Alert message is displayed when selected another user without saving the existing user
    ...
    ...    Step1 : Login with valid School Admin credentials.
    ...
    ...    Step 2 : Click on management button.
    ...
    ...    Step 3 : select the another record without saving the modified record.
    ...
    ...    Step 4 : Verify whether alert is displayed or not
    [Tags]    SCHOOL_ADMIN_65    MANAGEMENT_VERIFY_ALERT_WITHOUT_SAVE_EDITED_USER    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueValue}    GetUniqueValue    editedGroup
    ${groupName}    Set Variable    ${uniqueValue}
    Comment    login with Valid School Admin Credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    select the user, modified data and selecting another user without save
    Select desired role of the record from Table    Student
    Wait And Click Element    ${button.userDetails.edit}
    Wait Until Element Is Visible    ${text.classesAndUsers.Username}    10s
    Input Text    ${text.userDetails.middleName}    test1
    Select desired role of the record from Table    School Admin
    Comment    Verify the alert is displayed or not
    ${alertMsg}    Get Text    ${label.deleteClassOrGroup.promptMsg}
    Run Keyword If    "${alertMsg}"=="You have made changes to this user. Click OK to save your changes. Click Cancel to continue without saving."    Set Test Message    "You have made changes to this user. Click OK to save your changes. Click Cancel to continue without saving." alert is displayed.
    ...    ELSE    Fail    "You have made changes to this user. Click OK to save your changes. Click Cancel to continue without saving." alert is notdisplayed.
    [Teardown]    Stop Application

ATC 262 - 263 - School Admin - Verify whether roles are getting switched for valid roles only but not invalid.
    [Documentation]    Verify whether roles are getting switched for valid roles only but not invalid.
    ...
    ...    Steps:
    ...
    ...    1. Login with valid school admin credentials
    ...
    ...    2. Navigate Management Page
    ...
    ...    3. Select the teacher record from users list
    ...
    ...    4. Click on Edit button
    ...
    ...    5. Add School Admin role and click on "Save" button.
    ...
    ...    6. Verify whether roles are getting switched to valid roles
    ...
    ...    7. select the another teacher record from the list
    ...
    ...    8. Click on Edit button.
    ...
    ...    9. Add Student role and click on "Save" button.
    ...
    ...    10.Verify whether roles are not getting switched to invalid role.
    [Tags]    SCHOOL_ADMIN_66    MANAGEMENT_VERIFY_ROLES_ARE_SWITCHED_TO_VALID_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${random}    GetUniqueValue
    ${teacherDetails}    Create Dictionary    UserName    qa4mme+ta${random}@gmail.com    Password    qa4mme+ta${random}    FirstName
    ...    TFN${random}    LastName    TLN${random}    ClassName    DataClass${random}    Title
    ...    @{preSignUpTitleMenus}[0]
    ${teacherLN}    Get From Dictionary    ${teacherDetails}    LastName
    ${school}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${zipCode}    Set Variable If    ${isDemoQURL}    ${demoQSchoolZipCode}    ${schoolZipCode}
    OpenBrowserToLoginPage    ${WizardURL}
    Create New Teacher    ${teacherDetails}    \    ${school}    ${zipCode}
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentials.
    Sleep    10s
    Signout And Relogin    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    select the teacher record
    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${common.homepage.Loading}
    Wait Until Element Is Visible    ${text.management.search}    ${Delay}
    Input Text    ${text.management.search}    ${teacherLN}
    Wait And Click Element    //div[@id='userGrid']//table//tr//td[text()='${teacherLN}']
    Wait And Click Element    ${button.userDetails.edit}
    Wait Until Element Is Visible    ${button.userDetails.save}    ${TimeOut}
    Wait Until Element Is Visible    ${text.classesAndUsers.Username}    10s
    Comment    Checking school admin role to add to teacher role.
    Click On Element    ${check.editUser.schoolAdminRole}
    Wait And Click Element    ${button.userDetails.save}
    Wait Until Element is Invisible    ${button.userDetails.save}
    ${status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.users.add}    ${TimeOut}
    Run Keyword If    ${status}    Set Test Message    School Admin role is added to Teacher role combindly.
    ...    ELSE    Fail    Adding School Admin role with Teacher role comindly is failed.
    Comment    select the same record
    Comment    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${teacherLN}
    Comment    Run Keyword If    "${rowNo}"=="0"    Fail    No record selected with the given teacher detials.
    Wait And Click Element    ${button.userDetails.edit}
    Wait Until Element Is Visible    ${text.classesAndUsers.Username}    10s
    Comment    Uncheck the school admin role
    Click On Element    ${check.editUser.schoolAdminRole}
    Comment    click on save button
    Wait And Click Element    ${button.userDetails.save}
    sleep    15s
    ${status}    Verify Element Visible    ${label.login.AlertMsg}
    ${alertmsg}    Run Keyword If    ${status}==True    Get Text    ${label.login.AlertMsg}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}== False    Set Test Message    Alert Message is not displayed when we reset the role from teacher,school admin to only teacher role this is expected as changed functionality in "Denim".
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==True    Fail    Alert is not expected when the teacher roles are added from management as per changed functionality in "Denim".
    Run Keyword If    ${status}==True    Click On Element    ${button.userDetails.cancel}
    Run Keyword If    ${status}== False    Wait Until Element is Invisible    ${button.userDetails.save}
    Comment    ${rowNo}    Select The Record In Table    ${table.users}    Role    Teacher
    Comment    Run Keyword If    "${rowNo}"=="0"    Fail    No record selected with the given teacher detials.
    Wait And Click Element    ${button.userDetails.edit}
    Wait Until Element Is Visible    ${button.userDetails.save}    ${TimeOut}
    Wait Until Element Is Visible    ${text.classesAndUsers.Username}    10s
    Comment    Add student and school admin role
    Click On Element    ${check.editUser.schoolAdminRole}
    Comment    Check Student role.
    Click On Element    ${check.userDetails.Roles.Student}
    Comment    Click on save button
    Wait And Click Element    ${button.userDetails.save}
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    alertMessage    15s
    ${alertMsg}    Run Keyword If    ${alertStatus}    Get Text    ${label.login.AlertMsg}
    Run Keyword If    ${alertStatus}    Wait And Click Element    mysAlertBtn
    Should Contain    ${alertMsg}    School Admins can only have a teacher role. All other roles are not allowed.    The expected alert msg is "School Admins can only have a teacher role. All other roles are not allowed." but it is displayed as "${alertMsg}"
    [Teardown]    Stop Application

ATC 265 266 School Admin-Verify wether duplicate Classes and groups are created.
    [Documentation]    ATC 265-School Admin Verify wether duplicate Classes and groups are created.
    ...
    ...    Step1 : Login as School Admin
    ...
    ...    Step2 : Add new class from management page.
    ...
    ...    Step3 : Verify wether duplicate Classes are created or not.
    ...
    ...    Step4 : Back to home page click on management page.
    ...
    ...    Step5 : Add new group from management page.
    ...
    ...    Step6 : Verify wether duplicate Groups are created or not.
    [Tags]    SCHOOL_ADMIN_67    MANAGEMENT_VERIFY_CANT_CREATE_DUPLICATE_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueValue}    GetUniqueValue    QA
    ${ClassName}    Set Variable    ${uniqueValue}Class
    Comment    ${groupName}    Set Variable    ${uniqueValue}group
    Comment    login with Valid School Admin Credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To add a class
    Add A Class Or Group    ${ClassName}
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    Comment    To navigate back to home page
    Navigate BackTo Home Page    Management
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.showClasses}
    Comment    Click 'Add' button.
    Wait And Click Element    ${button.classesAndUsers.add}    ${TimeOut}    Add
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Comment    To enter the already created classname
    Input Text    ${text.newClass.Name}    ${ClassName}
    sleep    2s
    Wait And Click Element    ${button.newGroup.Ok}
    Comment    Getting Text of Alert Mesaage and click on OK button of Alert.
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert "Class name is not valid. " is not displayed when selecting roles and Student and Teacher and Click on Save button .
    Run Keyword If    ${tooltipStatus}    Should Be Equal As Strings    ${toolTipMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Should Be Equal As Strings    ${alertMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    Comment    Navigate BackTo Home Page    Management
    Comment    Navigating to Management page.
    Comment    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Comment    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    ${bStatus}=    Wait Until Element Is Visible    ${button.management.showGroups}    20s
    Comment    wait and click on show groups button
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    To add a group
    Comment    Add A Class Or Group    ${groupName}
    Comment    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${groupName}
    Comment    Run Keyword Unless    ${bStatus}    Fail    The newly added group is not shown in the 'groups' table.
    Comment    Navigating back to home page
    Comment    Navigate BackTo Home Page    Management
    Comment    Navigating to Management page.
    Comment    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Comment    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.showGroups}
    Comment    To wait and click on show groups button
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Click 'Add' button.
    Comment    Wait And Click Element    ${button.classesAndUsers.add}    ${TimeOut}    Add
    Comment    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Comment    Input Text    ${text.newClass.Name}    ${groupName}
    Comment    sleep    2s
    Comment    ${groupNamestatus}    Get Text    ${label.toolTip.newDuplicateGrpAndClass}
    Comment    String Should Contain    ${groupNamestatus}    Group name already exists.
    [Teardown]    Stop Application

ATC 264 School Admin Verify whether duplicate Users are created.
    [Documentation]    ATC 264 Schol Admin-Verify wether duplicate Users are created.
    ...
    ...    Step1 : Login as school admin.
    ...
    ...    Step2 : Try Create school admin role with existing userID then will get pop up message"This userID already exists".
    ...
    ...    Step3 : Click on cancel button.
    ...
    ...    Step4 : Add newuser from the management page.
    ...
    ...    Step5 : Try to create new user with above userID.
    ...
    ...    Step6 : Verify wether duplicate Users are created or not.
    [Tags]    SCHOOL_ADMIN_68    MANAGEMENT_VERIFY_DUPLICATE_USERS_ARE_CREATED    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueValue}    GetUniqueValue    SA
    ${fName}    Set Variable    ${uniqueValue}FN
    ${lName}    Set Variable    ${uniqueValue}LN
    ${userId}    Set Variable    qa4mme+SA${uniqueValue}
    ${password}    Set Variable    ${uniqueValue}PWD
    ${roleName}    Set Variable    School Admin
    ${roleName1}    Set Variable    SchoolAdmin
    Comment    login with Valid School Admin Credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    wait and click on new user button
    Wait And Click Element    ${button.users.add}
    Wait Until Element Is Visible    ${text.newUser.firstName}    ${TimeOut}
    Comment    Enter newuser first \ name
    Input Text    ${text.newUser.firstName}    ${fName}
    Comment    Enter newuser last name
    Input Text    ${text.newUser.lastName}    ${lName}
    Comment    Select grade
    Comment    Select DropDown Values    ${table.gradeLevel.arrowButton}    ${table.grade.menuItem}
    Comment    wait and click on school admin check box
    Click Element    ${checkbox.newUser.schoolAdminRole}
    ${chkBoxStatus}    Run Keyword And Return Status    Checkbox Should Be Selected    newUserRole${roleName}
    Comment    Enter already created userID
    Input Text    ${text.newUser.userId}    ${SchoolAdminUid}
    Click Element    ${text.newUser.userId}
    Input Text    ${text.newUser.password}    ${password}
    Wait And Click Element    ${button.newUser.oK}    ${Delay}
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${alertMsgStatus}    String Should Contain    ${alertMsg}    This User ID already exists.
    Wait And Click Element    //div[@id='globalAlertPopup']//div[@class='mysCloseButton']
    Comment    ${UserIDstatus}    Get Text    ${label.toolTip}
    Comment    String Should Contain    ${UserIDstatus}    This User ID already exists.
    Comment    wait and click on cancel button
    Wait And Click Element    ${button.newUser.Cancel}
    Wait Until Element is Invisible    ${button.newUser.Cancel}
    Comment    To add School admin role from management page
    Add Role From Management    ${fName}    ${lName}    ${userId}    ${password}    ${roleName1}
    Comment    To sort the column in table
    ${rowCount}    Select The Record In Table    ${table.users}    Last Name    ${lName}
    Run Keyword If    "${rowCount}" == "0"    Fail    School Admin role is not added
    Comment    Navigating back to home page
    Navigate BackTo Home Page    Management
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${newUserWindowStatus}=    Verify Element Visible    ${label.newUser.newUser}
    Comment    Wait and click on add button
    Wait And Click Element    ${button.users.add}
    Wait Until Element Is Visible    ${text.newUser.firstName}    ${TimeOut}
    Comment    Enter the new user first name
    Input Text    ${text.newUser.firstName}    ${fName}
    Comment    Enter the newuser last name
    Input Text    ${text.newUser.lastName}    ${lName}
    Comment    Select the grade level
    Select DropDown Values    ${table.gradeLevel.arrowButton}    ${table.grade.menuItem}
    Comment    Wait and click on the schol admin check box
    Wait And Click Element    ${checkbox.newUser.schoolAdminRole}
    ${chkBoxStatus}    Run Keyword And Return Status    Checkbox Should Be Selected    newUserRole${roleName}
    Run Keyword If    "${chkBoxStatus}"!="True"    Click Element    ${checkbox.newUser.schoolAdminRole}
    Input Text    ${text.newUser.userId}    ${userId}@gmail.com
    Click On Element    ${text.newUser.userId}
    Wait And Click Element    ${button.newUser.oK}    ${Delay}
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${alertMsgStatus}    String Should Contain    ${alertMsg}    This User ID already exists.
    Comment    ${UserIDstatus}    Get Text    ${label.toolTip}
    Comment    Run Keyword And Continue On Failure    String Should Contain    ${UserIDstatus}    This User ID already exists.
    Comment    wait and click on save button
    Comment    Wait And Click Element    ${button.newUser.oK}
    Comment    wait untill alert is visible
    Comment    Wait Until Element Is Visible    ${text.Details.Alert}    ${TimeOut}
    Comment    ${alertstatus}    Get Text    ${text.Details.Alert}
    Comment    String Should Contain    ${alertstatus}    The email address entered is already taken. Please choose a different email address.
    [Teardown]    Stop Application

ATC 179 - Verify whether School admin can view the passwords of student,teacher,school admin,teacher & school admin
    [Documentation]    School admin- Verify whether School admin can view the passwords of student,teacher,school admin,teacher & school admin.
    ...
    ...    Step1 : Login as SchoolAdmin
    ...
    ...    Step2 : Select the role from the users table.
    ...
    ...    Step3 : Click on edit button.
    ...
    ...    Step4 : Verify whether School admin can view the passwords of student,teacher,school admin,teacher & school admin or not.
    [Tags]    SCHOOL_ADMIN_69    MANAGEMENT_CAN_VIEW_THE_PASSWORDS_EXCEPT_DISTRICT_ADMIN    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUserID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${testData}    GetUniqueValue    user
    ${userStatusList}    Create List    True
    ${roles}    Create List    Teacher    SchoolAdmin
    ${userLN}    Set Variable    LN${testData}
    ${mandatoryList}=    Create List    FN${testData}    LN${testData}    qa4mme+${testData}@gmail.com    qa4mme+${testData}
    Comment    Login to Wizard application with SchoolAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUserID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    To navigate to management page
    Navigate To Management Page
    Comment    Wait and select the iframe of School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Select the record from users table
    ${role_List}    Create List    Student    Teacher    School Admin
    : FOR    ${each_Role}    IN    @{role_List}
    \    Comment    To sort the column from table.
    \    Select desired role of the record from Table    ${each_Role}
    \    Wait And Click Element    ${button.userDetails.edit}
    \    comment    To wait and click on showpassword button.
    \    Wait And Click Element    ${button.users.showPassword}
    \    ${elementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.users.hidePassword}
    \    ${pwdLength}=    Run Keyword If    '${elementStatus}'=='True'    Get Element Attribute    ${text.user.passwordValue}
    \    ${len}=    Get Length    ${pwdLength}
    \    Run Keyword If    '${pwdLength}'== '0'    Fail    Password is not matched with given details.
    \    Wait And Click Element    ${button.userDetails.cancel}
    Comment    To add Teacher,School Admin role from management.
    Enter User Details    ${mandatoryList}
    : FOR    ${role}    IN    @{roles}
    \    ${role}    Set Variable If    '${role}'=='Teacher'    Instructor    ${role}
    \    ${roleStatus}    Set Variable    newUserRole${role}
    \    Wait And Click Element    //input[@name='newUserRole${role}']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Wait And Click Element    ${button.newUser.oK}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Table Column Sorting    ${table.users}    Created    descend
    ${bStatus}    Verify Values In Table    ${table.users}    Last Name    ${userLN}
    Run Keyword Unless    ${bStatus}    Fail    Added User ${userLN} is not displayed in the Users list
    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${userLN}
    Run Keyword If    "${rowNo}"=="0"    Fail    No record found with given details.
    Wait And Click Element    ${button.userDetails.edit}
    Wait And Click Element    ${button.users.showPassword}
    ${elementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.users.hidePassword}
    ${pwdLength}=    Run Keyword If    '${elementStatus}'=='True'    Get Element Attribute    ${text.user.passwordValue}
    ${len}=    Get Length    ${pwdLength}
    Run Keyword If    '${pwdLength}'== '0'    Fail    School Admin is not able to view the password of "School admin ,Teacher"
    [Teardown]    Stop Application

ATC 183 School Admin-Verify whether school admin can export students of a class
    [Documentation]    SchoolAdmin-Verify whether School admin can Export & Print students of a class.
    ...
    ...
    ...    Step1 : login as SchoolAdmin.
    ...
    ...    Step2 : Export & print students in class from management.
    ...
    ...    Step3 : Verify whether school admin can export users of class or not.
    [Tags]    SCHOOL_ADMIN_72    MANAGEMENT_EXPORT_STUDENTS_OF_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${schoolAdminPWD}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${ClassName}    Set Variable    @{preClassesList}[0]
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of school Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To export or print all users data of whole school.
    Wait And Click Element    ${button.management.PrintORExport}    ${TimeOut}
    Export or Print All Users Data    print    ${ClassName}
    ${title}    Get Window Titles
    List Should Contain Value    ${title}    Print Users    Print Users window is not displayed
    Select Window By Title    Print Users
    Wait Until Element Is Visible    ${table.schoolAdmin.printUsersTable}    ${TimeOut}
    Select Window By Title    @{title}[0]
    Reload Page
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Print/Export all users.
    Wait And Click Element    ${button.management.PrintORExport}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export    ${ClassName}
    Sleep    10s
    Save Exported File    ${fileDir}    ${lengthOFList}
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded.
    [Teardown]    Stop Application

ATC 232- School Admin-Same UserID and Password are accepted while creating users in management page
    [Documentation]    ATC 232 School admin-verify Same UserID and Password are accepted while creating users or not.
    ...
    ...
    ...    Step1 : Try to create new user as school admin
    ...
    ...    Step2 : Enter same username and password.
    ...
    ...    Step3 : verify Same UserID and Password are accepted while creating users or not.
    [Tags]    SCHOOL_ADMIN_73    MANAGEMENT_CREATE_NEW_USER_VERIFY_SAME_USERID_PASSWORD_ARE_ACCEPTED    HIGH
    ${uniqueValue}    GetUniqueValue    qa4mme+sa
    ${SchoolAdminUid}    Set Variable    ${uniqueValue}@gmail.com
    ${SaFN}    Set Variable    ${uniqueValue}_FN
    ${SaLN}    Set Variable    ${uniqueValue}_LN
    OpenBrowserToLoginPage
    ${kwStatus}    Set Variable    False
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'SchoolAdmin'.
    Select Role in Create Account    ${schoolAdmin}
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${filePath}    Set Variable    ${daRegistrationCodesFile}
    ${sheetName}    Set Variable If    ${isDemoQURL}    STAAR mysdb_m3    CCS
    ${zipCode}    Get Zipcode For School    ${filePath}    ${sheetName}    ${selectingSchool}
    Enter Zip Code And Select School    ${zipCode}    admin    ${selectingSchool}
    Comment    Enter a valid Email address.
    Enter Text In Text Field    ${text.adminSignUp.firstName}    ${SaFN}
    Enter Text In Text Field    ${text.adminSignUp.lastName}    ${SaLN}
    Enter Text In Text Field    ${text.adminSignUp.email}    ${SchoolAdminUid}
    Enter Text In Text Field    ${text.adminsignup.ConfirmEmail}    ${SchoolAdminUid}
    Comment    Enter a Password into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.password}    ${SchoolAdminUid}
    Enter Text In Text Field    ${text.adminSignUp.confirmPassword}    ${SchoolAdminUid}
    Select DropDown Values    ${dropdown.adminSignUp.jobTitleDrpDwn}    //table[@id='adminSignUpDlg-jobTitle_menu']//tr
    Wait And Click Element    ${button.signUp.next}
    ${isAlert_Present}    Wait For Element Visible    ${label.login.AlertMsg}    5s
    Run Keyword If    '${isAlert_Present}'=='False'    Fail and Capture Screenshot    Application is accepted to create a new School admin user with same user id and password through registration process
    [Teardown]    Stop Application

ATC 182 School Admin-Verify whether school admin can export users of complete school
    [Documentation]    SchoolAdmin-Verify whether School admin can Export & Print users of complete school.
    ...
    ...
    ...    Step1 : login as SchoolAdmin.
    ...
    ...    Step2 : Export & print students in school from management.
    ...
    ...    Step3 : Verify whether school admin can export users of complete school or not.
    [Tags]    SCHOOL_ADMIN_74    MANAGEMENT_EXPORT_USERS_OF_COMPLETE_SCHOOL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${schoolAdminUID}    Set Variable    ${preSchoolAdminID}
    ${schoolAdminPWD}    Set Variable    ${preSchoolAdminPassword}
    ${cDate}    Get Time
    ${cDate}    Split String    ${cDate}
    ${cDate}    Set Variable    @{cDate}[0]
    ${prefixFileName}    Set Variable    Users_${cDate}
    ${fileDir}    Get Default Download Path
    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${schoolAdminUID}    ${schoolAdminPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin- ${schoolAdminUID} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${schoolAdminUID}
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe of school Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To export or print all users data of whole school.
    Wait And Click Element    ${button.management.PrintORExport}    ${TimeOut}
    Export or Print All Users Data    print
    ${title}    Get Window Titles
    List Should Contain Value    ${title}    Print Users    Print Users window is not displayed
    Select Window By Title    Print Users
    Wait Until Element Is Visible    ${table.schoolAdmin.printUsersTable}    ${TimeOut}
    Select Window By Title    @{title}[0]
    Reload Page
    Navigate To Management Page
    Comment    Select the school admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Print/Export all users.
    Wait And Click Element    ${button.management.PrintORExport}    ${TimeOut}
    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    Export or Print All Users Data    export
    Sleep    10s
    Run Keyword If    '${BROWSER}'=='ie'    Save Exported File    ${fileDir}    ${lengthOFList}
    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded
    [Teardown]    Stop Application

ATC 333 SchoolAdmin-Verify whether user can register with same email ID for different schools
    [Documentation]    ATC 333-SchoolAdmin-Verify whether user can register with same email ID for different schools
    ...
    ...    Step 1 : Open browser to login page
    ...
    ...    Step 2 : Create School Admin role.
    ...
    ...    Step 3 \ : Signout from the application.
    ...
    ...    Step 4 : Click on newuser link and select School admin role.
    ...
    ...    Step 5 : Enter zip code select different school name.
    ...
    ...    Step 6 : Try to enter already existed email Id ,password and confirm password click on nex button.
    ...
    ...    Step 7 : Verify whether user can register with same email ID for different schools the alert message is displayed or not.
    [Tags]    SCHOOL_ADMIN_75    REGISTRATION_VERIFY_SAME_USERID_FOR_DIFFERENT_SCHOOLS    HIGH
    ${schoolAdminDetails}    Get Ms Excel Row Values Into Dictionary Based On Key    ${PrerequisitesFilePath}    ATC124_1    SchoolAdmin
    ${SchoolAdminUid}    Get From Dictionary    ${schoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${schoolAdminDetails}    Password
    ${filePath}    Set Variable    ${daRegistrationCodesFile}
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${sheetName}    Set Variable If    ${isDemoQURL}    STAAR mysdb_m3    CCS
    ${zipCode}    Get Zipcode For School    ${filePath}    ${sheetName}    ${selectingSchool}
    ${uniqueValue}    GetUniqueValue    qa4mme+sa
    ${SaFN}    Set Variable    ${uniqueValue}_FN
    ${SaLN}    Set Variable    ${uniqueValue}_LN
    Comment    Open the Mentoring Minds url.
    OpenBrowserToLoginPage
    Comment    Create the new School Admin with reusable Reg code.
    ${kwStatus}    Run Keyword And Return Status    Create New School Admin    ${schoolAdminDetails}    ${selectingSchool}    SADMIN-999999    ${zipCode}
    Run Keyword If    ${kwStatus}!=True    Fail    Failed to Create School Admin with Reg. code SADMIN-999999
    Wait Until Element Is Visible    //div[@id='welcomeView']//div[@class='dashLink']/div[@class='headerLabelSchool']    ${Delay}    School Name lablenot displayed in given time.
    ${currentSchool}    Get Text    //div[@id='welcomeView']//div[@class='dashLink']/div[@class='headerLabelSchool']
    ${matchStatus}    String Should Contain    ${currentSchool}    ${selectingSchool}
    ${demoQSchoolsList}    Create List    Booker T Washington Elem Sch    Elgin Elementary School    Elgin High School
    ${regularSchoolsList}    Create List    Aledo High School    Aledo Learning Center    Aledo Middle School
    ${schoolsList}    Set Variable If    ${isDemoQURL}    ${demoQSchoolsList}    ${regularSchoolsList}
    Log List    ${schoolsList}
    : FOR    ${school}    IN    @{schoolsList}
    \    ${schoolMatchStatus}    String Should Contain    ${school}    ${currentSchool}
    \    ${changingSchoolName}    Set Variable If    '${schoolMatchStatus}'=='False'    ${school}
    \    Exit For Loop If    '${schoolMatchStatus}'=='False'
    Comment    Signout from the application.
    ${kwStatus}    SignOut
    Run Keyword Unless    ${kwStatus}    Go To    ${WizardURL}
    Reload Page
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'SchoolAdmin'.
    Select Role in Create Account    ${schoolAdmin}
    Comment    Enter zip code and select the school name
    Enter Zip Code And Select School    ${zipCode}    admin    ${changingSchoolName}
    Wait Until Element is Invisible    ${common.spinner.loadingIcon}
    Comment    Enter valid email
    Enter Text In Text Field    ${text.adminSignUp.firstName}    ${SaFN}
    Enter Text In Text Field    ${text.adminSignUp.lastName}    ${SaLN}
    Enter Text In Text Field    ${text.adminSignUp.email}    ${SchoolAdminUid}
    Enter Text In Text Field    ${text.adminsignup.ConfirmEmail}    ${SchoolAdminUid}
    Comment    Enter a Password into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.password}    ${SchoolAdminPwd}
    Comment    Enter a Confirm Password into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.confirmPassword}    ${SchoolAdminPwd}
    Select DropDown Values    ${dropdown.adminSignUp.jobTitleDrpDwn}    //table[@id='adminSignUpDlg-jobTitle_menu']//tr
    Wait And Click Element    ${button.signUp.next}
    Validate The Step Precondition    ${label.login.AlertMsg}    Alert message    Alert message step was not displayed when user can register with same email ID for different schools
    [Teardown]    Stop Application

ATC 372-MYS-814-School Admin-Verify whether the close button is visible in import users window
    [Documentation]    ATC 372-School Admin: Import User - Is not possible to cancel the import or return back.
    ...
    ...
    ...    Step1 : Login as School Admin.
    ...
    ...    Step2 : Navigate to import users page.
    ...
    ...    Step3 : Verify whether the close button is visible or not in import users dialogue box.
    [Tags]    SCHOOL_ADMIN_76    IMPORT_USERS_VERIFY_IMPORT_DIALOG_CLOSE_BUTTON    HIGH
    Run Keyword If    '${preSchoolAdminID}'=='${EMPTY}'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid School Admin credentails.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    To navigate to import users page
    Navigate To Import Users Page
    Comment    The close button is visible or not in import users dialoguebox.
    Validate The Step Precondition    ${label.SchoolAdmin.importUsersDialogMessage}    Import users dialogue box    Import users dialogue box is not visible.
    ${bStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.importTemplate.importUsersDlgClose}    20s
    Run Keyword Unless    ${bStatus}    Fail    Close button is not visible when select import users.
    [Teardown]    Stop Application

ATC 366 - Verifying whether spaces are accepting when registration codes are entered with space in registration process
    [Tags]    SCHOOL_ADMIN_77    REGISTRATION_VERIFY_REGISTRATION_CODE_ACCEPTS_SPACES    MEDIUM
    Comment    OpenBrowserToLoginPage
    OpenBrowserToLoginPage
    ${schoolAdminDetails}    Get Ms Excel Row Values Into Dictionary Based On Key    ${PrerequisitesFilePath}    SchoolAdminPrerequisites    SchoolAdmin
    Comment    Enter a valid Email address.
    ${SchoolAdminUid}    Get From Dictionary    ${schoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${schoolAdminDetails}    Password
    ${SchoolAdminFName}    Get From Dictionary    ${schoolAdminDetails}    FirstName
    ${SchoolAdminLName}    Get From Dictionary    ${schoolAdminDetails}    LastName
    ${SchoolAdminCode}    Set Variable    ${SPACE}${SPACE}SADMIN-999999
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'SchoolAdmin'.
    Select Role in Create Account    ${schoolAdmin}
    ${filePath}    Set Variable    ${daRegistrationCodesFile}
    ${sheetName}    Set Variable If    ${isDemoQURL}    STAAR mysdb_m3    CCS
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${zipCode}    Get Zipcode For School    ${filePath}    ${sheetName}    ${selectingSchool}
    Enter Zip Code And Select School    ${zipCode}    admin    ${selectingSchool}
    Enter Text In Text Field    ${text.adminSignUp.email}    ${SchoolAdminUid}
    Enter Text In Text Field    ${text.adminsignup.ConfirmEmail}    ${SchoolAdminUid}
    Comment    Enter a Password into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.password}    ${SchoolAdminPwd}
    Comment    Enter a Confirm Password into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.confirmPassword}    ${SchoolAdminPwd}
    Comment    Enter a FirstName into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.firstName}    ${SchoolAdminFName}
    Comment    Enter a LastName into TextFiled.
    Enter Text In Text Field    ${text.adminSignUp.lastName}    ${SchoolAdminLName}
    Comment    Select Job Title from job List.
    Select DropDown Values    ${dropdown.adminSignUp.jobTitleDrpDwn}    //table[@id='adminSignUpDlg-jobTitle_menu']//tr
    Wait And Click Element    ${button.signUp.next}
    Wait And Click Element    //input[@id='adminSignUpDlg-adminCode']
    Enter Text In Text Field    //input[@id='adminSignUpDlg-adminCode']    SADMIN-999999
    Wait And Click Element    ${button.signUp.next}
    ${bStatus}    Wait And Click Element    ${button.home.iAgree}
    Run Keyword If    ${bStatus}=='False'    Fail and Capture Screenshot    I Agree button wasn't displayed/clickable.
    ${bStatus}    Wait And Click Element    ${button.adminSignUp.createAccount}
    Run Keyword If    ${bStatus}=='False'    Fail and Capture Screenshot    Log in button wasn't displayed/clickable.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    ${statusOfRegistration}    Validate User Login Details    ${SchoolAdminFName}    ${SchoolAdminLName}
    Wait Until Element Is Visible    //span[@id='welcomeName' and normalize-space()='Hi${SPACE}${SchoolAdminFName}']    2m    School Admin Home Page wasn't displayed even after waiting for 2 mins after registration process.
    [Teardown]    Stop Application

ATC 89 School Admin view the Item Analysis Report at All Classes level
    [Documentation]    ATC 89 School Admin view the Item Analysis Report at All Classes level
    ...
    ...    PreCondition:
    ...    Student assignment should be done.
    ...
    ...
    ...    Steps to Reproduce:
    ...    1.Login with School admin details.
    ...    2.Generate report with student assignment details.
    ...    3.Verfiy Classname ,Student name and Total questions and Correct answered count is displaying correctly or not.
    [Tags]    SCHOOL_ADMIN_78    REPORTS_ITEM_ANALYSIS_REPORT_AT_ALL_CLASSES_LEVEL    HIGH
    Variable Should Exist    ${AssignmentDetails}    The first 2 test cases of school admin are not executed
    ${globalSchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${globalSchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${studentName}    Get From Dictionary    ${AssignmentDetails}    StudentName
    ${activity}    Get From Dictionary    ${AssignmentDetails}    Activity
    ${examdate}    Get From Dictionary    ${AssignmentDetails}    SubmitDate
    ${reportType}    Set Variable    ${preReportType2}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    Comment    login to app as a "SchoolAdmin"
    ${loginStatus}    LoginToWizardApp    ${globalSchoolAdminUid}    ${globalSchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    Generate the Item analysis report.
    Get Report for A Class or Group    ${reportType}    Classes    ${className}    ${SubjectName}    \    ${activity}
    ...    ${fromdate}    ${todate}
    Wait And Select Frame    ${header.report.reportFrame}
    ${rEMStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.reports.reportEmptyMessage}    20s
    ${reportEmptyMessage}    Run Keyword If    ${rEMStatus}    Get Text    ${label.reports.reportEmptyMessage}
    Run Keyword If    ${rEMStatus}    Fail    ${reportEmptyMessage}
    Wait Until Element Is Visible    ${label.reports.ReportTypeHeader}    30s
    ${reportbanner}    Get Text    ${label.reports.ReportTypeHeader}
    Run Keyword And Continue On Failure    Should Contain    ${reportbanner}    ${schoolName}
    Run Keyword And Continue On Failure    Should Contain    ${reportbanner}    ${reportType}
    Comment    MYS-3211 : Updated script to wait for a common lable display in all reports to confirm the report is loaded.
    Wait Until Keyword Succeeds    6m    5s    Element Should Be Visible    //div[@id='filters-container']//div[@id='filterSubjectLbl' and contains(text(),'Title:')]    Report is not displayed in given time.
    Comment    Get Text of Subject,Student name and Class name.
    ${totalQuestions}    Get Matching Xpath Count    ${table.reports.ItemsCount}
    ${repSujName}    Wait Until Keyword Succeeds    2m    5s    Get Text    ${label.reports.Subject}
    ${repClassName}=    Wait Until Keyword Succeeds    2m    5s    Get Text    ${label.reports.className}
    comment    MYS-4879:Updated test script to get text of class name
    @{studeNames}    Split String    ${studentName}    ${SPACE}
    ${gridxFirstRow}    Wait Until Keyword Succeeds    2m    5s    Get Text    ${table.report.expandCellContent}//div[contains(text(),'@{studeNames}[0]')]
    Run Keyword And Continue On Failure    Should Contain    ${repSujName}    ${SubjectName}    The subject name of the assignment ${SubjectName} is not matching with reports subject name ${repSujName}
    ${fnVisibleStatus}    Run Keyword And Return Status    Wait Until Page Contains Element    ${table.report.expandCellContent}//div[contains(text(),'@{studeNames}[0]')]    ${TimeOut}
    ${lnVisibleStatus}    Run Keyword And Return Status    Wait Until Page Contains Element    ${table.report.expandCellContent}//div[contains(text(),'@{studeNames}[1]')]    ${TimeOut}
    Run Keyword If    ${fnVisibleStatus}==False or ${lnVisibleStatus}==False    Expected Student(@{studeNames}[2], @{studeNames}[0] @{studeNames}[1]) is not visible in the report.
    Comment    Run Keyword And Continue On Failure    Should Contain    ${gridxFirstRow}    @{studeNames}[0]    The first name of the student @{studeNames}[0] not matching with student details:${gridxFirstRow} in reports page.
    Comment    Run Keyword And Continue On Failure    Should Contain    ${gridxFirstRow}    @{studeNames}[1]    The last name of the student @{studeNames}[1] not matching with student details :${gridxFirstRow} in reports page.
    Comment    Run Keyword And Continue On Failure    Should Be Equal As Integers    ${totalQuestions}    ${items completed}    The total questions of the assignment ${items completed} are not matching with the reports page questions count ${totalQuestions}.
    Comment    ${correctedAnswersCount}    Get Matching Xpath Count    ${label.Reports.correctAnsweredQuestionsCount}
    Comment    Run Keyword And Ignore Error    Should Be Equal As Integers    ${Overall Correct}    ${correctedAnswersCount}    The total correct answered of the assignment ${Overall Correct} are not matching with the reports page correct answered questions count ${correctedAnswersCount}.
    [Teardown]    Stop Application

ATC 416-MYS-905-SA-Verify whether empty confirmation message is displayed when clicked on send
    [Documentation]    ATC 416-MYS-905-SA-Verify whether empty confirmation message is displayed when clicked on send button in Email Support.
    ...
    ...    Step1 : Login as school admin
    ...
    ...    Step2 : Select email suport from help menu.
    ...
    ...    Step3 : Enter all the details and Email ID.
    ...
    ...    Step4 : Click on send button.
    ...
    ...    Step5 : Verify whether empty confirmation message is displayed when clicked on send button in Email Support.
    [Tags]    SCHOOL_ADMIN_80    HELP_EMAIL_SUPPORT_EMPTY_CONFIRMATION_MESSAGE    HIGH
    Pass Execution If    ${isDemoQURL}    Help option is not be available in the 'demoque1.mysatori.com'.
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login with valid school admin credentials.
    ${Login_Status}=    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    '${Login_Status}'=='false'    Fail    The user is not able to login with valid credentials.
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Verifying the empty conformation message is displayed or not when clicked on send
    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Wait And Click Element    ${link.home.emailSupport}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.support.howCanWeHelpYou}    10s
    Run Keyword If    "${bStatus}"=="False"    Fail    How can we help you window is not visible when selecting the email support.
    Enter Text In Text Field    ${text.support.itsAbout}    SDT TEST
    Enter Text In Text Field    ${text.support.description}    SDT TEST
    Comment    Enter valid email
    Enter Text In Text Field    ${text.support.emailId}    ${SchoolAdminUid}
    Wait And Click Element    ${button.support.send}
    Sleep    10s
    Comment    To verify how can we help you window.
    ${emailStatus}    Verify Element Visible    ${label.support.howCanWeHelpYou}
    Run Keyword If    "${emailStatus}"=="False"    Fail    How can we help you window is not visible when selecting the email support.
    ${msgSentSuccessfullyStatus}    Get Text    ${label.support.howCanWeHelpYou.msgStatus}
    ${msgHasBeenSentSuccessfullyStatus}    String Should Contain    ${msgSentSuccessfullyStatus}    Your message has been sent successfully.
    Run Keyword If    "${msgHasBeenSentSuccessfullyStatus}"=="FALSE"    Fail    Empty confirmation message is displayed when clicked on send.
    [Teardown]    Stop Application

ATC 420-MYS 900-SA-Verify whether Grade is accepting combination of Alphabets and Numbers.
    [Documentation]    ATC 420-MYS 900-SA-Verify whether Grade is accepting combination of Alphabets and Numbers when import students.
    ...
    ...    Step1 : Login as school admin.
    ...
    ...    Step2 : Navigate to import users page.
    ...
    ...    Step3 : Create CSV file with Grade is combination of Alphabets and Numbers.
    ...
    ...    Step4 : Try to upload file.
    ...
    ...    Step5 : Verify whether Grade is accepting combination of Alphabets and Numbers when import students.
    [Tags]    SCHOOL_ADMIN_81    IMPORT_GRADE_ACCEPTING_COMBINATION_OF_ALPHABETS_AND_NUMBERS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to import student details with grade level is combination of alphabets and numbers.
    ${student1UserId}    GetUniqueValue    student
    ${student2UserId}    GetUniqueValue    Student
    ${studentDetails1}    Create Dictionary    User ID    ${student1UserId}    Password    password123    First Name
    ...    ${student1UserId}    Middle Name    ${student1UserId}    Last Name    ${student1UserId}    Grade Level
    ...    2*    Role    student    School    ${schoolName}
    ${studentDetails2}    Create Dictionary    User ID    ${student2UserId}    Password    password1234    First Name
    ...    ${student2UserId}    Middle Name    ${student2UserId}    Last Name    ${student2UserId}    Grade Level
    ...    12LEVEL    Role    student    School    ${schoolName}
    ${schoolDetails}    Create Dictionary    1    ${studentDetails1}    2    ${studentDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC 420.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    To upload students from CSV
    Upload Students From CSV    ${filePath}
    Remove File    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC 420.csv
    Reload Page
    Comment    To navigate to management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To select the student record based on last name.
    Select The Record In Table    ${table.users}    Last Name    ${student1UserId}
    Sleep    3s
    ${gradeValue}    Get Text    ${label.admin.gradeValue}
    ${tableGradeValueStatus}    String Should Contain    ${gradeValue}    12LEVEL
    Run Keyword If    ${tableGradeValueStatus}    Fail    Grade is accepting combination of alphabets and numbers.
    [Teardown]    Stop Application

ATC-478-Validate data in printed report
    [Documentation]    Validating the report data in printed report window.
    ...
    ...    1. Login as District admin.
    ...
    ...    2. Generate SMReport with given data.
    ...
    ...    3. Clcik on Print and compare the actual report data with printed report window data.
    ...
    ...    4. Fail if the data comparison mismatched.
    [Tags]    SCHOOL_ADMIN_82    REPORTS_PRINT_REPORT    MEDIUM
    Variable Should Exist    ${AssignmentDetails}    The first 2 test cases of school admin are not executed
    ${globalSchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${globalSchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    ${studentName}    Get From Dictionary    ${AssignmentDetails}    StudentName
    ${activity}    Get From Dictionary    ${AssignmentDetails}    Activity
    ${examdate}    Get From Dictionary    ${AssignmentDetails}    SubmitDate
    ${reportType}    Set Variable    ${preReportType1}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${StudentDetails}    Get Student Details    ${preStudentDetails}    ATC30A
    ${Student_FN}    Get From Dictionary    ${StudentDetails}    First Name
    ${Student_LN}    Get From Dictionary    ${StudentDetails}    Last Name
    ${Student_MN}    Get From Dictionary    ${StudentDetails}    Middle Name
    ${Std_LN_FN}    Set Variable    ${Student_LN},${SPACE}${Student_FN} ${Student_MN}
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    ${from}    Get Date Without Zeros At Pos Zero In Day And Month    ${fromdate}
    ${to}    Get Date Without Zeros At Pos Zero In Day And Month    ${todate}
    Comment    login to app as a "SchoolAdmin"
    ${loginStatus}    LoginToWizardApp    ${globalSchoolAdminUid}    ${globalSchoolAdminPwd}
    Run Keyword If    ${loginStatus}    Set Test Message    SchoolAdmin-${globalSchoolAdminUid} logged in.
    ...    ELSE    Fail    Login failed for the SchoolAdmin-${globalSchoolAdminUid}
    Comment    Generate the Item analysis report.
    Get Report for A Class or Group    ${reportType}    Classes/Groups    ${className}    ${SubjectName}    \    ${activity}
    ...    ${fromdate}    ${todate}
    Wait And Select Frame    ${header.report.reportFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    MYS-3394:Updated with wait for element visible keyword..
    ${eStatus}=    Wait For Element Visible    ${label.reports.reportEmptyMessage}    10s
    Run Keyword If    ${eStatus}    Fail    Report generated with message "There is no information to display for the current selection." OR Please check with previous day,the day might have been changed during the assignment subission and report verification time.
    Comment    MYS-3394:Updated with wait for element visible keyword..
    ${status}    Wait For Element Visible    ${label.reports.Subject}    3m
    Run Keyword If    '${status}'!='True'    Fail and Capture Screenshot    The Standard Mastery Report is not displayed with data in given time.    SMR.png
    ${filters}    Get Text    //div[@id="filters-container"]
    Run Keyword And Continue On Failure    Should Contain    ${filters}    ${SubjectName}
    Run Keyword If    '${className}'=='All Classes'    Should Contain    ${filters}    All
    ...    ELSE    Should Contain    ${filters}    ${className}
    Run Keyword And Continue On Failure    Should Contain    ${filters}    ${from} to ${to}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    MYS-3394:Updated script to wait for the page overlay blocker to go invisible to interact with page elements.
    ${isDisplay_Blocked}    Wait For Element Visible    //div[contains(@id,'dojox_widget_Standby_')]//div[contains(@style,'display: block;')]    ${Delay}
    Run Keyword If    ${isDisplay_Blocked}    Wait Until Keyword Succeeds    4m    5s    Element Should Not Be Visible    //div[contains(@id,'dojox_widget_Standby_')]//div[contains(@style,'display: block;')]
    Wait For Element Visible    //img[@src='images/icon_printer.png']    3m
    Comment    validating tooltip values of students and subject names.
    Comment    MYS 2372: Updated the code to click on the student toggle button in the "Reports" page.
    : FOR    ${itr}    IN RANGE    0    35
    \    Maximize Browser Window
    \    Sleep    3s
    \    CommonLibrary.Mouse Move    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    Focus    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    ${bStatus}    Run Keyword And Return Status    Click On Element    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    ${expadnoStatusAfterClick}    Run Keyword And Return Status    Wait Until Page Contains Element    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']//div[contains(text(),'-')]    10s
    \    Exit For Loop If    ${bStatus}==True and ${expadnoStatusAfterClick}==True
    \    Send    {DOWN}
    Send    {DOWN}
    Send    {DOWN}
    : FOR    ${itr}    IN RANGE    0    10
    \    Run Keyword And Ignore Error    Mouse Over    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']//div[contains(text(),'-')]
    \    ${sName}    Get ToolTip Value    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']//div[contains(text(),'-')]
    \    ${stuMatchStatus}    String Should Contain    ${sName}    ${Std_LN_FN}
    \    Exit For Loop If    ${stuMatchStatus}
    ${sName}    Get ToolTip Value    //div[contains(text(),'${Student_LN}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    Run Keyword And Continue On Failure    Should Contain    ${sName}    ${Std_LN_FN}
    ${subjectName}    Get Text    ${label.reports.Subject}
    Run Keyword And Continue On Failure    Should Contain    ${subjectName}    ${SubjectName}
    Comment    ${toolTipActivity}    Get ToolTip Value    //div[contains(text(),'${ActivityName}')]/parent::div
    Comment    ${activityMatchStatus}    String Should Contain    ${toolTipActivity}    ${ActivityName}
    Comment    Run Keyword If    ${activityMatchStatus}==False    Run Keyword And Continue On Failure    Fail    Activity mismatched.
    Comment    wait and Click on the print button.
    Wait And Click Element    //img[@src='images/icon_printer.png']
    Sleep    20s
    : FOR    ${itr}    IN RANGE    0    5
    \    ${wNames}    Get Window Titles
    \    ${noOf_Windows}    Get Length Of List    ${wNames}
    \    ${printed_window_status}    Evaluate    '${noOf_Windows}'>'1'
    \    Run Keyword If    '${printed_window_status}'!='True'    Wait And Click Element    //img[@src='images/icon_printer.png']
    \    Sleep    10s
    \    Exit For Loop If    ${printed_window_status}
    Comment    select the reports printed window.
    Select Window By Title    ${wNames[1]}
    Maximize Browser Window
    Sleep    5s
    Wait Until Element Is Visible    //div[@class='grid_view']    2m
    ${actualFilters}    Get Text    //div[@class='grid_view']//th
    ${reportHeadersMatchStatus}    String Should Contain    ${filters}    ${actualFilters}
    Run Keyword If    ${reportHeadersMatchStatus}==False    Run Keyword And Continue On Failure    Fail    Report headers mismatched in printed report.
    Comment    ${activityInPrintReport}    Verify Element Present    //span[contains(text(),'${ActivityName}')]
    Comment    Run Keyword If    ${activityInPrintReport}==False    Run Keyword And Continue On Failure    Fail    Activity name not present in printed report.
    ${StudentPresentStatus}    Verify Element Present    //span[contains(text(),'${Std_LN_FN}')]
    Run Keyword If    ${StudentPresentStatus}==False    Run Keyword And Continue On Failure    Fail    Student not there in the printed report.
    ${groupNameStatus}    Verify Element Present    //span[contains(text(),'${className}')]
    Run Keyword If    ${groupNameStatus}==False    Run Keyword And Continue On Failure    Fail and Capture Screenshot    Group name not displayed in the printed report in overall score indicators Row.
    [Teardown]    Stop Application

ATC-433-School Admin can Import teachers of same school
    [Documentation]    District Admin_Import teachers with same school
    ...
    ...    Step1 : Login as a school admin with valid credentials.
    ...
    ...    Step2 : Create a dictonary of teacher details for same school.
    ...
    ...    Step3 : Click on import users and select "Yes I am ready to import."
    ...
    ...    Step4 : Try to upload users, "Congraluations! the user have been imported" message should be displayed.
    ...
    ...    Step4 : Navigate to management page and search the record using search functionality unique record should be displayed.
    [Tags]    SCHOOL_ADMIN_83    IMPORT_TEACHERS_OF_SAME_SCHOOL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to import teacher details with same school names.
    ${uniqueValue}    GetUniqueValue    teacher
    ${teacherDetails1}    Create Dictionary    User ID    qa4mme+ta${uniqueValue}@gmail.com    Password    test01${uniqueValue}    First Name
    ...    ${uniqueValue}FN    Middle Name    ${uniqueValue}MN    Last Name    ${uniqueValue}LN    Grade Level
    ...    \    Role    Teacher    School    ${schoolName}
    ${teacherDetails2}    Create Dictionary    User ID    qa4mme+ta${uniqueValue}1@gmail.com    Password    test02${uniqueValue}    First Name
    ...    ${uniqueValue}1FN    Middle Name    ${uniqueValue}1MN    Last Name    ${uniqueValue}1LN    Grade Level
    ...    2    Role    Teacher    School    ${schoolName}
    ${schoolDetails}    Create Dictionary    1    ${teacherDetails1}    2    ${teacherDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC168.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    Verifying whether district admin is able to import teachers of same school or not.
    ${uploadStatus}    Upload Students From CSV    ${filePath}
    Run Keyword If    '${uploadStatus}'!='True'    Fail    Import teachers Functionality Failed while uploading two teachers for same school.
    Wait And Click Element    ${button.importTemplate.importUsersDlgClose}
    Navigate From Import Users
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Verify whether the imported details are displayed in the "UserDetails" table or not
    ${teacherRecordStatus1}    Run Keyword And Return Status    Search The Records    ${table.users}    ${text.management.search}    qa4mme+ta${uniqueValue}@gmail.com
    ${teacherRecordStatus2}    Run Keyword And Return Status    Search The Records    ${table.users}    ${text.management.search}    qa4mme+ta${uniqueValue}1@gmail.com
    Run Keyword Unless    ${teacherRecordStatus1} and ${teacherRecordStatus2}    Fail    Uploaded teacher details are not displayed in UserDetails.
    [Teardown]    Stop Application

ATC-434-School Admin unable to Import teachers of same user Ids.
    [Documentation]    District Admin_Import teachers with same user Ids.
    ...
    ...
    ...    Step1 : Login as a school admin with valid credentials.
    ...
    ...    Step2 : Create a dictonary of teacher details \ with same user Ids.
    ...
    ...    Step3 : Click on import users and select "Yes I am ready to import."
    ...
    ...    Step4 : Try to upload users, "User id is invalid: The user ID is already taken." error message should be displayed.
    [Tags]    SCHOOL_ADMIN_84    IMPORT_TEACHERS_OF_SAME_USERID    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${schoolName}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to import teacher details with same school names.
    ${uniqueValue}    GetUniqueValue    teacher
    ${teacherUid}    Set Variable    qa4mme+ta${uniqueValue}@gmail.com
    ${teacherDetails1}    Create Dictionary    User ID    ${teacherUid}    Password    test01${uniqueValue}    First Name
    ...    ${uniqueValue}FN    Middle Name    ${uniqueValue}MN    Last Name    ${uniqueValue}LN    Grade Level
    ...    \    Role    Teacher    School    ${schoolName}
    ${teacherDetails2}    Create Dictionary    User ID    ${teacherUid}    Password    test02${uniqueValue}    First Name
    ...    ${uniqueValue}FN    Middle Name    ${uniqueValue}MN    Last Name    ${uniqueValue}LN    Grade Level
    ...    \    Role    Teacher    School    ${schoolName}
    ${schoolDetails}    Create Dictionary    1    ${teacherDetails1}    2    ${teacherDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC168.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    Verifying import functionality while uploading duplicate userIds of teacher,error message should be displayed.
    ${uploadStatus}    Upload Students From CSV    ${filePath}
    Remove File    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC168.csv
    Comment    Verify whether the import displays an error or not
    Log    ${impUsersMsg}
    ${errorMsgStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${impUsersMsg}    ${None}
    Run Keyword If    ${errorMsgStatus}    Fail    The import is accepting the students who are having same userid.
    Comment    Verify whether it displays expected error message or not.
    ${expectedErrMsgUserIdTaken}    Set Variable    Column User ID (${teacherUid}) is invalid: This User ID is already taken
    ${errMsgIdTakenStatus}    String Should Contain    ${impUsersMsg}    ${expectedErrMsgUserIdTaken}
    Run Keyword If    '${errMsgIdTakenStatus}'!='True'    Fail    The displayed errormsg is not matching with the expected one.
    [Teardown]    Stop Application

ATC-435-Authorization alert display's when School Admin edit's class details
    [Documentation]    ATC-435-Authorization alert display's when School Admin edit's class details
    ...
    ...    Step1 : Login as a School admin with valid credentials.
    ...
    ...    Step2 : Add two classes from management page.
    ...
    ...    Step3 : Select classA edit group discription and with out saving classA,select ClassB.
    ...
    ...    Step4 : "Verification of Authorization to use Seats" alert message should be displayed then click on "Proceed button" edited group discriptin message should be saved.
    ...
    ...    Step5 : Again select ClassA edit the group discription field and with out saving classA,select ClassB.
    ...
    ...    Step6 : "Verification of Authorization to use Seats" alert message should be displayed then click on"Cancel" button automatically it should be select classB.
    ...
    ...    Step7 : Again select ClassA, click on edit button and click on edit titles button.
    ...
    ...    Step8 : Select one title,click on save button then "Verification of Authorization to use Seats" alert message should be displayed then click on "Proceed button" the selected title should be saved.
    ...
    ...    Step9 : Again click on edit titles button and select one more title then click on save button.
    ...
    ...    Step10 : "Verification of Authorization to use Seats" alert message should be displayed then click on"Cancel" button then the selected title should not be saved.
    [Tags]    SCHOOL_ADMIN_85    MANAGEMENT_VERIFY_AUTHORIZATION_ALERT_WHEN_EDIT_CLASS    HIGH
    Pass Execution If    ${isDemoQURL}    This test scenario could only be run on having more than one title for the schools.
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${assignmentTitle1}    Set Variable    CCS Math Assessments Level 2
    ${assignmentTitle2}    Set Variable    CCS Math Assessments Level 4
    ${titleList}    Create List    ${assignmentTitle1}    ${assignmentTitle2}
    ${userStatusList}    Create List    true
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${uniqueValue}    GetUniqueValue    sa
    ${studentDetails}    Create Dictionary    First Name    FN${uniqueValue}    Last Name    LN${uniqueValue}    User Name
    ...    ${uniqueValue}    Password    Password${uniqueValue}    Role    \    Middle Name
    ...    ${EMPTY}    Grade Level    5
    ${classesList}    Create List    Class${uniqueValue}A    Class${uniqueValue}B
    Comment    Adding two classes from management page.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add A Class Or Group    Class${uniqueValue}A
    Add A Class Or Group    Class${uniqueValue}B
    Comment    Select classA and edit the group discription.
    ${recordStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}A
    Run Keyword If    ${recordStatus}    Wait And Click Element    ${button.classDetail.edit}
    Enter Text In Text Field    ${text.classDetails.description}    created by QA
    Comment    Verifying whether with out saving classA then select classB record then alert is displayed or not.
    ${selectClass2RecordStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${selectClass2RecordStatus}    Fail    Another class record is not selected.
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    ${promptMsgStatus}    Wait For Element Visible    ${label.deleteClassOrGroup.promptMsg}
    Run Keyword And Continue On Failure    Run Keyword Unless    ${promptMsgStatus}    Fail    Prompt message is not displayed while edit one class and without saving and select the another class.
    Comment    Verifying whether click on proceed button group discription is properly saved or not.
    Comment    MYS-3105 : Updated locator as per application changes.
    ${ProceedStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.management.OK}
    Sleep    2s
    ${DiscriptionMSGStatus}    Run Keyword If    ${ProceedStatus}    Get Value    ${text.classDetails.description}
    ${DiscriptionMSGStatus}    String Should Contain    ${DiscriptionMSGStatus}    created by QA
    Run Keyword And Continue On Failure    Run Keyword Unless    ${DiscriptionMSGStatus}    Fail    After click on the proceed the edited text in discription text field is not saved properly.
    Comment    Click on edit button
    Wait And Click Element    ${button.classDetail.edit}
    Press Back Space Key    ${text.classDetails.description}
    Comment    Enter text into group discription field.
    Enter Text In Text Field    ${text.classDetails.description}    Modified SDT TEST
    Comment    Verifying whether with out saving classA then select classB record then alert is displayed or not.
    ${selectClass2RecordStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${selectClass2RecordStatus}    Fail    Another class record is not selected.
    Get Text    ${label.management.Name}
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    ${promptMsgStatus}    Wait For Element Visible    ${label.deleteClassOrGroup.promptMsg}
    Run Keyword And Continue On Failure    Run Keyword Unless    ${promptMsgStatus}    Fail    Prompt message is not displayed while edit one class and without saving and select the another class.
    Comment    Verifying whether click on cancel button,class name will change or not.
    ${cancelStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.management.PromptBtnNo}
    ${classStatus}    Run Keyword If    ${cancelStatus}    Get Value    ${text.classDetails.name}
    ${ClassNameStatus}    String Should Contain    ${classStatus}    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${ClassNameStatus}    Fail    After click on the cancel button the class should be changed.
    Comment    Verifying whether when titles are edit and save then prompt message is displayed or not.
    Wait And Click Element    ${button.classDetail.edit}
    Wait And Click Element    ${button.classDetails.editTitles}
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    Wait For Element Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Click On Element    //td[text()='${assignmentTitle1}']
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Comment    Verifying whether click on proceed button titles are saved properly or not.
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    ${seatsAuthorizationAlert}    Wait For Element Visible    ${button.management.Proceed}    10s    Specified element is not visible in given time.
    Run Keyword If    ${seatsAuthorizationAlert}    Wait And Click Element    ${button.management.Proceed}
    Wait Until Element Is Visible    ${button.classDetails.editTitles}    ${TimeOut}
    Sleep    2s
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    ${titlesList}    Wait For Element Visible    //div[text()='${assignmentTitle1}']
    Comment    Verifying whether when titles are edit and save then prompt message is displayed or not.
    Run Keyword And Continue On Failure    Run Keyword If    ${titlesList}    Wait And Click Element    ${button.classDetails.editTitles}
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    Wait For Element Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Click On Element    //td[text()='${assignmentTitle2}']
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Comment    Verifying whether click on cancel button titles are saved or not..
    Comment    MYS_3329 : Replaced with wait for element visible keyword.
    ${seatsAuthorizationAlert}    Wait For Element Visible    ${button.management.Proceed}    10s
    Run Keyword If    ${seatsAuthorizationAlert}    Wait And Click Element    ${button.management.PromptBtnNo}
    ${titlesList}    Wait For Element Visible    //div[text()='${assignmentTitle2}']
    Run Keyword If    ${titlesList}    Fail    After clicking on cancel button titles are added.
    [Teardown]    Stop Application

ATC 456-School Admin is able to Archive students
    [Documentation]    ATC 455-School Admin is able to Archive Students.
    ...
    ...    Step1 : Login to Wizard application with School admin credentials.
    ...
    ...    Step2 : Add Student role from management page.
    ...
    ...    Step3 : To select the above added roles from "Archive Teachers And Admins" table click on save button.
    ...
    ...    Step4 : "Archiving Students Can Only Partially Be Undone" window should be displayed click on proceed button.
    ...
    ...    Step5 : "The requested action has been completed." window should be displayed click on OK button.
    ...
    ...    Step6 : Verify archived records from User Details table,Table should be empty.
    ...
    ...    Step7 : Again click on Archive teachers and Admins button,Un check the previous selected records in "Archive Teachers And Admins" table click on save button.
    ...
    ...    Step8 : "Archiving Students Can Only Partially Be Undone" window should be displayed click on proceed button.
    ...
    ...    Step9 : "The requested action has been completed." window should be displayed click on OK button.
    ...
    ...    Step10 : Verify dearchived records from User Details table,Records should be displayed.
    [Tags]    SCHOOL_ADMIN_86    MANAGEMENT_VERIFY_ABLE_TO_ARCHIVE_STUDENTS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    comment    Login to Wizard application with DistrictAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_86
    comment    To add different roles from management table.
    ${addroleStatus}    Run Keyword And Return Status    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    ${uniqueVal}    Password${uniqueVal}
    ...    Student    \    5
    Run Keyword Unless    ${addroleStatus}    Fail    Unable tp add new user from management page
    ${lastName}    Set Variable    LN${uniqueVal}
    ${usersList}    Create List    ${lastName}
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Comment    To archive the selected records from student Archive table.
    ${archiveRecordStatus}    Archive The Users    ${usersList}    Student
    Run Keyword Unless    ${archiveRecordStatus}    Fail    Uable to archive the selected record
    Comment    MYS-3105 : Replaced "Input Text" keyword with "TypeCharactertoTextBox" to resolve sync issue.
    TypeCharactertoTextBox    ${text.management.search}    ${lastName}
    Comment    Verifying the student record was archived or not.
    ${recordStatus}    Verify Element Present    //div[@id='userGrid']//following-sibling::div[@class='dgrid-no-data']
    Run Keyword Unless    ${recordStatus}    Run Keyword And Continue On Failure    Fail    Archived record is still visible in User Details table.
    Clear Text    ${text.management.search}
    Comment    To Dearchive the selected records from student Archive table.
    ${deArchiveRecordStatus}    DeArchive The Users    ${usersList}    Student
    Run Keyword Unless    ${deArchiveRecordStatus}    Fail    Uable to dearchive the selected record
    Comment    MYS-3105 : Replaced "Input Text" keyword with "TypeCharactertoTextBox" to resolve sync issue.
    TypeCharactertoTextBox    ${text.management.search}    ${lastName}
    Comment    Verifying the student record was dearchived or not.
    ${recordStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword Unless    ${recordStatus}    Run Keyword And Continue On Failure    Fail    Dearchived record is not visible in User Details table.
    [Teardown]    Stop Application

ATC-459 Verify School Admin is able to Revert student to Previous Grade Level
    [Documentation]    ATC-459 Verify School Admin is able to Revert student to Previous Grade Level
    ...
    ...    Step1 : Login to wizard app with school admin credentials
    ...
    ...    Step2 : Add student from management page and click on promote student button.
    ...
    ...    Step3 : Select the student record from "Promoting and Reverting the Grade Level of Students" page and click on "Revert to Previous Grade Level" button.
    ...
    ...    Step4 : "Students Have Been Reverted to \ the Previous Grade Level" alert message should be displayed click on ok button.
    ...
    ...    Step5 : Verify the grade value of student in User Details table it should be reverted the grade valueto Previous Grade Level.
    [Tags]    SCHOOL_ADMIN_87    MANAGEMENT_VERIFY_REVERT_STUDENT_TO_PREVIOUS_GRADE_LEVEL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login to wizard app with school admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueVal}    GetUniqueValue    SDTTest
    Comment    To add student role from management page.
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    10
    ${lastName}    Get From Dictionary    ${studentDetails}    Last Name
    ${grade}    Get From Dictionary    ${studentDetails}    Grade Level
    ${studentId}    Get From Dictionary    ${studentDetails}    User Name
    ${studentUidList}    Create List    ${studentId}
    ${addroleStatus}    Run Keyword And Return Status    AddStudent    ${studentDetails}
    Run Keyword Unless    ${addroleStatus}    Fail    Unable to add new user from management page
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Comment    Wait and click on promote students button
    Wait And Click Element    ${button.managment.promoteStudents}
    ${studentListEditorTableStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Student list editor table is not visible.
    Comment    To revert the selected student record from student list editor table.
    ${promoteOrDemoteStatus}    Promote Or Demote Students    ${studentUidList}    Demote
    Run Keyword Unless    ${promoteOrDemoteStatus}    Fail    Passed list of Students were not promoted/Demoted.
    [Teardown]    Stop Application

ATC-460 Verify School Admin is able to Promote student to Next Grade Level
    [Documentation]    ATC-460 Verify School Admin is able to Promote student to Next Grade Level
    ...
    ...    Step1 : Login to wizard app with school admin credentials
    ...
    ...    Step2 : Add student from management page and click on promote student button.
    ...
    ...    Step3 : Select the student record from "Promoting and Reverting the Grade Level of Students" page and click on "Promote to Next Grade Level" button.
    ...
    ...    Step4 : "Students Have Been Promoted to the Next Grade Level" alert message should be displayed click on ok button.
    ...
    ...    Step5 : Verify the grade value of student in User Details table it should be promoted the grade valueto next Grade Level.
    [Tags]    SCHOOL_ADMIN_88    MANAGEMENT_PROMOTE_STUDENT_TO_NEXT_GRADE_LEVEL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login to wizard app with school admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueVal}    GetUniqueValue    SDTTest
    Comment    Add student role from management page.
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    10
    ${lastName}    Get From Dictionary    ${studentDetails}    Last Name
    ${grade}    Get From Dictionary    ${studentDetails}    Grade Level
    ${studentId}    Get From Dictionary    ${studentDetails}    User Name
    ${studentUidList}    Create List    ${studentId}
    ${addroleStatus}    Run Keyword And Return Status    AddStudent    ${studentDetails}
    Run Keyword Unless    ${addroleStatus}    Fail    Unable to add new user from management page
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Comment    Wait and click on promote students buitton
    Wait And Click Element    ${button.managment.promoteStudents}
    ${studentListEditorTableStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Student list editor table is not visible.
    Comment    To promote the selected student record from student list editor table.
    ${promoteOrDemoteStatus}    Promote Or Demote Students    ${studentUidList}    Promote
    Run Keyword Unless    ${promoteOrDemoteStatus}    Fail    Passed list of Students were not promoted/Demoted.
    [Teardown]    Stop Application

ATC 463-School Admin-Verify class archive functionality reflected in manage assignments
    [Documentation]    ATC 461-School Admin-class
    ...
    ...    Step1 : Login to wizard app with School admin credentials.
    ...
    ...    Step2 : Add new user as ateacher from management page.
    ...
    ...    Step3 : Add a class and titles from management page.
    ...
    ...    Step4 : Add student toa class from mangement page.
    ...
    ...    Step5 : Signout and relogin as a teacher,Assign assignment to a class from new assignments page.
    ...
    ...    Step 6 : Signout and relogin as a district admin to archive the class.
    ...
    ...    Step 7 : Signout and relogin as a teacher and verify the class name in manage assignments page,Class name should not be visible in manage assignments page after archived the class.
    [Tags]    SCHOOL_ADMIN_89    MANAGEMENT_CLASS_ARCHIVE_FUNCTIONALITY_REFLECTED_IN_MANAGE_ASSIGNMENTS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueVal}    GetUniqueValue    S_ADMIN_89
    ${className}    Set Variable    class${uniqueVal}
    ${classesList}    Create List    ${className}
    ${teacherFullName}    Set Variable    LN${uniqueVal},${SPACE}FN${uniqueVal}
    ${AssignmentTitle}    Set Variable If    ${isDemoQURL}    @{preSignUpTitleMenus}[0]    CCS Math Assessments Level 5
    ${ActivityName}    Set Variable If    ${isDemoQURL}    05 Matching    01 Form A
    ${titlesList}    Create List    ${AssignmentTitle}
    ${statusList}    Create List    True
    ${studentDetails1}    Create Dictionary    User Name    SDT1_${uniqueVal}    Password    test1234    First Name
    ...    ${uniqueVal}FN1    Last Name    LN1${uniqueVal}    Middle Name    MN    Grade Level
    ...    10
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add teacher role from management page
    Comment    MYS-2410 : Handle loading on navigation to management page.
    ${loadingStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}
    Run Keyword If    ${loadingStatus}    Wait Until Element is Invisible    ${common.homepage.Loading}
    ${teacherUid}    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    qa4mme+ta${uniqueVal}    ${teacherPassword}    Teacher
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    Add a class,Titles from management page
    Comment    MYS-2410 : Updated code to verify class is created or not.
    ${ClassStatus}    Add A Class Or Group    ${className}    ${teacherFullName}
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    "${rowNo}"=="0"    Fail    No class found with the given details.
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${statusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    Add class to a student from management page.
    ${AddClassToStudent}    AddClassToStudent    ${studentDetails1}    ${classesList}
    Run Keyword Unless    ${AddClassToStudent}    Fail    student is not added to a class
    Wait Until Element is Invisible    ${button.newUser.oK}
    Close Browser
    Comment    Login to wizard app with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUid}    ${teacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    3s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Wait and click on IAgree button
    Comment    MYS-2410 : To handle 'Enhancements' and 'Terms And Conditions' dialogs.
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enchancementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.window.Enhancements}
    Comment    Run Keyword If    '${enchancementStatus}'=='True'    Click On Element    //button[@id='mysAlertBtn']//parent::div[@id='alertOkBtn']
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    ${TimeOut}    Terms and conditions window is not displayed.
    Run Keyword If    ${bStatus}    Wait And Click Element    //button[@id='termsAndConditionsDlg-submit']
    Comment    Wait and click on IAgree button
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.SignUp.IAgreeBttn}    ${TimeOut}    "I Agree" button is not visible after clicking on "Terms And Conditions" button.
    Run Keyword If    ${bStatus}    Wait And Click Element    ${common.SignUp.IAgreeBttn}
    Wait Until Element is Invisible    ${common.SignUp.IAgreeBttn}
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Add assignment to a student from new assignments page.
    ${assignmentsStatus}    Add Assignment To A Student    ${className}    ${AssignmentTitle}    \    ${ActivityName}
    Run Keyword Unless    ${assignmentsStatus}    Fail    Assignment is not assigned to class
    Close Browser
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To archive the class
    ${archiveClassAndGroupStatus}    Archive Classes And Groups    ${classesList}
    Run Keyword Unless    ${archiveClassAndGroupStatus}    Fail    Failed to archive class.
    Close Browser
    Comment    Login to wizard app with teacher credentials
    ${loginStatus}    LoginToWizardApp    ${teacherUid}    ${teacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    10s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    To verify after archiving the class is visible in manage assignments page or not
    ${classStatus}    Verify Element Present    ${table.manageAssignments.allGroupList}//div[@class='dgrid-content ui-widget-content']/div[text()='${className}']
    Run Keyword If    ${classStatus}    Fail    The archived class name still present in manage assignments page.
    [Teardown]    Stop Application

ATC-466-School Admin can Import different roles
    [Documentation]    ATC-466-School Admin can Import different roles
    ...
    ...    Step1 : Login as a school admin with valid credentials.
    ...
    ...    Step2 : Create a dictonary for School admin,teacher and student details.
    ...
    ...    Step3 : Click on import users and select "Yes I am ready to import."
    ...
    ...    Step4 : Try to upload users, "Congraluations! the user have been imported" message should be displayed.
    ...
    ...    Step4 : Navigate to management page and verify the records,Records should be visible.
    [Tags]    SCHOOL_ADMIN_91    IMPORT_DIFFERENT_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${SelectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    comment    Login to wizard application with Schooladmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Try to import district admin,school admin,teacher and student details.
    ${uniqueValue}    GetUniqueValue    SDttest
    ${schoolAdminDetails}    Create Dictionary    User ID    qa4mme+sa${uniqueValue}@gmail.com    Password    test01${uniqueValue}    First Name
    ...    SA${uniqueValue}FN    Middle Name    SA${uniqueValue}MN    Last Name    SA${uniqueValue}LN    Grade Level
    ...    \    Role    School Admin    School    ${SelectingSchool}
    ${teacherDetails}    Create Dictionary    User ID    qa4mme+ta${uniqueValue}@gmail.com    Password    test02${uniqueValue}    First Name
    ...    TE${uniqueValue}FN    Middle Name    TE${uniqueValue}MN    Last Name    TE${uniqueValue}LN    Grade Level
    ...    \    Role    Teacher    School    ${SelectingSchool}
    ${studentDetails}    Create Dictionary    User ID    STD${uniqueValue}    Password    test03${uniqueValue}    First Name
    ...    STD${uniqueValue}FN    Middle Name    STD${uniqueValue}MN    Last Name    STD${uniqueValue}LN    Grade Level
    ...    5    Role    Student    School    ${SelectingSchool}
    ${schoolAdminLN}    Get From Dictionary    ${schoolAdminDetails}    Last Name
    ${teacherLN}    Get From Dictionary    ${teacherDetails}    Last Name
    ${studentLN}    Get From Dictionary    ${studentDetails}    Last Name
    ${schoolDetails}    Create Dictionary    1    ${schoolAdminDetails}    2    ${teacherDetails}    3
    ...    ${studentDetails}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC465.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    Verifying whether district admin is able to import all roles or not.
    ${uploadStatus}    Upload Students From CSV    ${filePath}
    Run Keyword If    '${uploadStatus}'!='True'    Fail    Import teachers Functionality Failed while uploading two teachers for same school.
    Wait And Click Element    ${button.importTemplate.importUsersDlgClose}
    Navigate From Import Users
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Verify whether the imported details are displayed in the "UserDetails" table or not
    ${LastNameList}    Create List    ${schoolAdminLN}    ${teacherLN}    ${studentLN}
    : FOR    ${itr}    IN    @{LastNameList}
    \    ${eachRoleStatus}    Verify Values In Table    ${table.users}    Last Name    ${itr}
    \    Run Keyword Unless    ${eachRoleStatus}    Fail    Uploaded users details are not displayed in UserDetails.
    [Teardown]    Stop Application

ATC-468 School Admin-verify grade level filtering functionality in ArchiveStudent
    [Documentation]    ATC-467 District Admin-verify grade level filtering functionality in ArchiveStudent
    ...
    ...    Step1 : Login to wizard app with district admin credentials.
    ...
    ...    Step2 : Select the preschool from schools drop down
    ...
    ...    Step3 : Add a student from management page.
    ...
    ...    Step4 : Click on archive student button.
    ...
    ...    Step5 : Select the grade level and verify the records according to selected grade level.
    ...
    ...    Step6 : Records should be displayed as related to selected grade level.
    [Tags]    SCHOOL_ADMIN_92    MANAGEMENT_ARCHIVE_STUDENTS_FILTER_BY_GRADE_LEVEL    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${SelectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    ${uniqueValue}    GetUniqueValue    SDT
    ${grade}    Set Variable    3
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${studentDetails}    Create Dictionary    User Name    STD${uniqueValue}    Password    test012345    First Name
    ...    STD${uniqueValue}FN    Middle Name    STD${uniqueValue}MN    Last Name    STD${uniqueValue}LN    Grade Level
    ...    ${grade}    Role    Student    School    ${SelectingSchool}
    Comment    Add a student from managment page.
    ${studentStatus}    AddStudent    ${studentDetails}
    Run Keyword Unless    ${studentStatus}    Fail    The student is not added.
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.studentArchive}
    Run Keyword If    ${bStatus}    Wait And Click Element    ${button.management.studentArchive}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    Comment    Select the grade value in archive students table.
    ${gradeValue}    Select DropDown Values    ${dropDown.archiveStudents.Grade}    ${table.archiveStudents.gradeMenu}    ${grade}
    Comment    Verifing the grade filtering functionality in in archive students table.
    ${selectedGradeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.archiveStudents.gradeValue}//span[text()='${grade}']    ${TimeOut}    The grade value is not visible in graded text box.
    ${matchingGradeValuesCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']//table//tr//td[text()='${grade}']
    : FOR    ${Itr}    IN    ${matchingGradeValuesCount}
    \    ${gradeValStatus}    Verify Element Visible    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row'][${Itr}]//table//tr//td[contains(@class,'field-grade')]
    \    ${gradeVal}    Get Text    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row'][${Itr}]//table//tr//td[contains(@class,'field-grade')]
    \    ${gradesStatus}    String Should Contain    ${gradeVal}    ${grade}
    \    Run Keyword Unless    ${gradesStatus}    Fail    Grade filtering functionality is failed.
    [Teardown]    Stop Application

ATC-444-School Admin-Archive classes and Groups functionality verification.
    [Documentation]    ATC-444-School Admin-Archive classes and Groups functionality verification.
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add a class from management page.
    ...
    ...    Step3 : Click on Archive classes and Groups button.
    ...
    ...    Step4 : Select the class or group from list editor and save.
    ...
    ...    Step5 : "Archiving Classes and Groups Can Only Partially Be Undone" window should be displayed.
    ...
    ...    Step6 : Click on "Achive Now" button and click on close button.
    ...
    ...    Step7 : Verify the calss name from class details table the class name should be hide.
    ...
    ...    Step8 : Again click on "Archive classes and Groups" button and un check the class name click on save button.
    ...
    ...    Step9 : "Archiving Classes and Groups Can Only Partially Be Undone" window should be displayed.
    ...
    ...    Step10: \ Click on "Achive Now" button and " Archiving Classes and Groups Complete " window should be displayed click on OK.
    ...
    ...    Step11 :Click on close button and verify class name in class details window Class name should be visible.
    [Tags]    SCHOOL_ADMIN_93    MANAGEMENT_ARCHIVE_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login to wizard application with school admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigating to mangement page.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueValue}    GetUniqueValue    QA
    ${className}    Set Variable    Class${uniqueValue}
    Comment    ${groupName}    Set Variable    Group${uniqueValue}
    Comment    ${bStatus}    Wait Until Element Is Visible    ${button.management.showGroups}    ${TimeOut}    The Show Groups button is not visble in management page.
    ${classAndGroupList}    Create List    ${className}
    ${classOrGroupType}    Create List    Class
    : FOR    ${type}    IN    @{classOrGroupType}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait And Click Element    ${button.management.showGroups}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}
    \    ...    Show groups button clicking action not recieved by element.
    \    Comment    Add a class from mangement page.
    \    ${classAndGroup}    Set Variable    ${className}
    \    Add A Class Or Group    ${classAndGroup}    \    Created by QA off shore    ${type}
    \    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    \    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    Comment    Verifing to Archive classes and groups functionality.
    ${archiveClassGroups}    Archive Classes And Groups    ${classAndGroupList}
    Run Keyword Unless    ${archiveClassGroups}    Fail    Failed to archive classes or Groups
    Comment    verifing the class or group name after archive class or group \ in class details table.
    ${bStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    Run Keyword If    ${bStatus}    Fail    The class or group name is still visible after Archied the class.
    Comment    Verifying whether dearchive the classes and groups.
    ${deArchiveClassGroups}    De-Archive Classes Or Groups    ${classAndGroupList}
    Run Keyword Unless    ${deArchiveClassGroups}    Fail    Failed to archive classes or Groups
    Comment    verifing the class or group name after deArchive class or group in class details table.
    ${bStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    Run Keyword Unless    ${bStatus}    Fail    The class or group names are not visible after unArchied the class or group.
    [Teardown]    Stop Application

ATC-447- School Admin imports School Admin
    [Documentation]    ATC-447-Verify School Admin able to import School Admin
    ...
    ...    Step1 : Login to wizard app with school admin details.
    ...
    ...    Step2 : Create a dictionary to \ school admin details.
    ...
    ...    Step3 : Click on import button and select "Yes,Iam ready to import".
    ...
    ...    Step4 : Try to upload the the admin details.
    ...
    ...    Step5 : Details should be imported and "Congralations" message should be displayed.
    ...
    ...    Step6 : Navigate to management page and verify the records which are imported.
    ...
    ...    Step7 : Records should be visible in user details table.
    [Tags]    SCHOOL_ADMIN_94    IMPORT_SCHOOL_ADMIN    MEDIUM
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${SelectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to wizard application with school admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    try to import school admin.
    ${uniqueValue}    GetUniqueValue    admin
    ${schoolAdminDetails1}    Create Dictionary    User ID    qa4mme+sa${uniqueValue}1@gmail.com    Password    test01${uniqueValue}    First Name
    ...    ${uniqueValue}FN    Middle Name    ${uniqueValue}MN    Last Name    ${uniqueValue}LN    Grade Level
    ...    \    Role    School Admin    School    ${SelectingSchool}
    ${schoolAdminDetails2}    Create Dictionary    User ID    qa4mme+sa${uniqueValue}2@gmail.com    Password    test02${uniqueValue}    First Name
    ...    ${uniqueValue}1FN    Middle Name    ${uniqueValue}1MN    Last Name    ${uniqueValue}1LN    Grade Level
    ...    2    Role    School Admin    School    ${SelectingSchool}
    ${schoolDetails}    Create Dictionary    1    ${schoolAdminDetails1}    2    ${schoolAdminDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC446.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    Verifying whether school admin is able to import school admin.
    ${uploadStatus}    Upload Students From CSV    ${filePath}
    Run Keyword If    '${uploadStatus}'!='True'    Fail    Import Admins Functionality Failed while uploading School admin.
    Wait And Click Element    ${button.importTemplate.importUsersDlgClose}
    Navigate From Import Users
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Verify whether the imported details are displayed in the "UserDetails" table or not.
    ${schoolAdminRecordStatus1}    Run Keyword And Return Status    Verify Values In Table    ${table.users}    First Name    ${uniqueValue}FN
    ${schoolAdminRecordStatus2}    Run Keyword And Return Status    Verify Values In Table    ${table.users}    First Name    ${uniqueValue}1FN
    Run Keyword Unless    ${schoolAdminRecordStatus1} and ${schoolAdminRecordStatus2}    Fail    Imported admin details are not displayed in UserDetails.
    [Teardown]    Stop Application

ATC-448-School Admin unable to import District Admin
    [Documentation]    ATC-448-Verify School Admin able to import District Admin
    ...
    ...    Step1 : Login to wizard app with school admin details.
    ...
    ...    Step2 : Create a dictionary to \ school admin and district admin details.
    ...
    ...    Step3 : Click on import button and select "Yes,Iam ready to import".
    ...
    ...    Step4 : Try to upload the the admin details.
    ...
    ...    Step5 : Details should not be imported and error \ message "(District Admin): Not enough permissions to create user having this role" should be displayed.
    [Tags]    SCHOOL_ADMIN_95    IMPORT_VERIFY_SCHOOL_ADMIN_CANT_IMPORT_DISTRICT_ADMIN    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${SelectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to wizard application with school admin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    try to import school admin.
    ${uniqueValue}    GetUniqueValue    admin
    ${districtAdminDetails1}    Create Dictionary    User ID    qa4mme+da${uniqueValue}1@gmail.com    Password    test01${uniqueValue}    First Name
    ...    ${uniqueValue}FN    Middle Name    ${uniqueValue}MN    Last Name    ${uniqueValue}LN    Grade Level
    ...    \    Role    District Admin    School    ${SelectingSchool}
    ${districtAdminDetails2}    Create Dictionary    User ID    qa4mme+da${uniqueValue}2@gmail.com    Password    test02${uniqueValue}    First Name
    ...    ${uniqueValue}1FN    Middle Name    ${uniqueValue}1MN    Last Name    ${uniqueValue}1LN    Grade Level
    ...    \    Role    School Admin    School    ${SelectingSchool}
    ${schoolDetails}    Create Dictionary    1    ${districtAdminDetails1}    2    ${districtAdminDetails2}
    ${filePath}    Set Variable    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC448.csv
    ${uploadedFileStatus}    Create Csv File Using Dictionary Values    ${filePath}    ${schoolDetails}
    Comment    Verifying whether school admin is able to import district admin.
    ${uploadStatus}    Upload Students From CSV    ${filePath}
    Remove File    ${EXECDIR}\\Automation_Testsuites\\TestData\\ATC448.csv
    Comment    Verify whether the import displays an error or not
    Log    ${impUsersMsg}
    ${errorMsgStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${impUsersMsg}    ${None}
    Run Keyword If    ${errorMsgStatus}    Fail    The import is accepting the District admin details.
    Comment    Verify whether it displays expected error message or not.
    ${expectedErrMsg}    Set Variable    (District Admin): Not enough permissions to create user having this role.
    ${errMsgStatus1}    String Should Contain    ${impUsersMsg}    ${expectedErrMsg}
    Run Keyword If    '${errMsgStatus1}'!='True'    Fail    The displayed errormsg is not matching with the expected one.
    [Teardown]    Stop Application

ATC 451 - School Admin is able to Archive Teachers And Admins
    [Documentation]    ATC 450-School Admin is able to Archive Teachers And Admins.
    ...
    ...    Step1 : Login to Wizard application with School admin credentials.
    ...
    ...    Step2 : Add School Admin,Teacher and Teacher School Admin roles from management page.
    ...
    ...    Step3 : To select the above added roles from "Archive Teachers And Admins" table click on save button.
    ...
    ...    Step4 : "Archive Teachers And Admins" window should be displayed click on proceed button.
    ...
    ...    Step5 : "The requested action has been completed." window should be displayed click on OK button.
    ...
    ...    Step6 : Verify archived records from User Details table,Table should be empty.
    ...
    ...    Step7 : Again click on Archive teachers and Admins button,Un check the previous selected records in "Archive Teachers And Admins" table click on save button.
    ...
    ...    Step8 : "Archive Teachers And Admins" window should be displayed click on proceed button.
    ...
    ...    Step9 : "The requested action has been completed." window should be displayed click on OK button.
    ...
    ...    Step10 : Verify dearchived records from User Details table,Records should be displayed.
    [Tags]    SCHOOL_ADMIN_96    MANAGEMENT_ARCHIVE_TEACHERS_AND_ADMINS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    comment    Login to Wizard application with SchoolAdmin credentials.
    ${teacherRole}    Set Variable    Instructor
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${roles}    Create List    ${teacherRole}    ${schoolAdmin}
    ${role_List}    Create List    SchoolAdmin    Teacher    ${roles}
    : FOR    ${each_Role}    IN    @{role_List}
    \    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_96
    \    comment    To add different roles from management table.
    \    ${addroleStatus}    Run Keyword And Return Status    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    ${uniqueVal}
    \    ...    Password${uniqueVal}    ${each_Role}    \    5
    \    Run Keyword Unless    ${addroleStatus}    Fail    Unable tp add new user from management page
    \    ${lastName}    Set Variable    LN${uniqueVal}
    \    ${usersList}    Create List    ${lastName}
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    \    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    \    Comment    To archive the selected records from Archive teachers and Admins table.
    \    ${archiveRecordStatus}    Archive The Users    ${usersList}    TeachersAdmins
    \    Run Keyword Unless    ${archiveRecordStatus}    Fail    Uable to archive the selected record
    \    Comment    MYS-3105 : Replaced "Input Text" keyword with "TypeCharactertoTextBox" to resolve sync issue.
    \    TypeCharactertoTextBox    ${text.management.search}    ${lastName}
    \    ${recordStatus}    Verify Element Present    ${table.users}//following-sibling::div[@class='dgrid-no-data']
    \    Run Keyword Unless    ${recordStatus}    Run Keyword And Continue On Failure    Fail    Archived record is still visible in User Details table.
    \    Clear Text    ${text.management.search}
    \    Comment    To Dearchive the selected records from Archive teachers and Admins table.
    \    ${deArchiveRecordStatus}    DeArchive The Users    ${usersList}    TeachersAdmins
    \    Run Keyword Unless    ${deArchiveRecordStatus}    Fail    Uable to dearchive the selected record
    \    Comment    MYS-3105 : Replaced "Input Text" keyword with "TypeCharactertoTextBox" to resolve sync issue.
    \    TypeCharactertoTextBox    ${text.management.search}    ${lastName}
    \    ${recordStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    \    Run Keyword Unless    ${recordStatus}    Run Keyword And Continue On Failure    Fail    Dearchived record is not visible in User Details table.
    \    Clear Text    ${text.management.search}
    [Teardown]    Stop Application

ATC 453 - SchoolAdmin- Teacher have classes/groups and cannot be archived
    [Documentation]    ATC 452 Teacher have classes/groups and cannot be archived.
    ...
    ...    Step1 : Login to wizard app with School admin credentials.
    ...
    ...    Step2 : Add teacher role from management page.
    ...
    ...    Step3 : Add classes/groups from mangement with above teacher.
    ...
    ...    Step4 : Try to archive the teacher,Alert message" One or more of the selected teachers have classes/groups and cannot be archived."should be displayed.
    [Tags]    SCHOOL_ADMIN_97    MANAGEMENT_VERIFY_TEACHER_WITH_CLASSES_AND_GROUPS_CANT_BE_ARCHIVED    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_97
    ${classAndGroup}    Create List    class${uniqueVal}
    ${firstName}    Set Variable    FN${uniqueVal}
    ${lastName}    Set Variable    LN${uniqueVal}
    ${teacherFullName}    Set Variable    ${lastName},${SPACE}${firstName}
    comment    Login to Wizard application with SchoolAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${newUserStatus}    Run Keyword And Return Status    Add Role From Management    ${firstName}    ${lastName}    ${uniqueVal}    Password${uniqueVal}
    ...    Teacher    \    5
    Run Keyword Unless    ${newUserStatus}    Fail    Unable tp add new user from management page
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    ${classOrGroupType}    Create List    Class
    : FOR    ${type}    IN    @{classOrGroupType}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait And Click Element    ${button.management.showGroups}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait Until Element Is Visible    ${button.management.showClasses}
    \    Comment    Add a class from mangement page.
    \    ${classAndGroup}    Set Variable    class${uniqueVal}
    \    ${classOrGroupStatus}    Add A Class Or Group    ${classAndGroup}    ${teacherFullName}    Created by QA off shore    ${type}
    \    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    \    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    \    Comment    Try to archive the teachers have classes/groups from Archive teachers and Admins table.
    \    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    \    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    \    ${recordStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.fromTable}    Last Name    ${lastName}
    \    Run Keyword Unless    ${recordStatus}    Fail    The record is not added.
    \    Wait And Click Element    ${button.editStudentsAndTitles.save}
    \    ${ProceedAlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}    ${TimeOut}    Alert is not diplayed when Archive the record.
    \    Run Keyword If    ${ProceedAlertStatus}    Wait And Click Element    ${button.management.Proceed}
    \    Wait Until Element Is Visible    ${label.login.Alert}    ${TimeOut}    completed alert message is not displayed when proceed to archive the record
    \    Comment    Teachers have classes/groups and cannot be archived,alert message should be displayed.
    \    ${alertMsgStatus}    Get Text    ${label.login.AlertMsg}
    \    ${alertMessageStatus}    String Should Contain    ${alertMsgStatus}    One or more of the selected teachers have classes/groups and cannot be archived.
    \    Run Keyword Unless    ${alertMessageStatus}    Fail    Teacher have classes or groups and Archived.
    \    Wait And Click Element    ${button.alert.mysAlertBtn}
    [Teardown]    Stop Application

ATC-470 Verify School Admin is able to demote a student "K" to "Pre-K"
    [Documentation]    ATC-470 Verify School Admin is able to demote a student "K" to "Pre-K"
    ...
    ...    Step1 : Login to wizard app with School admin credentials
    ...
    ...    Step2 : Add student from management page and click on promote student button.
    ...
    ...    Step3 : Select the student record from "Promoting and Reverting the Grade Level of Students" page and click on "Revert to Previous Grade Level" button.
    ...
    ...    Step4 : "Students Have Been Reverted to the Previous Grade Level" alert message should be displayed click on ok button.
    ...
    ...    Step5 : Verify the grade value of student in User Details table it should be reverted the grade valueto Previous Grade Level.
    ...
    ...    Step6 : Grade value should be demoted "K" to "Pre-K".
    [Tags]    SCHOOL_ADMIN_98    MANAGEMENT_DEMOTE_A_STUDENT_K_TO_PRE-K    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueVal}    GetUniqueValue    SDTTest
    Comment    To add student role from mangement page.
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${lastName}    Get From Dictionary    ${studentDetails}    Last Name
    ${grade}    Get From Dictionary    ${studentDetails}    Grade Level
    ${studentId}    Get From Dictionary    ${studentDetails}    User Name
    ${studentUidList}    Create List    ${studentId}
    ${addroleStatus}    Run Keyword And Return Status    AddStudent    ${studentDetails}
    Run Keyword Unless    ${addroleStatus}    Fail    Unable to add new user from management page
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Comment    wait and click on promote student button
    Wait And Click Element    ${button.managment.promoteStudents}
    ${studentListEditorTableStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Student list editor table is not visible.
    Comment    To revert the selected student record from student list editor table grade "K" to "Pre-K".
    ${promoteOrDemoteStatus}    Promote Or Demote Students    ${studentUidList}    Demote
    Run Keyword Unless    ${promoteOrDemoteStatus}    Fail    Student grade is not demoted to "K" to "Pre-K".
    [Teardown]    Stop Application

ATC 472 School admin-Verify the search functionality in archive teachers & admis table
    [Documentation]    ATC 471 School admin-Verify the search functionality in archive teachers & admis table
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add school admin,Teacher and teacher,school admin roles from management page.
    ...
    ...    Step3 : Click on Archive Teachers&Admins button
    ...
    ...    Step4 : Verify the record using search functionality,unique record should be displayed.
    [Tags]    SCHOOL_ADMIN_99    MANAGEMENT_VERIFY_SEARCH_IN_ARCHIVE_TEACHERS_AND_ADMINS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${SchoolAdminUid}    Get From Dictionary    ${preSchoolAdminDetails}    UserName
    ${SchoolAdminPwd}    Get From Dictionary    ${preSchoolAdminDetails}    Password
    ${teacherRole}    Set Variable    Instructor
    comment    Login to Wizard application with SchoolAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${SchoolAdminUid}    ${SchoolAdminPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${roles}    Create List    ${teacherRole}    ${schoolAdmin}
    ${role_List}    Create List    SchoolAdmin    Teacher    ${roles}
    : FOR    ${each_Role}    IN    @{role_List}
    \    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_99
    \    comment    To add different roles from management table.
    \    ${adminUserID}    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    ${uniqueVal}    Password${uniqueVal}
    \    ...    ${each_Role}    \    5
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.teacherAndAdminsArchive}
    \    Run Keyword If    ${bStatus}    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    \    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    \    Comment    To search the record in archive teachers and admins table.
    \    Search The Records    ${table.fromTable}    ${Text.search.studentOrTitles}    ${adminUserID}
    \    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    \    ${recordsStatus}    String Should Contain    ${recordCount}    1
    \    Run Keyword Unless    ${recordsStatus}    Fail    Records count were mismatched using search functionality.
    \    Clear Text    ${Text.search.studentOrTitles}
    \    Wait And Click Element    ${button.listEditor.close}
    [Teardown]    Stop Application

ATC 497 School Admin-Verify close button and search functionality in edit classes&Groups
    [Documentation]    ATC 497 School Admin-close button and search functionality in edit classes&Groups
    ...
    ...    Step1 : Login to wizard app with School admin credentials.
    ...
    ...    Step2 : Add a student from management page.
    ...
    ...    Step3 : Select the student record in user details table and click on edit button.
    ...
    ...    Step4 : And click on classes and groups edit button.
    ...
    ...    Step5 : Filter the class name using search funtionality,unique class name should be displayed.
    ...
    ...    Step 6 : Verify the close button in list editor table,close button should be displayed.
    ...
    ...    Step7 : Click on close button, list editor page should be closed.
    [Tags]    SCHOOL_ADMIN_100    MANAGEMENT_VERIFY_CLOSE_BUTTON_AND_SEARCH_IN_EDIT_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin/PreRequisite Groups is not created
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    Comment    ${groupName}    Set Variable    @{preGroupList}[0]
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentLN}    Get From Dictionary    ${studentDetails}    Last Name
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a student from manageemnt page. and select the student record from user details table.
    ${studentStatus}    AddStudent    ${studentDetails}
    Run Keyword If    '${studentStatus}'=='False'    Fail    Student is not added
    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Comment    Wait And Click Element    ${button.userDetails.edit}
    ${classAndGroupsEditBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.classesAndGroups.edit}    ${TimeOut}    Classes and groups edit button is not visible in calss details window.
    Wait And Click Element    ${button.classesAndGroups.edit}
    ${classesAndGroupsListEditorStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${TimeOut}    Classes and groups list editor page is not visisble.
    Comment    Filter the calss and group name using search functionality in classes& Groups listeditor table.
    ${classesAndGroups}    Create List    ${ClassName}
    : FOR    ${itr}    IN    @{classesAndGroups}
    \    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${itr}
    \    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    \    ${recordsStatus}    String Should Contain    ${recordCount}    1
    \    Select The Record In Table    ${table.fromTable}    Name    ${ClassName}
    \    ${SelectedTitleStatus}    Verify Element Visible    //td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name dgrid-focus' and text()='${ClassName}']
    \    Comment    Run Keyword If    '${SelectedTitleStatus}'=='False'    Fail    Title is not selected in syllabus table.
    \    Clear Text    ${Text.search.studentOrTitles}
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${closeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.userDetails.save}    ${TimeOut}    close button is not clicked in list editors table.
    [Teardown]    Stop Application

ATC 494-School Admin-Verify close button and search functionality in Edit titles class window
    [Documentation]    ATC 494-School Admin-Verify close button and search functionality in Edit titles window
    ...
    ...    Step1 : Login to wizard app with School admin credentials
    ...
    ...    Step2 : Select the class in class details table from management page.
    ...
    ...    Step3 : Click on class details edit button and click on titles edit button,Titles list editor table should be displayed.
    ...
    ...    Step4 : Verify the record using search functionality,unique record should be displayed.
    ...
    ...    Step5 : Verify the close button,close button should be displayed.
    ...
    ...    Step6 : Click on close button, list editor page should be closed.
    [Tags]    SCHOOL_ADMIN_101    MANAGEMENT_VERIFY_CLOSE_BUTTON_AND_SEARCH_IN_EDIT_CLASSES_AND_TITLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${titleName}    Set Variable    @{preSignUpTitleMenus}[0]
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword If    '${rowNo}'=='0'    Fail    Failed to select the created class.
    Comment    Edit student in class details window
    Edit The Class Or Group Details
    ${studentEditBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.titles.edit}    ${TimeOut}    Titles edit button is not visible in calss details window.
    Wait And Click Element    ${button.titles.edit}
    Comment    Select the title using search funtionality from titles list.
    ${studentListEditorStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${TimeOut}    titles list editor page is not visisble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${titleName}
    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    String Should Contain    ${recordCount}    1
    ${titleSelectionStatus}    CommonLibrary.Select The Row    ${table.fromTable}    1
    ${SelectedTitleStatus}    Verify Element Visible    //td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name dgrid-focus' and text()='${titleName}']
    Run Keyword If    '${SelectedTitleStatus}'=='False'    Fail    Title is not selected in syllabus table.
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${closeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.classDetails.save}    ${TimeOut}    close button is not clicked in list editors table.
    [Teardown]    Stop Application

ATC 503 SA-Verify close button and search functionality for archive classes&Groups
    [Documentation]    ATC 503 SA-Verify close button and search functionality for archive classes&Groups
    ...
    ...    Step1 : Login to wizard application with school admin credentials
    ...
    ...    Step2 : Click on Archive classes&groups button in management button.
    ...
    ...    Step3 : To filter the class or group name using search functionality in archive classes&Groups list editor,unique record should be displayed.
    ...
    ...    Step4 : To verify the close button and click on close button,archive classes&Groups list editor page should be closed.
    [Tags]    SCHOOL_ADMIN_103    MANAGEMENT_VERIFY_CLOSE_BUTTON_AND_SEARCH_FOR_ARCHIVE_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False' and "${preGroupsScriptStatus}" != "True"    Fail    PreRequisite School Admin/PreRequisite Groups is not created
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    Comment    ${groupName}    Set Variable    @{preGroupList}[0]
    comment    Login to Wizard application with SchoolAdmin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    wait untill Archive classes and groups button is visible
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.groupArchiveBtn}    ${TimeOut}    Class and Groups archive button is not visible in management page.
    Run Keyword If    ${bStatus}    Wait And Click Element    ${button.management.groupArchiveBtn}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Classes and Groups list editor table is not visble.
    Comment    To search the class name and group name in archive classes and groups table.
    ${classesAndGroupsList}    Create List    ${ClassName}
    : FOR    ${Itr}    IN    @{classesAndGroupsList}
    \    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${Itr}
    \    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    \    ${recordsStatus}    String Should Contain    ${recordCount}    1
    \    Select The Record In Table    ${table.fromTable}    Name    ${Itr}
    \    ${SelectedclassOrGroupStatus}    Verify Element Visible    //td[@class='dgrid-cell dgrid-cell-padding dgrid-column-user_id field-user_id dgrid-focus' and text()='${Itr}']
    \    Comment    Run Keyword If    '${SelectedclassOrGroupStatus}'=='False'    Fail    Classes or groups records count were mismatched using search functionality.
    \    Clear Text    ${Text.search.studentOrTitles}
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${printOrExportwindowStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.groupArchiveBtn}    ${TimeOut}    Archive classes and groups button is not visible when close the list editor table.
    [Teardown]    Stop Application

ATC 512 SA-Validate class Archive And De-Archive functionality with duplicate class name
    [Documentation]    ATC 512-SA-Validate class Archive And De-Archive functionality with duplicate class name.
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add a class from management page.
    ...
    ...    Step3 : Archive the class from archive class and groups list editors table.
    ...
    ...    Step4 : Click on the archive class & groups button and get text of archived class (class name should be Archived as with time Stamp).
    ...
    ...    Step5 : Add a class with existing class name from management page.
    ...
    ...    Step6 : To de-archive the class name from archive classes and groups listeditors table.
    ...
    ...    Step7 : Verifyclassname and dearchive class name it should be saved as with time stamp.
    [Tags]    SCHOOL_ADMIN_104    MANAGEMENT_VERIFY_ARCHIVE_AND_DEARCHIVE_WITH_DUPLICATE_CLASS_NAME    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueValue}    GetUniqueValue    Class
    ${className}    Set Variable    ${uniqueValue}
    ${classesList}    Create List    ${className}
    Comment    Login to wizard application with school admin credentials.
    ${Login_Status}=    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${Login_Status}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a class from management page
    ${classNameStatus}    Add A Class Or Group    ${className}    \    Created by QA
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Fail to add a class
    Comment    To archive the class and verifying the class name in class details table.
    ${archiveClassStatus}    Archive Classes And Groups    ${classesList}
    ${afterArchiveClassStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    '${afterArchiveClassStatus}'=='True'    Fail    Fail to archive class.Class name still visible in class details table.
    Comment    To verify the archived class name is saved as with time stamp or not and get archivedclass name
    Wait And Click Element    ${button.management.groupArchiveBtn}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Classes and Groups list editor table is not visble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${className}
    ${classnameInListEditor}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name']    ${TimeOut}    Class name is not visible using search functionality
    ${archivedClassName}    Get Text    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name']
    Wait And Click Element    ${button.listEditor.close}
    Comment    Add a with existing class name
    ${classNameStatus}    Add A Class Or Group    ${className}    \    Created by QA
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Fail to add a class
    Comment    De-archive the class and verifing the class name is saved as with timestamp or not
    ${De-ArchiveClassStatus}    De-Archive Classes Or Groups    ${classesList}
    ${afterDe-ArchiveClassStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${archivedClassName}
    ${DuplicateClassStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    '${afterDe-ArchiveClassStatus}'=='False' and '${DuplicateClassStatus}'=='False'    Fail    Fail to De-archive class.Class name is not visible in class details table.
    [Teardown]    Stop Application

ATC 514 SA-Validate class Archive And De-Archive functionality with duplicate class
    [Documentation]    ATC 514-SA-Validate class Archive And De-Archive functionality with duplicate group name.
    ...
    ...    Step1 : Login to wizard application with School admin credentials.
    ...
    ...    Step2 : Add a group from management page.
    ...
    ...    Step3 : Archive the group from archive class and groups list editors table.
    ...
    ...    Step4 : Click on the archive class & groups button and get text of archived group (group name should be Archived as with time Stamp).
    ...
    ...    Step5 : Add a group with existing group name from management page.
    ...
    ...    Step6 : To de-archive the group name from archive classes and groups listeditors table.
    ...
    ...    Step7 : Verify group name and dearchive group name it should be saved as with time stamp.
    [Tags]    SCHOOL_ADMIN_105    MANAGEMENT_VERIFY_ARCHIVE_AND_DEARCHIVE_WITH_DUPLICATE_GROUP_NAME    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueValue}    GetUniqueValue    Class
    ${className}    Set Variable    ${uniqueValue}
    ${groupsList}    Create List    ${className}
    Comment    Login to wizard application with school admin credentials.
    ${Login_Status}=    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${Login_Status}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a group from management page
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Wait Until Element is Invisible    ${button.management.showGroups}
    ${groupNameStatus}    Add A Class Or Group    ${className}    \    Created by QA
    Run Keyword If    '${groupNameStatus} '=='False'    Fail    Fail to add a class
    Comment    To archive the group and verifying the group name in group details table.
    ${archiveGroupStatus}    Archive Classes And Groups    ${groupsList}
    ${afterArchivegroupStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    '${afterArchivegroupStatus}'=='True'    Fail    Fail to archive group.Group name still visible in group details table.
    Comment    To verify the archived group name is saved as with time stamp or not and get archived group name
    Wait And Click Element    ${button.management.groupArchiveBtn}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Classes and Groups list editor table is not visble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${className}
    ${groupNameInListEditor}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name']    ${TimeOut}    Class name is not visible using search functionality
    ${archivedGroupName}    Get Text    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name']
    Wait And Click Element    ${button.listEditor.close}
    Comment    Add a with existing group name
    ${groupNameStatus}    Add A Class Or Group    ${className}    \    Created by QA
    Run Keyword If    '${groupNameStatus}'=='False'    Fail    Fail to add a class
    Comment    De-archive the group and verifing the group name is saved as with timestamp or not
    ${De-ArchiveGroupStatus}    De-Archive Classes Or Groups    ${groupsList}
    ${afterDe-ArchiveGroupStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${archivedGroupName}
    ${DuplicateGroupStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    '${afterDe-ArchiveGroupStatus}'=='False' and '${DuplicateGroupStatus}'=='False'    Fail    Fail to De-archive group.Group name is not visible in group details table.
    [Teardown]    Stop Application

ATC 516 SA- Validate different roles Archive And De-Archive with duplicate records
    [Documentation]    ATC 516-SA- Validate different roles Archive And De-Archive with duplicate records.
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add different roles (school Admin,Teacher and teacher,School Admin) roles from management page.
    ...
    ...    Step4 : To archive the record and verify the record in user details table,the record should be hide.
    ...
    ...    Step5 : Verify the record userId modified as with time stamp in list editors page or not,The record userId should be modified with time stamp.
    ...
    ...    Step6: Add role from management page with already existing details,role should be added.
    ...
    ...    Step7 : Previously archived record to be dearchive,and verify in users table.
    ...
    ...    Step8 : Dearchived record should be saved as with time stamp, and Second time added record should be normal record.
    [Tags]    SCHOOL_ADMIN_106    MANAGEMENT_VERIFY_ARCHIVE_AND_DEARCHIVE_WITH_MULTIPLE_ROLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${teacherRole}    Set Variable    Instructor
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${roles}    Create List    ${teacherRole}    ${schoolAdmin}
    ${role_List}    Create List    SchoolAdmin    Teacher    ${roles}
    : FOR    ${each_Role}    IN    @{role_List}
    \    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_106
    \    comment    To add different roles from management table.    `
    \    ${lastName}    Set Variable    LN${uniqueVal}
    \    ${userID}    Add Role From Management    FN${uniqueVal}    ${lastName}    ${uniqueVal}    Password${uniqueVal}
    \    ...    ${each_Role}    \    5
    \    ${usersList}    Create List    ${lastName}
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    \    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    \    Comment    To archive the selected records from Archive teachers and Admins table.
    \    ${archiveRecordStatus}    Archive The Users    ${usersList}    TeachersAdmins
    \    Run Keyword Unless    ${archiveRecordStatus}    Fail    Uable to archive the selected record
    \    Comment    verifying the archived record username is modified with time stamp or not.
    \    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    \    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    TEacher and admins list editor table is not visble.
    \    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${lastName}
    \    ${teacher&AdminsListEditor}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-user_id field-user_id']    ${TimeOut}    teacher and admins records were not visible using search functionality
    \    ${archived RecordName}    Get Text    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-user_id field-user_id']
    \    Wait And Click Element    ${button.listEditor.close}
    \    comment    To add different roles from management table.
    \    ${userID}    Add Role From Management    FN${uniqueVal}    ${lastName}    ${uniqueVal}    Password${uniqueVal}
    \    ...    ${each_Role}    \    5
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    \    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    \    Wait And Click Element    ${button.management.toggleSplitterOpen}
    \    Comment    To Dearchive the selected records from Archive teachers and Admins table.
    \    ${archiveBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.teacherAndAdminsArchive}    ${TimeOut}    Archive button is not visible in management window.
    \    Run Keyword If    ${archiveBtnStatus}    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    \    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    \    ${checkBoxSelectionStatus}    Run Keyword And Return Status    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    \    ${checkBoxUnSelectionStatus}    Run Keyword And Return Status    Unselect Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    \    Run Keyword If    '${checkBoxSelectionStatus}'=='False' and '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to select and unselect check box selection.
    \    Wait And Click Element    ${button.editStudentsAndTitles.save}
    \    ${ProceedAlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}    ${TimeOut}    Alert is not diplayed when Archive the record.
    \    Run Keyword If    ${ProceedAlertStatus}    Wait And Click Element    ${button.management.Proceed}
    \    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}    completed alert message is not displayed when proceed to archive the record
    \    Wait And Click Element    ${button.alert.mysAlertBtn}
    \    Comment    Verifying the dearchived recordusername is in modified as with time stamp or not.
    \    ${archiveBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.teacherAndAdminsArchive}    Archive button is not visible in management window.
    \    Enter Text In Text Field    ${text.management.search}    ${archived RecordName}
    \    ${actualRecordStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    \    Run Keyword If    '${actualRecordStatus}'!='True'    Fail    Archived record is not saved with time stamp
    \    Clear Text    ${text.management.search}
    [Teardown]    Stop Application

ATC 518 SA- Validate student Archive And De-Archive with duplicate student Name
    [Documentation]    ATC 518-SA- Validate student \ Archive And De-Archive with duplicate student Name
    ...
    ...    Step1 : Login to wizard application with School admin credentials.
    ...
    ...    Step2 : Add student from management page.
    ...
    ...    Step4 : To archive the record and verify the record in user details table,the record should be hide.
    ...
    ...    Step5 : Verify the record userId modified as with time stamp in list editors page or not,The record userId should be modified with time stamp.
    ...
    ...    Step6: Add role from management page with already existing details,role should be added.
    ...
    ...    Step7 : Previously archived record to be dearchive,and verify in users table.
    ...
    ...    Step8 : Dearchived record should be saved as with time stamp, and Second time added record should be normal record.
    [Tags]    SCHOOL_ADMIN_107    MANAGEMENT_VERIFY_ARCHIVE_AND_DEARCHIVE_WITH_STUDENTS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueVal}    GetUniqueValue    qa4mme+S_ADMIN_107
    comment    To add student role from management page.
    ${lastName}    Set Variable    LN${uniqueVal}
    ${userID}    Add Role From Management    FN${uniqueVal}    ${lastName}    ${uniqueVal}    Password${uniqueVal}    Student
    ...    \    5
    ${usersList}    Create List    ${lastName}
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Comment    To archive the selected records from Archive teachers and Admins table.
    ${archiveRecordStatus}    Archive The Users    ${usersList}    Student
    Run Keyword Unless    ${archiveRecordStatus}    Fail    Uable to archive the selected record
    Comment    verifying the archived record username is modified with time stamp or not.
    Wait And Click Element    ${button.management.studentArchive}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    TEacher and admins list editor table is not visble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${lastName}
    ${teacher&AdminsListEditor}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-user_id field-user_id']    ${TimeOut}    teacher and admins records were not visible using search functionality
    ${archived RecordName}    Get Text    ${table.fromTable}/div[contains(@class,'dgrid-scroller')]/div[contains(@class,'dgrid-content')]/div[contains(@id,'row')]//table/tr/td[@class='dgrid-cell dgrid-cell-padding dgrid-column-user_id field-user_id']
    Wait And Click Element    ${button.listEditor.close}
    comment    To add student role from management page.
    ${userID}    Add Role From Management    FN${uniqueVal}    ${lastName}    ${uniqueVal}    Password${uniqueVal}    Student
    ...    \    5
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${status}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==False    Fail    The new user with ${each_Role} role not added.
    Wait And Click Element    ${button.management.toggleSplitterOpen}
    Comment    To Dearchive the selected records from Archive teachers and Admins table.
    ${archiveBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.studentArchive}    ${TimeOut}    Archive button is not visible in management window.
    Run Keyword If    ${archiveBtnStatus}    Wait And Click Element    ${button.management.studentArchive}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    ${checkBoxSelectionStatus}    Run Keyword And Return Status    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    ${checkBoxUnSelectionStatus}    Run Keyword And Return Status    Unselect Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    Run Keyword If    '${checkBoxSelectionStatus}'=='False' and '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to select and unselect check box selection.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    ${ProceedAlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}    ${TimeOut}    Alert is not diplayed when Archive the record.
    Run Keyword If    ${ProceedAlertStatus}    Wait And Click Element    ${button.management.Proceed}
    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}    completed alert message is not displayed when proceed to archive the record
    Wait And Click Element    ${button.alert.mysAlertBtn}
    Comment    Verifying the dearchived recordusername is in modified as with time stamp or not.
    ${archiveBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.studentArchive}    Archive button is not visible in management window.
    Enter Text In Text Field    ${text.management.search}    ${archived RecordName}
    ${actualRecordStatus}    Verify Values In Table    ${table.users}    Last Name    ${lastName}
    Run Keyword If    '${actualRecordStatus}'!='True'    Fail    Archived record is not saved with time stamp
    [Teardown]    Stop Application

ATC 520-SA-Validate removed student is available in class details table
    [Documentation]    ATC-520-SA Validate removed student is available in class details table
    ...
    ...    Step1 : Login to wizard application with School admin credentials.
    ...
    ...    Step2 : Add Class to a student from management page.
    ...
    ...    Step3 : Select the class from class details table and verify the student is visible or not in details table.Student full name should be visible.
    ...
    ...    Step4 : Click on edit student details and uncheck the student from student list editor table click on save button.Verify the student is visible or not in details table.Student full name should not be visible.
    ...
    ...    Step5 : Select the student from all users table,click on edit button and click on classes and groups edit button from user details table.
    ...
    ...    Step6 : Classes and groups list editor table should be displayed.Select the class name and click on save button.
    ...
    ...    Step7 : Verify the class name is visible or not in classes and groups window,should be visible.
    ...
    ...    Step8 : Verify the student full name is visible or not in class details table or not,Student full name should be visible.
    [Tags]    SCHOOL_ADMIN_108    MANAGEMENT_VERIFY_DELETED_STUDENT_IN_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${ClassName}=    Set Variable    class${uniqueVal}
    ${classesList}    Create List    ${ClassName}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentFN}    Get From Dictionary    ${studentDetails}    First Name
    ${studentLN}    Get From Dictionary    ${studentDetails}    Last Name
    ${studentFullName}    Set Variable    ${studentFN}${SPACE}${studentLN}
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3394:Updated to wait and inteeract with the first row which get displayed in classes table, to deal with loading.
    Wait And Click Element    //div[@id='groupGrid']//div[@role='row'][1]//table//tr//td[1]
    ${classNameStatus}    Add A Class Or Group    ${ClassName}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Failed to add a class
    comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classesList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    Select the record in classes table and verify the student is visible in details table or not.
    ${classNameStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Class name is not visible in class details table.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student is not added to the class
    Edit The Class Or Group Details
    Wait And Click Element    ${button.students.edit}
    Comment    Edit the students in classesdetails table and uncheck the student.
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Students list editor table is not visble.
    ${checkBoxSelectionStatus}    Run Keyword And Return Status    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    ${checkBoxUnSelectionStatus}    Run Keyword And Return Status    Unselect Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    Run Keyword If    '${checkBoxSelectionStatus}'=='False' and '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to select and unselect check box selection.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element is Invisible    ${button.classDetails.save}
    Comment    Student is visible or not when uncheck the student and click on save button.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student name is still visible after unchecked the student from class.
    Comment    Select the student record from user details table.
    ${studentRecordSelectionStatus}    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Comment    Wait And Click Element    ${button.userDetails.edit}
    Comment    Verify the to select the class from classesAndGroups window,Class name is visible in classAndGroups window or not.
    Wait And Click Element    ${button.classesAndGroups.edit}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Students list editor table is not visble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${ClassName}
    ${checkBoxUnSelectionStatus}    CommonLibrary.Select The Row    ${table.fromTable}    1
    Run Keyword If    '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to check the record in list editor table.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait Until Element is Invisible    ${button.editStudentsAndTitles.save}
    Comment    Verifying the student name is visible in classes details window or not when select the class from classesAndGroups window.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student name is not visible in classes details window when select the class from classesAndGroups window.
    [Teardown]    Stop Application

ATC 528-SA-Verify the student join a class functionality when delete the class
    [Documentation]    ATC 528-SA-Verify the student join a class functionality when delete the class
    ...
    ...    Step1 : Login to wizard application with school admin credentials
    ...
    ...    Step2 : Add a class and student from management page.
    ...
    ...    Step3 : Get a class code and delete the class from management page.
    ...
    ...    Step4 : Sigin out from the district admin and open browser to login page.
    ...
    ...    Step5 : Click on new user link and select the student role.
    ...
    ...    Step6 : Enter the class code,verify alert message is displayed or not.Alert message should be displayed.
    ...
    ...    Step7 : Relogin as a student and click on student stitting dropdown image.
    ...
    ...    Step8 : Select join a class and enter the class code click on join button.
    ...
    ...    Step9 : Verify "No class joined" alert message is displayed or not.
    [Tags]    SCHOOL_ADMIN_110    VERIFY_STUDENT_JOIN_A_CLASS_FOR_DELETED_CLASS    CRITICAL
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentUid}    Get From Dictionary    ${studentDetails}    User Name
    ${studentPWD}    Get From Dictionary    ${studentDetails}    Password
    Comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Failed to add a class
    ${classSelectionStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Comment    ${classCode}    Get Text    ${common.classDetails.classCode}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    delete class from management page.
    ${deleteClassFromTheTableStatus}    Run Keyword And Return Status    Delete The Record From table    ${table.classesAndGroups}    Name    ${className}
    ${classStatusAfterDelete}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${classStatusAfterDelete}    Fail    Failed to delete a class
    Close Browser
    Comment    Open browser to login page and enter the class code for the student
    OpenBrowserToLoginPage    ${WizardURL}
    Wait And Click Element    ${button.login.newUser}
    Select Role in Create Account    Student
    ${classCodeWindowStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.signUp.classCode}    ${TimeOut}    Class code window is not visible
    Comment    Alert is displayed or not Enter the deleted code.
    Enter Text In Text Field    ${text.signUp.classCode}    ${classCode}
    Wait And Click Element    ${button.signUp.next}
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${Delay}    Alert message is not displayed when enter invalid classcode.
    Wait And Click Element    ${button.Alert.OK}
    Comment    Wait And Click Element    ${button.signUp.close}
    Wait Until Element is Invisible    ${button.Alert.OK}    5s
    :FOR    ${iCount}    IN RANGE    1    6
    \    Mouse Over    ${button.signUp.close}
    \    Wait And Click Element    ${button.signUp.close}
    \    sleep    5s
    \    ${closeBtnStatus}    Verify Element Visible    ${button.signUp.close}
    \    Exit For Loop If    ${closeBtnStatus}==False
    Comment    Enters the login details & click on 'SignIn' button.
    ${loginAsStudent}=    Run Keyword And Return Status    Enter Login Details    ${studentUid}    ${studentPWD}
    Run Keyword If    '${loginAsStudent}'!='True'    Fail    student login is failed
    Wait And Click Element    ${image.studentHomePage.sittingDeskArrow}
    Wait And Click Element    ${label.studentHomePage.joinAClass}
    ${classCodeToJoinAclassStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.studentHomePage.joinClassCode}    ${TimeOut}    Class code window is not visible when click on join a class.
    Comment    When enter the Invalid class code in join a class alert is displayed or not
    Enter Text In Text Field    ${text.studentHomePage.joinClassCode}    ${classCode}
    Wait And Click Element    ${button.studentHomePage.joinClassDlgNext}
    Comment    Wait Until Element is Invisible    ${button.studentHomePage.joinClassDlgNext}
    ${alertStatus}    Wait Until Element Is Visible    ${button.importTemplate.DialogMessage}    ${Delay}    Aler message is not displayed when enter invalid class code.
    [Teardown]    Stop Application

ATC 532-SA-Verify the school admin record (which is loggedIN)in archiveTeachers&Admins table.
    [Documentation]    ATC532-SA-Verify the school admin record (which is loggedIN)in archiveTeachers&Admins table.
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Click on Archive teachers&Admins button.
    ...
    ...    Step3 : Verify the school admin record (which is loggedIn) in archive teachers&Admins table.
    ...
    ...    Step4 : The school admin record should not be visible in Archive teachers & admins table.
    [Tags]    SCHOOL_ADMIN_111    MANAGEMENT_VERIFY_LOG_IN_USER_IN_ARCHIVE_TEACHERS_AND_ADMINS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.teacherAndAdminsArchive}    ${TimeOut}    Archive teachers and admins button is not visisble in management page.
    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    Comment    Verifying the school admin record(Which is loggedIn) in archive teachers&admins table.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${preSchoolAdminID}
    ${recordStatus}    Verify Values In Table    ${table.fromTable}    User Id    ${preSchoolAdminID}
    Run Keyword If    ${recordStatus}    Fail    School Admin record is still visible in archive teachers and admins table.
    [Teardown]    Stop Application

ATC 533-SA-Verify the archived class is visible or not in standard mastery reportfilters page at all class Level
    [Documentation]    ATC 533-SA-Verify the archived class is visible or not in reportfilters page
    ...
    ...    Step1 :Login to wizard application with teacher details.
    ...
    ...    Step2 : Add a class,student and titles from management page.
    ...
    ...    Step3 : Assign assignment to the class.
    ...
    ...    Step4 : Signout and relogin as a school admin and Archive the class from management page.
    ...
    ...    Step5 : Verify the class name in standard mastery report ,Class name should not be visible.
    [Tags]    SCHOOL_ADMIN_112    REPORTS_VERIFY_ARCHIVED_CLASS_IN_REPORT_FILTERS    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    ${uniqueVal}    GetUniqueValue    SDT
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${signUpTitleMenu}    Set Variable    @{preSignUpTitleMenus}[0]
    ${activityName}    Set Variable    @{preActivityNames}[0]
    ${titlesList}    Create List    ${signUpTitleMenu}
    ${userStatusList}    Create List    true
    Comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Navigate BackTo Home Page    Management
    Comment    Add assignment to a student
    Add Assignment To A Student    ${className}    ${signUpTitleMenu}    ${EMPTY}    ${activityName}
    Close Browser
    Comment    Login to wizard application with school admin credentials and archive the class from management page.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${archiveClassStatus}    Archive Classes And Groups    ${classList}
    ${ArchivedClassStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${ArchivedClassStatus}    Fail    Class name is still visible in classes table after archive the class
    Navigate BackTo Home Page    Management
    Comment    Get report for all classes in standard mastery report.
    Get Report for A Class or Group    ${preReportType1}    Classes    All Classes    ${signUpTitleMenu}    \    ${activityName}
    ...    ${fromdate}    ${todate}
    Wait And Select Frame    ${header.report.reportFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    MYS-2353: Added the objects for the missing locator's
    Wait Until Element is Invisible    ${common.reports.EmptyProgressBar}
    Wait Until Element is Invisible    ${common.reports.ProgressBar}
    Comment    To verify the class name in standard mastery report.
    ${archivedClassInReportsPage}    Verify Element Visible    ${table.report.expandCellContent}//div[text()='${className}']
    Run Keyword If    ${archivedClassInReportsPage}    Fail    Archived class is still visible in standard amstery reports filters page.
    [Teardown]    Stop Application

ATC 535-SA-Verify the archived class is visible or not in item Analysis reportfilters page at all class Level
    [Documentation]    ATC 535-SA-Verify the archived class is visible or not in item Analysis \ reportfilters page at all class Level
    ...
    ...    Step1 :Login to wizard application with teacher details.
    ...
    ...    Step2 : Add a class,student and titles from management page.
    ...
    ...    Step3 : Assign assignment to the class.
    ...
    ...    Step4 : Signout and relogin as a school admin and Archive the class from management page.
    ...
    ...    Step5 : Verify the class name in item analysis report ,Class name should not be visible.
    [Tags]    SCHOOL_ADMIN_113    REPORTS_VERIFY_ARCHIVED_CLASS_IN_REPORT_FILTERS    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${signUpTitleMenu}    Set Variable    @{preSignUpTitleMenus}[0]
    ${activityName}    Set Variable    @{preActivityNames}[0]
    ${titlesList}    Create List    ${signUpTitleMenu}
    ${userStatusList}    Create List    true
    Comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Navigate BackTo Home Page    Management
    Comment    Add assignment to a student
    Add Assignment To A Student    ${className}    ${signUpTitleMenu}    ${EMPTY}    ${activityName}
    Close Browser
    Comment    Login to wizard application with school admin credentials and archive the class from management page.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${archiveClassStatus}    Archive Classes And Groups    ${classList}
    ${ArchivedClassStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${ArchivedClassStatus}    Fail    Class name is still visible in classes table after archive the class
    Navigate BackTo Home Page    Management
    Comment    Get report for all classes in item analysis report.
    Get Report for A Class or Group    ${preReportType2}    Classes    All Classes    ${signUpTitleMenu}    \    ${activityName}
    ...    ${fromdate}    ${todate}
    Wait And Select Frame    ${header.report.reportFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    MYS-2353: Added the objects for the missing locator's
    Wait Until Element is Invisible    ${common.reports.EmptyProgressBar}
    Wait Until Element is Invisible    ${common.reports.ProgressBar}
    Comment    To verify the class name in item analysis report.
    ${archivedClassInReportsPage}    Verify Element Visible    ${table.report.expandCellContent}//div[text()='${className}']
    Run Keyword If    ${archivedClassInReportsPage}    Fail    Archived class is still visible in standard amstery reports filters page.
    [Teardown]    Stop Application

ATC 538-SA-Verify the alert message when archive teacher have class/group
    [Documentation]    ATC 538-SA-Verify the alert message when archive teacher have class/group
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add a class and group from management page.
    ...
    ...    Step3 : Add teacher to the class and Group.
    ...
    ...    Step4 : Click on archive teacher button.Select the teacher from archive teacher& admins list editors table.
    ...
    ...    Step5 : Click on save button, click on proceed button then verify the alert message is displayed or not
    ...
    ...    Step6 : Alert message should be displayed.
    [Tags]    SCHOOL_ADMIN_114    MANAGEMENT_VERIFY_ARCHIVE_ALERT_FOR_TEACHER_WITH_CLASS_OR_GROUP    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueVal}    GetUniqueValue    SDT TEST
    Comment    ${classAndGroup}    Create List    class${uniqueVal}    group${uniqueVal}
    ${classAndGroup}    Create List    class${uniqueVal}
    ${teacherFullName}    Set Variable    ${preTeacherLastName},${SPACE}${preTeacherFirstName}
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classOrGroupType}    Create List    Class
    : FOR    ${type}    IN    @{classOrGroupType}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait And Click Element    ${button.management.showGroups}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait Until Element Is Visible    ${button.management.showClasses}
    \    Comment    Add a class from mangement page.
    \    Comment    ${classAndGroup}    Set Variable If    '${type}'=='Group'    group${uniqueVal}    class${uniqueVal}
    \    ${classAndGroup}    Set Variable    class${uniqueVal}
    \    ${classOrGroupStatus}    Add A Class Or Group    ${classAndGroup}    ${teacherFullName}    Created by QA off shore    ${type}
    \    Run Keyword If    '${classOrGroupStatus}'!='True'    Fail    Fail to add class from management page.
    \    Comment    Click on archive button and select the teacher record.
    \    Wait And Click Element    ${button.management.teacherAndAdminsArchive}
    \    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    All Teachers and Admins list editor table is not visble.
    \    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${preTeacherFirstName}
    \    ${recordSelectionStatus}    CommonLibrary.Select The Row    ${table.fromTable}    1
    \    Wait And Click Element    ${button.editStudentsAndTitles.save}
    \    ${ProceedAlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}    ${TimeOut}    Prompt is not diplayed when Archive the record.
    \    Run Keyword If    ${ProceedAlertStatus}    Wait And Click Element    ${button.management.Proceed}
    \    Comment    To verify alert is present or not when archive teacher have class/group
    \    ${AlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.Alert}    ${TimeOut}    Alert is not diplayed when archive teacher.Teacher have class/group.
    \    ${alertMsg}    Get Text    ${label.login.AlertMsg}
    \    ${AlertStatus}    String Should Contain    ${alertMsg}    One or more of the selected teachers have classes/groups and cannot be archived.
    \    Run Keyword If    '${AlertStatus}'!='True'    Fail    Alert message is mismatched with actual.
    \    Wait And Click Element    ${button.alert.mysAlertBtn}
    \    Wait Until Element is Invisible    ${button.alert.mysAlertBtn}
    [Teardown]    Stop Application

ATC 541-SA-Unable to assign archived teacher to the classes/groups
    [Documentation]    ATC 541-SA-Unable to assign archived teacher to the classes/groups
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add teacher role from management page.
    ...
    ...    Step3 : Archive the teacher record from archive teachers and admins table.
    ...
    ...    Step4 : Select the class from the class details table and edit the class details.
    ...
    ...    Step5 : Click on teacher drop down and verify the archived teacher is visible in drop down list or not.
    ...
    ...    Step6 : Archived teacher should not be visible.
    [Tags]    SCHOOL_ADMIN_115    MANAGEMENT_UNABLE_TO_ASSIGN_ARCHIVED_TEACHER    HIGH
    Run Keyword If    '${preScriptStatus}'=='False' and "${preGroupsScriptStatus}" != "True"    Fail    PreRequisite School Admin/PreRequisite Groups is not created
    ${ClassName}    Set Variable    @{preClassesList}[0]
    Comment    ${GroupName}    Set Variable    @{preGroupList}[0]
    ${uniqueVal}    GetUniqueValue    teacher
    ${teacherFullName}    Set Variable    LN${uniqueVal},${SPACE}FN${uniqueVal}
    ${lastname}    Set Variable    LN${uniqueVal}
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add teacher role from manangement page
    ${userID}    Add Role From Management    FN${uniqueVal}    ${lastname}    qa4mme+${uniqueVal}    Password${uniqueVal}    Teacher
    ...    \    5
    Wait Until Element is Invisible    ${button.newUser.oK}
    ${usersList}    Create List    ${lastname}
    Comment    To Archive the teacher from teacher&admins table.
    ${archiveTeacherstatus}    Archive The Users    ${usersList}    TeachersAdmins
    Navigate BackTo Home Page    Management
    Reload Page
    ${lodingStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    10s
    Run Keyword If    ${lodingStatus}    Wait Until Element is Invisible    ${common.homepage.Loading}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classAndGroupList}    Create List    ${ClassName}
    ${classOrGroupType}    Create List    Class
    : FOR    ${type}    IN    @{classOrGroupType}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait And Click Element    ${button.management.showGroups}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}
    \    ...    Show groups button clicking action not recieved by element.
    \    Comment    Add a class from mangement page.
    \    ${classAndGroup}    Set Variable    ${ClassName}
    \    ${classNameStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    \    Edit The Class Or Group Details
    \    ${teacherSelectionStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${dropDown.classDetails.Teacher}//td[contains(@class,'ArrowButton')]//input[contains(@class,'InputField') and contains(@class,'ArrowButtonInner')]    ${TimeOut}    Teacher Drop down is not visible in edit class details window.
    \    Wait And Click Element    ${dropDown.classDetails.Teacher}//td[contains(@class,'ArrowButton')]//input[contains(@class,'InputField') and contains(@class,'ArrowButtonInner')]
    \    Comment    Verifying the archived teacher is visible in class/group details table.
    \    ${teacherSelectionStatus}    Run Keyword And Return Status    Click On Element    ${dropDown.classDetails.Teacher}/tbody/tr/td[text()='${teacherFullName}']
    \    Run Keyword If    '${teacherSelectionStatus}'=='True'    Fail    Archived teacher is still visible in desired instructor drop down at class details / group details table
    [Teardown]    Stop Application

ATC-558-SA-Verify class rename is effect in reports
    [Documentation]    ATC-558-SA-Verify class rename is effect in reports filters
    ...
    ...    Step1 : Login to wizard application with teacher credentials.
    ...
    ...    Step2 : Add class,Student and titles from management page.
    ...
    ...    Step3 : Assign assignment to class from new assignments page.
    ...
    ...    Step4 : Navigate back to home page and modify the class name from management page.
    ...
    ...    Step5 : SignOut and relogin as school admin and navigate to reports filters page.
    ...
    ...    Step6 : To verify the modified class name is visible in standard amstery and item analysis reports or not.
    ...
    ...    Step7 : Modified class name should be visible.
    [Tags]    SCHOOL_ADMIN_116    REPORTS_VERIFY_CLASS_RENAME_EFFECTED_IN_REPORT    HIGH
    Pass Execution If    ${isDemoQURL}    For this scenario no book type assignment assigning functionality avaliable on "mysatori DB".
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${modifiedClassName}    Set Variable    class${uniqueVal}modified
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${signUpTitleMenu}    Set Variable    @{preSignUpTitleMenus}[0]
    ${activityName}    Set Variable    @{preActivityNames}[0]
    ${titlesList}    Create List    ${signUpTitleMenu}
    ${userStatusList}    Create List    true
    ${selectingSchool}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Navigate BackTo Home Page    Management
    Comment    Add assignment to a student
    Add Assignment To A Student    ${className}    ${signUpTitleMenu}    ${EMPTY}    ${activityName}    \    1
    ...    \    True
    Navigate BackTo Home Page    New Assignments
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Select the class name in class details table.
    ${classSelectionStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Edit The Class Or Group Details
    Clear Text    ${text.classDetails.name}
    Enter Text In Text Field    ${text.classDetails.name}    ${modifiedClassName}
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element is Invisible    ${button.classDetails.save}
    Close Browser
    Comment    Login to wizard app with school admin credentials
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Get report for a modified class in standard mastery and item analysis reports.
    ${reportTypes}    Create List    ${preReportType1}    ${preReportType2}
    : FOR    ${itr}    IN    @{reportTypes}
    \    ${activityName}    Set Variable If    '${itr}'=='${preReportType2}'    ${activityName}    ${EMPTY}
    \    Get Report for A Class or Group    ${itr}    Classes/Groups    ${modifiedClassName}    ${signUpTitleMenu}    ${EMPTY}
    \    ...    ${activityName}    ${fromdate}    ${todate}
    \    Wait And Select Frame    ${header.report.reportFrame}
    \    Wait Until Element is Invisible    ${common.homepage.Loading}
    \    Comment    MYS-5186: Updated test script to handel the spinning wheel icon while generating the report
    \    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    \    Comment    To verify the modified class name is visible or not in standard mastery and item analysis reports page.
    \    ${status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.reports.className}    ${TimeOut}    The modified class name is not visible in reports page.
    \    ${reClassName}    Get Text    ${label.reports.className}
    \    ${modifiesClassNameStatus}    String Should Contain    ${reClassName}    ${modifiedClassName}
    \    Run Keyword If    '${modifiesClassNameStatus}'!='True'    Fail    Modified class name is not visible in standard mastery/item analysis reports page.
    \    Navigate BackTo Home Page    Reports
    [Teardown]    Stop Application

ATC-563-SA-Verify the roles being switched to Teacher
    [Documentation]    ATC-563-SA-Verify the roles being switched to Teacher
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Add a school admin role from management page.
    ...
    ...    Step3 : Select the school admin record from user details window and click on edit button.
    ...
    ...    Step4 : To unselect the check box of school admin role and select the check box of teacher role,click on save button.
    ...
    ...    Step5 : To verify the role is changed to teacher role in user details table or not.Teacher role should be displayd.
    ...
    ...    Step6 : Signout and relogin as changed role credentials and verify the role changed or not as teacher role.
    [Tags]    SCHOOL_ADMIN_117    MANAGEMENT_VERIFY_ROLES_SWITCHED_TO_TEACHER    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueVal}    GetUniqueValue    SA
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add school admin role from management page
    ${adminUserID}    Add Role From Management    FN${uniqueVal}    LN${uniqueVal}    qa4mme+${uniqueVal}    ${preSchoolAdminPassword}    School Admin
    Wait Until Element is Invisible    ${button.newUser.oK}
    Enter Text In Text Field    ${text.management.search}    ${adminUserID}
    ${adminRecordSatus}    CommonLibrary.Select The Row    ${table.users}    1
    Wait And Click Element    ${button.userDetails.edit}
    Comment    To unselect the school admin role and select the teacher role
    CommonLibrary.Mouse Move    ${check.editUser.schoolAdminRole}
    Wait And Click Element    ${check.editUser.schoolAdminRole}
    CommonLibrary.Mouse Move    ${check.userDetails.Roles.Teacher}
    Wait And Click Element    ${check.userDetails.Roles.Teacher}
    Wait And Click Element    ${button.userDetails.save}
    Comment    To verify the teacher role is displayed or not in user details table
    ${teacherReocrdStatus}    Verify Values In Table    ${table.users}    Role    Teacher
    Run Keyword If    '${teacherReocrdStatus}'!='True'    Fail    District admin is not changed role as teacher
    Close Browser
    Comment    Login to wizard app with changed role credentials.
    ${loginStatus}    LoginToWizardApp    ${adminUserID}    ${preSchoolAdminPassword}
    Comment    Wait and click on IAgree button
    Comment    MYS-2410 : To handle 'Enhancements' and 'Terms And Conditions' dialogs.
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enchancementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.window.Enhancements}
    Comment    Run Keyword If    '${enchancementStatus}'=='True'    Click On Element    //button[@id='mysAlertBtn']//parent::div[@id='alertOkBtn']
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //button[@id='termsAndConditionsDlg-submit']    ${TimeOut}    Terms and conditions window is not displayed.
    Run Keyword If    ${bStatus}    Wait And Click Element    //button[@id='termsAndConditionsDlg-submit']
    Comment    Wait and click on IAgree button
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.SignUp.IAgreeBttn}    ${TimeOut}    "I Agree" button is not visible after clicking on "Terms And Conditions" button.
    Run Keyword If    ${bStatus}    Wait And Click Element    ${common.SignUp.IAgreeBttn}
    Wait Until Element is Invisible    ${common.SignUp.IAgreeBttn}
    Comment    To verify the role is changed as teacher or not in home page.
    ${changedRole}    Get Text    ${label.Home.HeaderlabelUser}/span[@class='lightweight']
    ${changedRoleStatus}    String Should Contain    ${changedRole}    Teacher:
    Run Keyword If    '${changedRoleStatus}'!='True'    Fail    Roles are mis matched because school admin is not able to change the role.
    [Teardown]    Stop Application

ATC-564-SA-Verify check box is avaliable to switch user to the district admin role
    [Documentation]    ATC-564-SA-Verify check box is avaliable to switch user to the district admin role
    ...
    ...    Step1 : Login to wizard application with school admin credentials.
    ...
    ...    Step2 : Select the record from user details table in management page.
    ...
    ...    Step3 : Click on edit button and verify the District admin role check box is avaliable or not.
    ...
    ...    Step4 : District admin role check box should not be avaliable in school admin.
    [Tags]    SCHOOL_ADMIN_118    MANAGEMENT_VERIFY_CHECK_BOX_WHEN_USER_ROLES_SWITCH    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${uniqueVal}    GetUniqueValue    SA
    comment    Login to Wizard application with School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Select the record from the user details table.
    ${recordSelectionStatus}    CommonLibrary.Select The Row    ${table.users}    1
    Wait And Click Element    ${button.userDetails.edit}
    CommonLibrary.Mouse Move    ${check.editUser.schoolAdminRole}
    Comment    To verify the district admin role check box is avaliable or not
    ${districtAdminCheckBoxStatus}    Verify Element Visible    ${check.editUser.districtAdminRole}
    Run Keyword If    '${districtAdminCheckBoxStatus}'=='True'    Fail    District admin role check box is visible in school admin.
    [Teardown]    Stop Application

School Admin-Verify guided help functionality for Make a class.
    [Documentation]    School Admin-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with Admin credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate the make class guided functinality by click on Go to step 1.
    [Tags]    SCHOOL_ADMIN_119    Make_a_class_Guided_Help    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${val}    Get Unique Id
    ${class_Name}    Set Variable    QaClass${val}
    Comment    login with Valid Teacher Credentials.
    ${SignUpTitleMenus}    Create List    CCS Reading Assessments Level 3
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${description}    Set Variable    created by QA
    Make a class in Guided help    ${class_Name}    ${SignUpTitleMenus}    \    ${description}
    ${classStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${class_Name}
    Run Keyword Unless    ${classStatus}    Fail    ${class_Name} was not added
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${class_Name}_01.png
    [Teardown]    Stop Application

School Admin-Verify guided help functionality forAdding Users to Classes/Groups.
    [Documentation]    School Admin-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with Admin credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate the adding users to classes/groups in guided functinality by click on Go to step 1.
    [Tags]    SCHOOL_ADMIN_120    Adding_Users_to_Classes/Groups    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite School Admin is not created
    ${val}    Get Unique Id
    ${class_Name}    Set Variable    QaClass${val}
    Comment    login with Valid Teacher Credentials.
    ${SignUpTitleMenus}    Create List    CCS Reading Assessments Level 3
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verify whether is able to add titles and students to the class or not
    Add A Class Or Group    ${class_Name}    \    Created by QA off shore
    Navigate BackTo Home Page    Management
    Adding Users to Classes/Groups in Guided help    ${class_Name}
    [Teardown]    Stop Application

School Admin-Verify guided help functionality for Manual Entry of Students
    [Documentation]    School Admin-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with Admin credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate themanual Entry of students in guided functinality by click on Go to step 1.
    [Tags]    SCHOOL_ADMIN_121    Manual_Entry_of_students    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueValue}    GetUniqueValue    STD
    ${stdFN}    Set Variable    ${uniqueValue}FN
    ${stdLN}    Set Variable    ${uniqueValue}LN
    ${stdUserId}    Set Variable    student${uniqueValue}
    ${password}    Set Variable    ${uniqueValue}PWD
    Comment    login with Valid Teacher Credentials.
    ${SignUpTitleMenus}    Create List    CCS Reading Assessments Level 3
    ${loginStatus}    LoginToWizardApp    ${preSchoolAdminID}    ${preSchoolAdminPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Manual Entry of Students    ${stdFN}    ${stdLN}    ${stdUserId}    ${password}    Student    ${EMPTY}
    ...    6
    [Teardown]    Stop Application
