*** Settings ***
Resource          ../../../Keywords/super.txt

*** Test Cases ***
ATC33-35 Verify whether graded assignments are displayed when "Show Graded" is clicked
    [Documentation]    ATC35 School Admin--Verify whether graded assignments are displayed when "Show Graded" \ is clicked
    ...
    ...    Step1 : Login as a Student.
    ...
    ...    Step2 : Verify Assignments present,if present Complete the writing of assignment.
    ...
    ...    Step3 : Signout from the application
    ...
    ...    Step4 : Login with Teacher Credentials.
    ...
    ...    Step5 : Graded the Assignments completed by Student.
    ...
    ...    Stpe6 : Verify whether graded assignments are displayed when "Show Graded" \ is clicked
    [Tags]    TEACHER_1    GRADE_ASSIGNMENTS_SHOW_GRADED    CRITICAL
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${testCaseStatus}    Set Variable    False
    Comment    MYS-2363 : Updated test data for the dependent scripts (ATC 33-35 & ATC 55)
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC35
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentName}=    Set Variable    ${StdUserFName} ${StdLName}
    Comment    Login with Valid Student credentials.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enhancementAlert}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.alert.enhancements}    ${TimeOut}
    Comment    Run Keyword If    ${enhancementAlert}    Wait And Click Element    ${label.login.alert.enhancements.Ok}
    Comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.StudentHome.AssignmentsRow}    ${Delay}
    ${NoAssignStatus}    Verify Element Visible    ${label.StudentHome.No Assignments}
    ${AssignStatus}    Evaluate    ${AssignmentsListStatus}==True and ${NoAssignStatus}==False
    Run Keyword If    ${AssignStatus}==True    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Comment    select the assignment which is teacher graded
    ${bstatus}    Run Keyword And Return Status    DoAssignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${bstatus}!=True    Fail and Capture Screenshot    ${AssignmentNameTitle} ${AssignmentNameSubTitle} is not avaibablefor the selected student.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Comment    submit the teacher graded assignment
    Check TurnIn And Pause Assignment Controls    TurnIn
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    Signout And Relogin    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    select grade assignments
    Select Graded Assignments
    comment    select the assignment to be graded
    Comment    MYS-2363 : Given a ceratain grade value for grading assignments and setting it to global variable, in order to verify given grade value in reports more accurately(in ATC-55) incliding number of questions graded for title on both 'mysatori' and 'mentoringminds' URL's contextually.
    ${grade}    Set Variable    72
    Select the Assignment to be Graded    ${ClassName}    ${AssignmentNameSubTitle}    ${grade}
    Set Global Variable    ${gradeGiven}    ${grade}
    Click Done In Grade Assignments
    Comment    Click on the "Show Graded Assignments " button.
    Navigate To Show Graded Assignments
    Comment    Selecting the Assignments which are graded.
    ${AssignmentStatus}    Run Keyword And Return Status    Select the Assignments to be reviewed    ${ClassName}    ${AssignmentNameSubTitle}
    Run Keyword If    ${AssignmentStatus}!=True    Fail    Assignments are not availabale after clicking on "Show Graded Assignments"
    ${testCaseStatus}    Set Variable    True
    Set Global Variable    ${ATC-33&35Status}    ${testCaseStatus}
    [Teardown]    Stop Application

ATC 36 Verify the Hide Graded Assignment Functionality
    [Documentation]    ATC 36 Verify the Hide Graded Assignment Functionality
    ...
    ...    Step1 : Login as a Student.
    ...
    ...    Step2 : Verify Assignments present,if present Complete the writing of assignment.
    ...
    ...    Step3 : Signout from the application
    ...
    ...    Step4 : Login with Teacher Credentials.
    ...
    ...    Step5 : Graded the Assignments completed by Student.
    ...
    ...    Stpe6 : Verify whether graded assignments are displayed when click on 'Hide Assignment" button.
    [Tags]    TEACHER_2    GRADE_ASSIGNMENTS_HIDE_GRADED    CRITICAL
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${AssignmentNameTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}    Set Variable    @{preActivityNames}[0]
    ${ClassName}    Set Variable    @{preClassesList}[0]
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    select grade assignments
    Select Graded Assignments
    Wait For Element Visible    ${button.toBeGraded.disabledGrade}    ${TimeOut}
    ${GradedAssignmentCount}=    Get Matching Xpath Count    ${label.gradeAssignments.firstRow}
    Run Keyword If    ${GradedAssignmentCount}==0    Fail and Capture Screenshot    No Graded Assignments are available to Grade
    : FOR    ${iCounter}    IN RANGE    1    ${GradedAssignmentCount}+1
    \    ${ClassAndAssignmentName}=    Get Text    ${table.gradeAssignments.Show-Hide-graded.rows}
    \    ${ClassNameStatus}    String Should Contain    ${ClassAndAssignmentName}    ${ClassName}
    \    ${AssignmentStatus}    String Should Contain    ${ClassAndAssignmentName}    ${AssignmentNameTitle}
    \    ${AssgnSubMenuStatus}    String Should Contain    ${ClassAndAssignmentName}    ${AssignmentNameSubTitle}
    \    ${assgnStatus}    Evaluate    ${AssignmentStatus}==True and ${ClassNameStatus}==True and ${AssgnSubMenuStatus}==True
    \    Run Keyword If    ${assgnStatus}    Pass Execution    The graded assignment is displayed in the "Hide graded Assignment" .If even one student writes an exam out of many and its graded.
    \    Exit For Loop If    ${assgnStatus}
    Run Keyword Unless    ${assgnStatus}    Fail    The graded assignment is not displayed in the "Hide graded Assignment" .If even one student writes an exam out of many and its graded.
    [Teardown]    Stop Application

ATC46-A Verify Collect Functionality for 100% completed assignment
    [Documentation]    ATC46 Verify Collect Functionality for 100% completed assignment
    ...
    ...    Step1 : Login as a Student.
    ...
    ...    Step2 : Verify Assignments present,if present Complete the writing of assignment.
    ...
    ...    Step3 : Signout from the application.
    ...
    ...    Step4 : Login with Teacher Credentials.
    ...
    ...    Step5 : Verify Collect Functionality for 100% completed assignment.
    [Tags]    TEACHER_3    MANAGE_ASSIGNMENTS_VERIFY_CLASS_COLLECT_ASSIGNMENT    CRITICAL
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46A
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with Valid Student credentials.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    after login check whether assignments are available
    ${AssignmentsStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    ${NavSubmitBtnStatus}    Run Keyword And Return Status    Click Nav. Controller Buttons    TurnIn
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No TurnIn button is available in assignment.
    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    ${TimeOut}
    Run Keyword If    ${DialogStatus}    Wait Until Keyword Succeeds    2m    2s    Click On Element    ${button.student.dialogContainerYes}
    Wait Until Keyword Succeeds    2m    5s    Wait Until Element Is Visible    ${text.student.assignmentReport}    ${Delay}    Student Assignment report is not displayed after completing the assignment
    ${studentName}=    Wait Until Keyword Succeeds    2m    5s    Get Text    ${text.student.assignmentReport}
    ${studentName}=    Replace String    ${studentName}    :    ${EMPTY}
    Comment    ${srCurrentSessionResultDiv}    Set Variable    ${label.studentAssignment.srCurrentSessionResults}
    ${srAllSessionsResultDiv}    Set Variable    ${label.studentAssignment.srAllSessionsResults}
    Close Assigment Report
    ${AssignmentDetails}    Create Dictionary    Subject Name    ${AssignmentNameTitle}    Activity    ${AssignmentNameSubTitle}    StudentName
    ...    ${studentName}    Class Name    ${ClassName}    School Name    ${preSchoolName}
    Set Global Variable    ${AssignmentDetails}    ${AssignmentDetails}
    Set Global Variable    ${assignmentCompletionStatus}    True
    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    ${TimeOut}
    Run Keyword If    ${NextAssignStatus}    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    Comment    MYS-3211 : Updated with wait for element visible keyword to wait for a desired given time and removed old codewhich was commented.
    ${homePageStatus}    Wait For Element Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Fail    After "TurnIn" the assignment Student Homepage was not displayed.
    Comment    Signout the student ,and relogin with Teacher credentials.
    ${loginStatus}    Signout And Relogin    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page.
    Navigate To Assignment Page
    Comment    Navigate to Manage Assignments page.
    Navigate To Manage Assignments Page
    Comment    select the \ Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    viewing Assignments for the selected Student and selected Assignement title.
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    Comment    Click on 'Show Completed Assignments' button.
    Wait And Click Element    ${button.assignment.showCompletedAssignments}
    Comment    verifying for the element ${AssignmentNameSubTitle} in 20s.if not visible it fail.
    ${CompletedStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    20s
    Run Keyword If    ${CompletedStatus}!=True    Fail    The Assignment is not in the 'Completed Assignment' page
    Comment    Getting text of Collected button.
    Comment    MYS-3211 : Updated code to wait till a specific assignment get collected and fail if not turned into Collected state.
    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/following-sibling::td[contains(text(),'Collected')]/span    ${Delay}    The Assignment Hasnt Been Collected
    [Teardown]    Stop Application

ATC18 Verify whether same registration codes are not accepted for multiple teachers
    [Documentation]    Verify whether the district admin is created or not when we try to create a new teacher with already used registration code. The text box should display in red when we tried to enter already used registration code .
    ...
    ...    Note: The test prerequisite "Test Prerequisites" should be executed properly .
    [Tags]    TEACHER_5    REGISTRATION_VERIFY_NON_REUSABLE_REGISTRATION_CODE    HIGH
    ${uniqueVal}    GetUniqueValue    ta
    ${teacherFName}    Set Variable    ${uniqueVal}FN
    ${teacherLName}    Set Variable    ${uniqueVal}LN
    ${teacherUId}    Set Variable    qa4mme+${uniqueVal}UID@gmail.com
    ${school}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Open latest URL
    OpenBrowserToLoginPage
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'Teacher'.
    Select Role in Create Account    ${teacherRole}
    Comment    enter the same registration code and wait for the error tool tip
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    Enter Text In Text Field    ${text.teacherSignUp.registrationCode}    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    ${kwStatus}    Select Zip code    ${schoolZipCode}    teacher    ${school}
    Comment    ${schoolZipCode}    Get Zipcode For School    ${EXECDIR}\\Automation_Testsuites\\TestData\\MySatori Test DBs.xlsx    ${RegCodeSheetName}    ${schoolName}
    Comment    Enter Zip Code And Select School    ${schoolZipCode}    teacher    ${schoolName}
    Comment    Click on 'Next' button at Teacher's signUp.
    Comment    Wait And Click Element    ${button.signUp.next}
    Comment    Wait And Click Element    ${common.SignUp.termsAndConditions}
    Comment    Wait And Click Element    ${common.SignUp.IAgreeBttn}
    Comment    Wait And Click Element    ${button.signUp.next}
    Wait Until Element Is Visible    ${text.teacherSignUp.firstName}    ${Delay}
    Input Text    ${text.teacherSignUp.firstName}    ${teacherFName}
    Input Text    ${text.teacherSignUp.lastName}    ${teacherLName}
    Input Text    ${text.teacherSignUp.email}    ${teacherUId}
    Input Text    ${text.teacherSignUp.emailConfirm}    ${teacherUId}
    Comment    Wait And Click Element    ${button.signUp.next}
    Wait Until Element Is Visible    ${text.teacherSignUp.password}    ${Delay}
    Input Text    ${text.teacherSignUp.password}    ${globalTeacherPassword}
    Input Text    ${text.teacherSignUp.confirmPassword}    ${globalTeacherPassword}
    Wait And Click Element    ${button.signUp.next}
    Comment    Wait And Click Element    ${button.teacherSignUp.Later}
    Comment    ${signUpClassSetupDialog}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[@class='dialogMessage']//p[contains(text(),'Would you like to set up your classes Now or Later?')]    ${TimeOut}    Class setup initiation dialog not visible in Teacher signup process.
    ${IAgreeButton}    Set Variable If    ${isDemoQURL}    //div[@id='genericTermsDlg']${common.SignUp.IAgreeBttn}    //div[@id='termsDlg']${common.SignUp.IAgreeBttn}
    Wait For Element Visible    ${IAgreeButton}    ${Delay}
    Wait And Click Element    ${IAgreeButton}
    Wait For Element Visible    ${common.teacherSignUp.Login}    ${Delay}
    Wait And Click Element    ${common.teacherSignUp.Login}
    ${loaderStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}    20s
    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${common.homepage.Loading}    ${Delay}
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    ${kwStatus}    Validate User Login Details    ${teacherFName}    ${teacherLName}
    Run Keyword If    ${kwStatus}==False    Fail    New teacher ${teacherFName} ${teacherLName} was not created.
    Sign Out From Application
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Comment    Creating a 'Teacher'.
    Select Role in Create Account    ${teacherRole}
    TypeCharactertoTextBox    ${text.teacherSignUp.registrationCode}    ${teacherRegCode}
    Wait And Click Element    ${button.signUp.next}
    ${Status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.TeacherSignup.Zip}    20s
    Run Keyword If    ${Status}    Fail    The registration code: ${teacherRegCode} is again accepted by the teacher which is unexpected
    [Teardown]    Stop Application

ATC22 Sign Out for Teacher
    [Documentation]    Verify whether the teacher is able to signout from his account properly or not.
    [Tags]    TEACHER_7    HOME_SIGN_OUT    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    Comment    Login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Verify whether the teacher is able to signout from his account properly or not.
    ${bStatus}    SignOut
    Run Keyword Unless    ${bStatus}    Fail    The user is not able to signout from home of page.
    [Teardown]    Stop Application

ATC 24 Verify submenu_ items Under Help_ menu
    [Documentation]    1)Verify whether below 5 are displayed when we click on the "Help" button as a teacher or not.
    ...
    ...    a)Quick Tips.
    ...
    ...    b)Live Chat.
    ...
    ...    c)Email Support.
    ...
    ...    d)Contact Us.
    ...
    ...    e)Browser Test and
    ...
    ...    f)Terms and Conditions.
    [Tags]    TEACHER_8    VERIFY_HELP_SUB_MENU_ITEMS    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Comment    Login with Valid Teacher Credentials.
    ${Login_Status}=    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    '${Login_Status}'=='false'    Fail    The user is not able to login with valid credentials.
    Comment    Validate the functionality of Quick Tips window.
    Validate The Sub Menus Under Help Menu    ${link.home.quickTips}    ${header.home.help.quickTipsWindowClose}
    Comment    Validate the functionality of 'Email Support'.
    Validate The Sub Menus Under Help Menu    ${link.home.emailSupport}    ${button.howCanWeHelpYou.close}
    Comment    Validate the functionality of 'Contact Us'.
    Validate The Sub Menus Under Help Menu    ${link.home.contactUs}    ${button.contactUsDlg.close}
    Comment    Validate the functionality of 'Terms and conditions'.
    Validate The Sub Menus Under Help Menu    ${link.home.termsAndConditions}    ${header.help.CloseTermsAndConditionDlg}
    Wait And Click Element    ${button.home.help}
    Comment    MYS-2382: Updated the code to click on the "Help" button until "LiveChat" button is displayed.
    : FOR    ${itr}    IN RANGE    1    6
    \    ${liveChatVisib}    Wait For Element Visible    ${link.help.LiveChat}    5s
    \    Exit For Loop If    ${liveChatVisib}
    \    Run Keyword If    ${liveChatVisib}    Exit For Loop
    \    ...    ELSE    Click Element    ${button.home.help}
    Comment    verify the LiveChat link in Help menu
    Wait And Click Element    ${link.help.LiveChat}
    Sleep    ${TimeOut}
    @{windowNames}=    Get Window Titles
    ${windowNames}=    Set Variable    @{windowNames}
    ${bStatus}=    Select the desired window    ${windowNames}    Customer Chat
    Run Keyword If    ${bStatus}==False    Fail    Captcha window is not dispalyed
    Select Window    Mentoring Minds
    Focus    ${button.home.help}
    Wait And Click Element    ${button.home.help}
    Comment    verify the Browser Test link in Help menu
    Wait And Click Element    ${button.help.browserTest}
    Sleep    15s
    @{windowNames}=    Get Window Titles
    ${windowNames}=    Set Variable    @{windowNames}
    ${bStatus}=    Select the desired window    ${windowNames}    Mentoring Minds
    Run Keyword If    ${bStatus}==False    Fail    The Window is not able to open an xxx page
    [Teardown]    Stop Application

ATC26 Edit student from Management
    [Documentation]    1) Login to wizard application as a teacher and add a student from management.
    ...
    ...    2)Select the created student and click on the edit button and edit the middlename of the student and save the \ \ \ \ \ \ changes.
    ...
    ...    3)Now verify whether the edited changes got saved for the selected user or not.
    [Tags]    TEACHER_9    MANAGEMENT_EDIT_STUDENT_DETAILS    HIGH
    Comment    Login to wizard app as an 'Instructor'.
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${val}    Get Unique Id
    ${uniqueVal}    Set Variable    Student_${val}
    ${studentdetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}_Fn    Middle Name    ${uniqueVal}_MN    Last Name    ChangeThis_Ln    Grade Level
    ...    2
    ${studentFN}    Get From Dictionary    ${studentdetails}    First Name
    ${studentLName}    Get From Dictionary    ${studentdetails}    Last Name
    ${StdUserID}    Get From Dictionary    ${studentdetails}    User Name
    ${StdPassword}    Get From Dictionary    ${studentdetails}    Password
    Comment    Login with Valid teacher Credentials.
    ${loginStatus}=    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Comment    Selecting the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Select any student role or logged in user in users table
    Run Keyword And Ignore Error    Wait Until Element Is Visible    ${button.users.add}    ${TimeOut}
    Comment    add the Student.
    AddStudent    ${studentdetails}
    Comment    Verifing that Added Student present in Users grid .
    ${rowNo}    Select The Record In Table    ${table.users}    First Name    ${studentFN}
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${StdUserID}_01.png
    Run Keyword If    "${rowNo}" == "0"    Fail    The newly added user is not shown in the 'Users' table.
    Run Keyword If    "${rowNo}" != "0"    Wait Until Element Is Visible    ${button.userDetails.edit}    ${Delay}
    ...    ELSE    Set Test Message    There is no students in the All Users table.
    Comment    Click on Edit Button and Modify the field values
    Wait And Click Element    ${button.userDetails.edit}
    ${firstName}    Get Value    ${text.userDetails.firtName}
    ${lastName}    Get Value    ${text.userDetails.lastName}
    ${stdMNdata}=    Get Value    ${text.userDetails.middleName}
    ${newLastName}    Set Variable    ${uniqueVal}_LN
    ${bStatus}=    Run Keyword If    "${lastName}"=="${EMPTY}"    Input Text    ${text.userDetails.lastName}    ${newLastName}
    ...    ELSE    Run Keyword And Return Status    Clear Text    ${text.userDetails.lastName}
    Run Keyword If    ${bStatus}== True    Input Text    ${text.userDetails.lastName}    ${newLastName}
    Comment    Click on Save button
    Wait Until Keyword Succeeds    2m    2s    Click On Element    ${button.userDetails.save}
    Wait Until Element is Invisible    ${button.userDetails.save}    ${Delay}
    ${readChangedNewLN}    Get Value    ${text.userDetails.lastName}
    Log    ${readChangedNewLN}
    Comment    Verify changes made are saved or not
    ${modifiedRecordStatus}    Search The Records    ${table.users}    ${text.management.search}    ${newLastName}
    Run Keyword If    "${modifiedRecordStatus}"=="False"    Fail    The user record with changed Last Name details not found in table.
    [Teardown]    Stop Application

ATC28 Verify newly created class is displayed in New Assignment page.
    [Documentation]    1)Login to wizard application as a teacher and navigate to management.
    ...
    ...    2)Add a class in the classes table and verify whether the newly created class is displayed in the table or not.
    [Tags]    TEACHER_11    NEW_ASSIGNMENTS_VERIFY_CLASS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${val}    Get Unique Id
    ${class_Name}    Set Variable    DataQaClass${val}
    Comment    login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add Class to the Class table.
    ${classStatus}    Add A Class Or Group    ${class_Name}    \    Created By QA
    Run Keyword If    "${classStatus}" == "False"    Fail and Capture Screenshot    The newly created class is not there in the classes table.
    Comment    unselecting the School Admin frame.
    Unselect Frame
    Comment    Signout and Relogin with valid Teacher Credentials.
    ${loginStatus}    Signout And Relogin    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Assignments page.
    Navigate To Assignment Page
    Comment    Navigate to New Assignments page.
    Navigate To New Assignments Page
    Comment    Verify whether the newly created class is displayed in the classes list or not
    ${Available_Classess_List}    Create List
    ${Available_Classess_List}=    Get Matching Xpath Values    ${label.newAssignments.classList}    ${label.newAssignments.classLabel}
    List Should Contain Value    ${Available_Classess_List}    ${class_Name}    Class '${class_Name}' created by Teacher '${preTeacherID}' not there in list of available classes for assignments.
    [Teardown]    Stop Application

ATC30 Create Class from Management and add Student&Titles to the Class
    [Documentation]    1)Login to wizard application as a teacher and add a class through management.
    ...
    ...    2)Select the class from the classes table and edit the students and titles to the class.
    ...
    ...    3)Verify whether the editted students and titles are displayed in their respective frames or not.
    [Tags]    TEACHER_13    MANAGEMENT_ADD_STUDENTS_AND_TITLES_TO_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisie Students not created
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46B
    ${studentUId}    Get From Dictionary    ${stdDetails}    User ID
    ${assignmentTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${val}    Get Unique Id
    ${class}    Set Variable    QAClass${val}
    ${userIdList}    Create List    ${studentUId}
    ${titleList}    Create List    ${assignmentTitle}
    ${userStatusList}    Create List    true
    Comment    Login with valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${bStatus}    Verify Element Visible    ${button.reportFilters.showClasses}
    Run Keyword If    '${bStatus}'=='True'    Click On Element    ${button.reportFilters.showClasses}
    Comment    Verify whether is able to add titles and students to the class or not
    Add A Class Or Group    ${class}    \    Created by QA off shore
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${class}    False
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Fail    Class '${class}' is not displayed in Class Table
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Edit Student details.
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    ${TimeOut}
    Comment    Edit Titles details.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    [Teardown]    Stop Application

ATC31 Verify “My Students” and “All Users”
    [Documentation]    1)Login to wizard application as a teacher and add a student to the users list and verify whether it is displayed in the users list or not.
    ...
    ...    2)Add a class and add the newly created student to it. Verify whether the newly added student is displayed in the "My Students" list or not.
    [Tags]    TEACHER_14    MANAGEMENT_VERIFY_MY_STUDENTS_AND_ALL_USERS    HIGH
    Comment    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${val}    Get Unique Id
    ${testData}    Set Variable    QA${val}
    ${class}    Set Variable    Class${testData}
    ${userStatusList}    Create List    true
    ${val}    Get Unique Id
    ${uniqueVal}    Set Variable    Student${val}
    ${studentdetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}_Fn    Middle Name    StdMN    Last Name    ${uniqueVal}_Ln    Grade Level
    ...    2
    ${studentLN}    Get From Dictionary    ${studentdetails}    Last Name
    ${studentUserId}    Get From Dictionary    ${studentdetails}    User Name
    ${userIdList}    Create List    ${studentUserId}
    Comment    Login with Valid Teacher Credentails.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}    ${TimeOut}
    Comment    Add student details to the users table.
    AddStudent    ${studentdetails}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.reportFilters.showClasses}    ${TimeOut}
    Run Keyword If    '${bStatus}'=='True'    Click On Element    ${button.reportFilters.showClasses}
    Comment    Add Class to the Classs table.
    Add A Class Or Group    ${class}
    Sleep    3s
    Comment    Select the created Class from the table.
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${class}
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Fail    Class '${class}' is not displayed in Class Table
    Comment    Edit Student details and Click on Save button.
    Wait And Click Element    ${button.classDetail.edit}
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element Is Visible    ${button.management.showMyStudents}    ${Delay}
    Comment    Verifying that table contains the newly added student details.
    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Run Keyword If    "${rowNo}"=="0"    Fail and Capture Screenshot    Newly added student '${studentLN}' is not displayed in Users list
    Comment    Click on show Students button.
    Wait And Click Element    ${button.management.showMyStudents}
    Comment    Verifying that table contains the newly added student details after clicking "Show My Students".
    ${rowNo}    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Run Keyword If    "${rowNo}"=="0"    Fail and Capture Screenshot    Newly added student '${studentLN}' is not displayed in students list when verified using "Show My Students" option.
    [Teardown]    Stop Application

ATC32 Verify whether teacher can modify student Passwords in Management screen.
    [Documentation]    1)Login to wizard application as a teacher and add a \ student in the users list.
    ...    2)Select his students and try \ to edit his password and save it.
    ...    3)Verify whether the password is saved for the student or not.
    [Tags]    TEACHER_15    MANAGEMENT_EDIT_STUDENT_DETAILS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46B
    ${stdUserId}    Get From Dictionary    ${stdDetails}    User ID
    ${stdFName}    Get From Dictionary    ${stdDetails}    First Name
    Comment    Login with Valid Teacher Credentails.
    ${bStatus}=    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    '${bStatus}'=='False'    Fail    The user is not able to login with the given credentials
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add student details to the users table.
    Table Column Sorting    ${table.users}    Created    descend
    Select The Record    ${table.users}    First Name    ${stdFName}
    ${val}    Get Unique Id
    ${Changedpwd}    Set Variable    changepwd${val}
    Comment    Verify whether the teacher is able edit his students passwords or not
    Edit Details Of a Student From management    Password    ${Changedpwd}
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}
    ${alertText}    Run Keyword If    ${alertStatus}    Get Text    ${label.login.AlertMsg}
    Run Keyword If    ${alertStatus}    Click On Element    ${button.Alert.OK}
    Run Keyword If    ${alertStatus}    Fail    ${alertText}
    Wait Until Element is Invisible    ${button.userDetails.save}    10
    Comment    signout And Relogin with change password and studentid.
    ${bStatus}=    Signout And Relogin    ${stdUserId}    ${Changedpwd}
    Run Keyword If    '${bStatus}'=='False'    Fail    The user is not able to login with the changed password
    [Teardown]    Stop Application

ATC37-40 Verify Assignments based on selected class,student and tiltle
    [Documentation]    Login to wizard as an teacher and navigate to manage assignments page.Verify whether the teacher can able to view the assignments based on the selection criteria of the "Class,Students,Assignments" or not?
    [Tags]    TEACHER_16    MANAGE_ASSIGNMENTS_FILTER_BY_CLASS_STUDENT_TITLES    HIGH
    Comment    Login into Wizard App with teacher Role.
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46B
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StdMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${studentName}=    Set Variable    ${StdUserFName} ${StdMName} ${StdLName}
    Comment    Login with Valid Teacher Credentails.
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Manage Assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    Verify whether the teacher can able to view the assignments based on the selection criteria of the "Class,Students,Assignments" or not
    View Assignments For the selected student of a Class    ${ClassName}    ${studentName}    ${AssignmentNameTitle}
    Comment    MYS-3329:Replacement with wait for element visible keyword.
    ${AssignmentStatus}    Wait For Element Visible    //*[contains(text(),'${AssignmentNameSubTitle}')]    ${TimeOut}    Selected assignment is not availble for the student
    Run Keyword Unless    ${AssignmentStatus}    Fail and Capture Screenshot    Selected assignment is not available for the student
    [Teardown]    Stop Application

ATC 38 - Teacher - Verify whether assignments are displayed in "My Grading" when "Students will complete in book" check box is checked
    [Documentation]    ATC 38 - Teacher - Verify whether assignments are displayed in "My Grading" when "Students will complete in book" check box is checked
    ...
    ...
    ...    1.Login with valid Teacher Credentials.
    ...    2.Verify whether assignments are displayed in "My Grading" when "Students will complete in book" check box is checked
    [Tags]    TEACHER_17    GRADE_ASSIGNMENTS_VERIFY_BOOK_ASSIGNMENTS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${activityName}=    Create List    ${AssignmentNameSubTitle}
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    Comment    Login with valid teacher details
    ${bStatus}=    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    '${bStatus}'=='False'    Fail    The user is not able to login with these ctredentials
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Add assignmnet to the class
    ${kwStatus}    Add Assignment To A Student    ${ClassName}    ${AssignmentNameTitle}    ${activitySelectMenu}    ${activityName}    ${EMPTY}
    ...    1    \    True
    Run Keyword Unless    ${kwStatus}    Fail    Teacher handout process failed.
    Comment    navigate back to home page
    Navigate BackTo Home Page    New Assignments
    Comment    select gradrd assigment pages
    Select Graded Assignments
    Comment    Verify that the assignement related to class is there in grading page
    Comment    MYS-3211 : Updated the assignment verification pattern and failing if assignment not found.
    ${assignmentStatus}    Wait For Element Visible    //td[contains(text(),'${AssignmentNameSubTitle}')]//preceding::td[text()='${AssignmentNameTitle}']//preceding::td[text()='${ClassName}']//preceding::td[text()='Book']//preceding::td//button[contains(@class,'mobileButtonGreen') and text()='Grade']    2m
    Run Keyword If    ${assignmentStatus}==False    Fail    No Book type assignment has found for the respective class and title.
    Comment    Verify Graded assignment In My Grading Page    ${ClassName}    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    [Teardown]    Stop Application

ATC39 Verify whether Assignments are displayed based on "students view"
    [Documentation]    1)Login to wizard application as an teacher and navigate to manage assignments page.
    ...    2)Verify whether the all your students are displayed when we click on "View By Students" in it.
    ...    3)When we expand the student it should display all the assignments assigned to him by the teacher should be displayed
    [Tags]    TEACHER_18    MANAGE_ASSIGNMENTS_TOGGLE_BY_STUDENTS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46B
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StdMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${studentName}    Set Variable    ${StdUserFName} ${StdMName} ${StdLName}
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page.
    Navigate To Assignment Page
    Comment    Navigate to Manage Assignments page.
    Navigate To Manage Assignments Page
    Comment    Select Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    view Asssignments for the ${ClassName},${studentName},${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${studentName}    ${AssignmentNameTitle}
    Comment    click on view by Students button.
    Wait And Click Element    ${button.manageAssignments.viewByStudents}
    Comment    Verify whether the assignments are displayed according to the students view when we click on "students View" or not.
    Wait And Click Element    //table[@class='dgrid-row-table']//td[contains(text(),'${studentName}')]//div[contains(@class,'expand')]
    Comment    MYS-3394:Replaced with wait for element visible keyword to deal with element staleness.
    ${AssignmentStatus}=    Wait For Element Visible    //*[contains(text(),'${AssignmentNameSubTitle}')]    10s
    Run Keyword If    ${AssignmentStatus}!=True    Fail and Capture Screenshot    Selected assignment is not availble for the student
    [Teardown]    Stop Application

ATC41 Verify Show and Hide Completed Assignments functionality
    [Documentation]    1)Login to wizard application as a teacher and navigate to manage assignments.
    ...    2)Click on the "ShowCompletedAssignments" verify whether already completed assignments are displayed or not.
    ...    3)Click on the "HideCompletedAssignments" and verify whether the completed assignments are hided or not.
    [Tags]    TEACHER_19    MANAGE_ASSIGNMENTS_TOGGLE_BY_SHOW_AND_HIDE_COMPLETED_ASSIGNMENTS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC41
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentName}=    Set Variable    ${StdUserFName} ${StdMName} ${StdLName}
    Comment    Login with Valid Teacher Credentails.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting    False
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Comment    submit the teacher graded assignment
    ${homePageStatus}    Check TurnIn And Pause Assignment Controls    TurnIn
    Comment    ${NavSubmitBtnStatus}=    Click Nav. Controller Buttons    TurnIn
    Comment    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Submit button is available in assignment after clicking on Continue
    Comment    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    10s
    Comment    Run Keyword If    ${DialogStatus}    Click Element    ${button.studentAssignments.confirmTurnInPromptBttn}
    Comment    Comment    Close the Assignment Report
    Comment    Close Assigment Report
    Comment    Comment    Signout and Relogin with Valid Teacher Credentails.
    Comment    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[text()='Your next assignment is:']    ${TimeOut}
    Comment    Run Keyword If    ${NextAssignStatus}    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    Comment    ${homePageStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Fail    After "TurnIn" the assignment Student Homepage was not displayed.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page.
    Navigate To Assignment Page
    Comment    Navigate to Manage assignments page.
    Navigate To Manage Assignments Page
    Comment    Select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}    ${TimeOut}
    Comment    View Assignments for the ${ClassName}    ${studentName}    ${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${studentName}    ${AssignmentNameTitle}
    Comment    Verify whether the completed assignments are displayed or not.
    Navigate To Show Completed Assignment
    Comment    Wait And Click Element    ${button.assignment.showCompletedAssignments}    ${TimeOut}
    ${CompletedStatus}    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    ${TimeOut}
    Run Keyword If    ${CompletedStatus}!=True    Fail    The Assignment is not in the 'Completed Assignment' page
    Comment    Verify whether the completed asignments are hided or not
    Navigate To Hide Completed Assignments
    Comment    Wait And Click Element    ${button.assignements.hideGradedAssignments}
    Comment    MYS-3211 : Updated code \ to wait for element visible to \ handle loading and exceptions.
    ${CompletedStatus}    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    20s
    Run Keyword If    ${CompletedStatus}==True    Set Test Message    The Assignment is in the 'Hide Completed Assignment' page
    [Teardown]    Stop Application

ATC42 Verify whether assignment is collected using “Collect” functionality.
    [Documentation]    1)Login to the wizard application as a student and start an assignment and pause it in middle .
    ...    2)Login as a teacher who assigned the assignment and Verify whether the teacher can able to collect the assignment or not.
    ...    3)Verify whether collected assignment is displayed under "Show Completed Assignments" or not.
    [Tags]    TEACHER_20    MANAGE_ASSIGNMENTS_VERIFY_COLLECT_FUNCTIONALITY    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC42
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with Valid Teacher Credentails.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting    False
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Comment    submit the teacher graded assignment
    Check TurnIn And Pause Assignment Controls    Pause
    Comment    Signout And Relogin with valid Teacher Credentials.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and Manage Assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Selecting the manage Assignments frmae.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    viewing the Assignments of the ${ClassName}    ${Studentname}    ${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    Comment    Collecting the Assignments of the ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}.
    Collect Student Assignment From Assignments    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}
    Comment    Verify whether the collected assignments are displayed only when we click on the "showCompletedAssignment" or not.
    Navigate To Show Completed Assignment
    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${button.assignment.showCompletedAssignments}
    ${CompletedStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    20s
    Run Keyword If    ${CompletedStatus}!=True    Fail    The Assignment is not in the 'Completed Assignment' page
    ${Status}=    Wait Until Keyword Succeeds    1min    5sec    Get Text    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/following-sibling::td[2]/span
    Run Keyword If    '${Status}'!='Collected'    Fail    The Assignment Hasnt Been Collected
    [Teardown]    Stop Application

ATC 43 Compare the percent of progress in Manage Assignments page and student home page
    [Documentation]    1)Login to wizard application as a student, start an assignment, pause it in middle, read the progress status and signout of it.
    ...    2)Then login as an teacher and navigate to management and select the assignment for the student and verify the progress displayed in it.
    ...    3)The progress displayed in the student home page and the teacher management p[age should be same.
    [Tags]    TEACHER_21    MANAGE_ASSIGNMENTS_COMPARE_THE_PROGRESS_PERCENT    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC43
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPWD}    Set Variable    ${preTeacherPassword}
    ${student_UID}    Get From Dictionary    ${stdDetails}    User ID
    ${student_PWD}    Get From Dictionary    ${stdDetails}    Password
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StdMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${studentName}    Set Variable    ${StdUserFName} ${StdMName} ${StdLName}
    ${class_Name}    Set Variable    @{preClassesList}[0]
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${loginStatus}    LoginToWizardApp    ${student_UID}    ${student_PWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting    False
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Check TurnIn And Pause Assignment Controls    Pause
    ${progress}    Get Assignment Progress    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Comment    Login with Valid teacher credentials.
    ${loginStatus}    Signout And Relogin    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.    LoginError.png
    Comment    Navigate to Assignments page and Manage Assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Select the Manage Assignements frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Wait And Click Element    ${table.manageAssignments.allGroupList}//div[contains(text(),'${class_Name}')]
    ${student_FNLN}    Set Variable    ${studentName}
    ${student_FN and LN}    Set Variable    ${student_FNLN.strip()}
    Wait And Click Element    ${table.manageAssignments.allStudentsList}//div[contains(text(),'${student_FN and LN}')]
    Wait And Click Element    ${table.manageAssignments.allTitlesList}//div[contains(text(),'${AssignmentNameTitle}')]
    Wait And Click Element    ${button.manageAssignments.viewByStudents}
    : FOR    ${jCount}    IN RANGE    1    5
    \    Wait And Click Element    //div[@class='dgrid-expando-icon ui-icon ui-icon-triangle-1-e']/parent::td[contains(text(),'${studentName}')]
    \    ${expandstatus}    Wait For Element Visible    //div[@class='dgrid-tree-container']//div[@class='dgrid-expando-icon ui-icon ui-icon-triangle-1-se']
    \    Exit For Loop If    ${expandstatus}
    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    ${TimeOut}
    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/parent::tr/td[contains(@class,'field-progress')]//div[contains(@data-dojo-attach-point,'labelNode')]    10s
    ${percentage}=    Set Variable    0%
    : FOR    ${iCount}    IN RANGE    1    50
    \    ${Assignment_percent_viewByteacher}    Get Text    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/parent::tr/td[contains(@class,'field-progress')]//div[contains(@data-dojo-attach-point,'labelNode')]
    \    ${bStatus}    String Should Contain    ${Assignment_percent_viewByteacher}    %
    \    Run Keyword If    '${Assignment_percent_viewByteacher}'!='${percentage}' and '${bStatus}'=='True'    Exit For Loop
    ${Assignment_Match_Stat}    Run Keyword And Return Status    Wait Until Element Is Visible    //*[contains(text(),'${AssignmentNameSubTitle}')]    30s
    Run Keyword If    ${Assignment_Match_Stat}!=True    Fail and Capture Screenshot    Selected assignment is not available for the student
    Comment    Verify whether the progress displayed in the student home page and teacher management page for an assignment is same or not.
    Run Keyword If    "${Assignment_percent_viewByteacher}"!="${progress}"    Fail and Capture Screenshot    Assignment progress from student and teacher's view are different    ProgressError.png
    [Teardown]    Stop Application

ATC44 Verify Collect Functionality for 0% completed assignment
    [Documentation]    1)Login to wizard application as a student, start an assignment and submit it without answering any question
    ...    2)Again relogin as a teacher and select the same assignment in manage assignments.
    ...    3)Verify whether the submitted assignment is collected automatically or not by clicking on the"Show Completed Assignments" and it should be in collected state.
    [Tags]    TEACHER_22    MANAGE_ASSIGNMENTS_VERIFY_COLLECT_FUNCTIONALITY    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC44
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with Valid Student details.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    MYS-4828: Assignment submit functionality is changed. \ .
    ${NavSubmitBtnStatus}    Click turnin Controller Button    TurnIn
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Submit button is available in assignment after clicking on Continue
    Wait For Element Visible    ${button.studentAssignments.trunin.submit}    ${Delay}
    Wait And Click Element    ${button.studentAssignments.trunin.submit}
    Comment    ${NavSubmitBtnStatus}    Click Nav. Controller Buttons    TurnIn
    Comment    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    10s
    Comment    Run Keyword If    ${DialogStatus}    Wait Until Keyword Succeeds    2m    2s    Click On Element
    ...    ${button.student.dialogContainerYes}
    Wait Until Element Is Visible    //div[@id='sessionReportDlg']/div[@id='srAllSessionsResults']    2m
    Close Assigment Report
    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    ${Delay}
    Run Keyword If    ${NextAssignStatus}    Wait Until Keyword Succeeds    1m    2s    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    ${homePageStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Set Test Message    After "TurnIn" the assignment Student Homepage was not displayed.
    ${loginStatus}    Signout And Relogin    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and Manage assignments oage.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    View the Assignments of the ${ClassName}    ${Studentname}    ${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    Navigate To Show Completed Assignment
    Comment    Verify whether the "0%" completed assignment is is collected automatically or not.
    Comment    MYS-3371 : Replaced with wait for element visible keyword.
    ${CompletedStatus}    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    20s
    Run Keyword If    ${CompletedStatus}!=True    Fail    The Assignment is not in the 'Completed Assignment' page
    Comment    Verify whether the "0%" completed assignment is in collected state or not.
    Comment    MYS-3211 : Updated code to wait for the respective assignment to be visible and get assignment collected status.
    Wait For Element Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/parent::tr/td[contains(@class,'field-type')]    15s
    ${type}    Wait Until Keyword Succeeds    2m    5s    Get Text    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]/parent::tr/td[contains(@class,'field-type')]
    Run Keyword If    '${type}'!='Collected'    Fail    The Assignment Hasnt Been Collected
    [Teardown]    Stop Application

ATC47 Verify the Remove Functionality for 0% completed assignment
    [Documentation]    1)Login to wizard application as a student, start an assignment and submit it without answering any question
    ...    2)Again relogin as a teacher and select the same assignment in manage assignments.
    ...    3)Verify whether the submitted assignment is collected automatically or not
    [Tags]    TEACHER_23    MANAGE_ASSIGNMENTS_VERIFY_REMOVE_FUNCTIONALITY    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC47
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with valid Student credentails.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    MYS-4828: Assignment submit functionality is changed. \ \
    ${NavSubmitBtnStatus}    Click turnin Controller Button    TurnIn
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Submit button is available in assignment after clicking on Continue
    Wait For Element Visible    ${button.studentAssignments.trunin.submit}    ${Delay}
    Wait And Click Element    ${button.studentAssignments.trunin.submit}
    Comment    ${NavSubmitBtnStatus}    Click Nav. Controller Buttons    TurnIn
    Comment    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    10s
    Comment    Run Keyword If    ${DialogStatus}    Wait Until Keyword Succeeds    2m    2s    Click On Element
    ...    ${button.student.dialogContainerYes}
    Comment    Wait Until Keyword Succeeds    2m    5s    Wait Until Element Is Visible    ${text.student.assignmentReport}    ${Delay}
    ...    Student Assignment report is not displayed after completing the assignment
    Wait Until Element Is Visible    //div[@id='sessionReportDlg']/div[@id='srAllSessionsResults']    2m
    Close Assigment Report
    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    ${Delay}
    Run Keyword If    ${NextAssignStatus}    Wait Until Keyword Succeeds    1m    2s    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    ${homePageStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Set Test Message    After "TurnIn" the assignment Student Homepage was not displayed.
    Comment    Close the Assignment report and Signout and Relogin with valid teacher credentails.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and Manage assignments oage.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    View the Assignments of the ${ClassName},${Studentname}    ${AssignmentNameTitle}..
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    ${bstatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.assignment.showCompletedAssignments}    10s
    Run Keyword If    ${bstatus}!=True    Fail    Button 'Show Completed Assignments ' is not visible
    Wait And Click Element    ${button.assignment.showCompletedAssignments}
    ${bstatus}    Run Keyword And Return Status    Remove Student Assignment From Assignment Page    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}
    Run Keyword If    ${bstatus}!=True    Fail and Capture Screenshot    Assignment is not available to remove
    ${RemoveStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    5s
    Run Keyword If    ${RemoveStatus}==True    Fail and Capture Screenshot    The Assignment is still avaiable in the assignments page
    [Teardown]    Stop Application

ATC48 Verify the Remove Functionality for a Pause assignment
    [Documentation]    ATC48 Verify the Remove Functionality for a Pause assignment
    ...
    ...    Precondition:Assignement should be added to student.
    ...
    ...    1.Login with valid Teacher Credentials.
    ...    2.Navigate to Manage Assignments page.
    ...    3.Verify the Remove Functionality for a Pause assignment
    [Tags]    TEACHER_24    MANAGE_ASSIGNMENTS_VERIFY_REMOVE_FUNCTIONALITY    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC48
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with valid Student credentaisl.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    ${NavSubmitBtnStatus}    Click Nav. Controller Buttons    Pause
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Pause button is available in assignment.
    Comment    Signout and Relogin with Teacher Credentials.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and Manage assignments oage.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    View the Assignments of the ${ClassName},${Studentname},${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    Comment    Remove ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname} of assignments from table.
    Remove Student Assignment From Assignment Page    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}
    ${RemoveStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    5s
    Run Keyword If    ${RemoveStatus}==True    Fail and Capture Screenshot    The Assignment is still avaiable in the assignments page
    [Teardown]    Stop Application

ATC49 Verify the Remove Functionality for 100% completed assignment
    [Documentation]    ATC49 Verify the Remove Functionality for 100% completed assignment
    ...
    ...    Precondition:Assignement should be 100% completed done by student.
    ...
    ...    1.Login with valid Teacher Credentials.
    ...    2.Navigate to Manage Assignments page.
    ...    3.Verify the Remove Functionality for 100% completed assignment
    [Tags]    TEACHER_25    MANAGE_ASSIGNMENTS_VERIFY_REMOVE_FUNCTIONALITY    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC49
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    login with valid Student credentials.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting    True
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    ${NavSubmitBtnStatus}=    Click Nav. Controller Buttons    TurnIn
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Submit button is available in assignment after clicking on Continue
    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}    10s
    Run Keyword If    ${DialogStatus}    Wait Until Keyword Succeeds    2m    2s    Click On Element    ${button.student.dialogContainerYes}
    Wait Until Keyword Succeeds    2m    5s    Wait Until Element Is Visible    ${text.student.assignmentReport}    ${Delay}    Student Assignment report is not displayed after completing the assignment
    Close Assigment Report
    ${NextAssignStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.studentAssignment.proceedNextAssignmentAlert}    ${Delay}
    Run Keyword If    ${NextAssignStatus}    Wait Until Keyword Succeeds    1m    2s    Wait And Click Element    ${button.studentAssignments.nextAssmtDlgNo}
    ${homePageStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.studentAssignments.assignments}    ${Delay}
    Run Keyword Unless    ${homePageStatus}    Set Test Message    After "TurnIn" the assignment Student Homepage was not displayed.
    Comment    Signout and Relogin with Teacher Credentails.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and Manage assignments oage.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    select the Manage Assignments frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    View the Assignments of the ${ClassName},${Studentname},${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${Studentname}    ${AssignmentNameTitle}
    Comment    waiting for the Show Completed Assignments button and Click on the button.
    ${bstatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.assignment.showCompletedAssignments}    10s
    Run Keyword If    ${bstatus}!=True    Fail    Button 'Show Completed Assignments ' is not visible
    Click Element    ${button.assignment.showCompletedAssignments}
    Comment    Remove the Assignment of ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}.
    ${bstatus}    Run Keyword And Return Status    Remove Student Assignment From Assignment Page    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}
    Run Keyword If    ${bstatus}!=True    Fail and Capture Screenshot    Assignment is not available to remove
    ${RemoveStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //span[contains(text(),'${AssignmentNameTitle}')]/parent::td[contains(text(),'${AssignmentNameSubTitle}')]    5s
    Run Keyword If    ${RemoveStatus}==True    Fail and Capture Screenshot    The Assignment is still avaiable in the assignments page
    [Teardown]    Stop Application

ATC50 Verify the Type and Date Assigned column status for Assignment which are Assigned using "Assign Book"
    [Documentation]    Login to the wizard application as an teacher and book an assignment to a student of the class.
    ...    Verify whether the type of that assignment for that student is displayed as "book" and also verify whether "Date Assigned" collumn value is displayed as the assignment assigned date or not.
    [Tags]    TEACHER_26    MANAGE_ASSIGNMENTS_VERIFY_ASSIGNED_DATE_TIME    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    ${assignmentNameTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${assignmentNameSubTitle}    Set Variable    @{preActivityNames}[0]
    ${activityName}    Create List    ${assignmentNameSubTitle}
    ${className}    Set Variable    @{preClassesList}[0]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC05
    ${studentUserId}    Get From Dictionary    ${stdDetails}    User ID
    ${stdFN}    Get From Dictionary    ${stdDetails}    First Name
    ${stdLN}    Get From Dictionary    ${stdDetails}    Last Name
    ${stdMN}    Get From Dictionary    ${stdDetails}    Middle Name
    ${studentName}    Set Variable    ${stdFN} ${stdMN} ${stdLN}
    Comment    Login to wizard application as an teacher
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page and New Assignments page.
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Book an assignment to a student
    ${kwStatus}    teacher.Add Assignment To A Student    ${className}    ${assignmentNameTitle}    ${EMPTY}    ${activityName}    ${studentUserId}
    ...    1    class    True
    Comment    Navigate to back to Home page from New Assignments page.
    Navigate BackTo Home Page    New Assignments
    Reload Page
    Comment    Navigate to Assignments page and Manage assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Select the manage Assignments frmae.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    Selecte the assigned assignment in the bmanage assignments page
    View Assignments For the selected student of a Class    ${className}    ${studentName}    ${assignmentNameTitle}
    Comment    MYS-3329: Replaced with wait for element visible keyword to resolve stale refferencing.
    ${AssignmentStatus}=    Wait For Element Visible    //td[contains(text(),'${assignmentNameSubTitle}')]//following-sibling::td//span[contains(text(),'Collected')]//parent::td//following-sibling::td[text()='Book']    ${TimeOut}    Selected assignment is not availble for the student
    Run Keyword If    ${AssignmentStatus}==False    Fail and Capture Screenshot    Selected assignment is not availble for the student
    Table Column Sorting    ${table.assignment.grid}    Date Assigned
    Comment    MYS-3329: Replaced with wait for element visible keyword to resolve stale refferencing.
    Comment    MYS-3394:Updated locator to directly verify the type of assignment for respective title and subtitle.
    ${AssignmentStatus}=    Wait For Element Visible    //td[contains(text(),'${assignmentNameSubTitle}')]//following-sibling::td//span[contains(text(),'Collected')]//parent::td//following-sibling::td[text()='Book']    ${TimeOut}
    Run Keyword If    ${AssignmentStatus}!=True    Fail and Capture Screenshot    Selected assignment is not availble for the student
    Comment    Verify whether the assignment assigned date matches withj the current date or not
    Comment    MYS-3394:Updated locator relatively using the type of assignment for respective title and subtitle.
    ${assignedDate}    Get Text    //*[contains(text(),'${assignmentNameSubTitle}')]//following-sibling::td//span[text()='Collected']//parent::td//following-sibling::td[contains(@class,'created_timestamp')]
    ${time}    Get Time
    ${date}    Split String    ${time}    ${SPACE}
    ${date}    Set Variable    @{date}[0]
    Run Keyword And Continue On Failure    Run Keyword If    '${assignedDate}'!='${date}'    Fail    The assignment assigned date '${date}' mismatches with the displayed date '${assignedDate}' in the manage assignments page.
    Comment    verify whether the type of the assignment is "Book" or not.
    Comment    MYS-3394:Updated locator relatively read the type of assignment for respective title and subtitle.
    ${type}    Get Text    //*[contains(text(),'${assignmentNameSubTitle}')]//following-sibling::td//span[text()='Collected']//parent::td//following-sibling::td[contains(@class,'created_timestamp')]//following-sibling::td[contains(@class,'field-isPaper')]
    Run Keyword If    '${type}'!='Book'    Fail    The type of the assigned assignment is not displayed as 'Book' in the manage assignments.
    [Teardown]    Stop Application

ATC 53 Verify whether Preview of the assignment is displayed for the assigned Assignments
    [Documentation]    Login to wizard application as an teacher and add any "CCS Motivation Math Level" \ to any of his classes.
    ...    Assign any assignment from the newly added "CCS Motivation Math Level" to a student.
    ...    Verify the following scenerios:
    ...    1) "Preview" is displayed when we click on "Preview" button.
    ...    2) "StudentPreview" is hided when we click on "HideStudentPreview" button.
    ...    3) "StudentPreview" is again displayed when we click on the "ShowStudentPreview" button.
    ...    4) "TeacherPreview" is hided when we click on "HideTeacherPreview" button.
    ...    5) "TeacherPreview" is again displayed back when we click on "ShowTeacherPreview" button.
    ...    6) "Preview" is closed when we click on the "close Preview" button. \
    [Tags]    TEACHER_27    NEW_ASSIGNMENTS_VERIFY_PREVIEW    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${assignmentNameTitle}    Set Variable    CCS Motivation Reading Level 03
    ${activityDrpDownValue}    Set Variable    Unit 1 - Interviewing Great-Grandma Jones
    ${assignmentNameSubTitle}    Set Variable    Page 13 - Knowledge
    ${activityName}=    Create List    ${assignmentNameSubTitle}
    ${className}    Set Variable    @{preClassesList}[0]
    ${studentUserId}    Set Variable    @{preStudentIds}[0]
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    Comment    Login to wizard app as an teacher
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Select any class and add "Mativation Math" asignment to it.
    ${rowNumber}    Select The Record    ${table.classesAndGroups}    Name    ${className}    true
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Fail    Class '${className}' is not displayed in Class Table
    Wait And Click Element    ${button.classDetail.edit}
    Wait Until Element Is Visible    ${button.classDetails.save}    15
    ${titleList}    Create List    ${assignmentNameTitle}
    ${userStatusList}    Create List    True
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element is Invisible    ${button.classDetails.save}    15
    Navigate BackTo Home Page    Management
    Comment    Assign any motivation math assignment to a student .
    ${kwStatus}    Add Assignment To A Student    ${className}    ${assignmentNameTitle}    ${activityDrpDownValue}    ${activityName}    ${studentUserId}
    Comment    Verify whether preview is displayed when we click on preview or not.
    Run Keyword If    ${kwStatus}    Wait And Click Element    ${button.newAssignments.preview}
    ...    ELSE    Fail    The assignment is not assigned properly
    Wait Until Element Is Visible    ${label.schoolAdmin.activitySetPreviewBoth}    30s    The Preview window is not displayed
    Wait And Click Element    ${button.newAssignments.hideStudentPreview}
    Wait And Click Element    ${button.newAssignments.showStudentPreview}
    Wait And Click Element    ${button.newAssignments.hideTeacherPreview}
    Wait And Click Element    ${button.newAssignments.showTeacherPreview}
    Wait And Click Element    ${button.newAssignments.closePreview}
    [Teardown]    Stop Application

ATC 55 - Teacher - Verify Graded assignment of student is reflected in Standards Mastery Report
    [Documentation]    ATC 55 - Teacher - Verify Graded assignment of student is reflected in Standards Mastery Report
    ...
    ...    1.Login as Student
    ...
    ...    2.Do the Assignments.
    ...
    ...    3.Login with Teacher
    ...
    ...    4.Generate the Standard Mastery Report with Details of assignment done by the student.
    [Tags]    TEACHER_28    REPORTS_VERIFY_GRADING_REFLECT_IN_REPORT    HIGH
    Run Keyword Unless    ${ATC-33&35Status}    Fail    PreRequisite ATC33&35 is not executed
    ${grade}    Set Variable    ${gradeGiven}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC35
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentLN_FN}    Set Variable    ${StudentLName}, ${StudentFName}
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Generating the report with detials:Standards Mastery Report
    Comment    MYS-2363 : Updated code to take 'from' & 'to' dates with one day difference, in order to resolve the problem facing with day change in between report submission and report generation.
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    Get Report for A Class or Group    ${preReportType1}    Classes    ${ClassName}    ${AssignmentNameTitle}    \    ${EMPTY}
    ...    ${fromdate}    ${todate}
    Comment    selecting the reports frame.
    Wait And Select Frame    ${header.report.reportFrame}
    ${rEMStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.reports.reportEmptyMessage}    10s
    Run Keyword If    ${rEMStatus}    Fail    The report is not available graded Assignment
    Wait Until Element Is Visible    ${label.reports.ReportTypeHeader}    ${TimeOut}
    Comment    expand the student icon and get the list of commplted assignments adn verify graded assignment is present
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    MYS-3211 : Updated code to wait for percentage icon to visible and perform action on it and verify it switched to sort by person and performs same action agin if not done in first attempt.
    ${sort_by_percentage}    Wait For Element Visible    ${image.sortBy.percentageIcon}
    Run Keyword If    ${sort_by_percentage}    Wait And Click Element    ${image.sortBy.percentageIcon}
    ${percentage_sort_status}    Run Keyword If    ${sort_by_percentage}    Wait For Element Visible    ${image.sortBy.personIcon}    10s
    Run Keyword If    '${percentage_sort_status}'!='True'    Wait And Click Element    ${image.sortBy.percentageIcon}
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    Comment    Wait And Click Element    ${label.reportsFilters.TreeExpandoCell}
    : FOR    ${itr}    IN RANGE    0    35
    \    Maximize Browser Window
    \    Sleep    5s
    \    CommonLibrary.Mouse Move    //div[contains(text(),'${StudentLName}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    Focus    //div[contains(text(),'${StudentLName}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    Comment    MYS-2363 : Updated code to verify click on respective expando icon of student to verify graded assignment.
    \    ${bStatus}    Run Keyword And Return Status    Click On Element    //div[contains(text(),'${StudentLName}')]/parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']
    \    Comment    MYS-3211:Updated locator to verify the student details in expanded state or not if not looping again.
    \    ${expadnoStatusAfterClick}    Wait For Element Visible    //div[contains(text(),'${StudentLName}')]//parent::div//parent::div//div[@class='gridxTreeExpandoIcon ']//parent::div//parent::td[@aria-expanded='true']    5s
    \    Exit For Loop If    ${bStatus}==True and ${expadnoStatusAfterClick}==True
    \    Send    {DOWN}
    Send    {DOWN}
    Send    {DOWN}
    Comment    MYS-3211:Updated locator to verify the assignment details in expanded student details. \
    ${Status}    Wait For Element Visible    //div[contains(@class,'gridxTreeExpandoContent gridxCellContent')]//div[contains(text(),'${AssignmentNameSubTitle}')]    20s
    Run Keyword If    ${Status}!=True    Fail    The Graded assignment:${AssignmentNameSubTitle} is not available in standards Mastery Report
    Comment    MYS-2363 : Reading the global variable set for 'grade' in ATC33-35 and    verifying certain grade value in reports more accurately incliding number of questions graded for the title on both 'mysatori' and 'mentoringminds' URL's contextually.
    ${noOfQnsGradedCount}    Get Matching Xpath Count    //div[contains(@class,'rtDepth2') and contains(text(),'${grade}')]
    ${noOfQnsGradedStatus}    Run Keyword If    ${isDemoQURL}    Evaluate    '${noOfQnsGradedCount}'=='3'    ${EMPTY}
    ...    ELSE    Evaluate    '${noOfQnsGradedCount}'=='29'
    Run Keyword Unless    ${noOfQnsGradedStatus}    Fail    The graded assignment Qns Count is mismatching.
    [Teardown]    Stop Application

ATC 57 Verify the Standard Mastery Report after pausing the exam
    [Documentation]    ATC 57 Verify the Standard Mastery Report after pausing the exam
    ...
    ...    1.Login with valid Teacher credentials.
    ...    2.Generate report with Paused assignment detials.
    ...    3.Verify the Standard Mastery Report after pausing the exam
    [Tags]    TEACHER_29    REPORTS_VERIFY_PAUSED_ASSIGNMENT_REFLECT_IN_REPORT    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisie Students not created
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${AssignmentNameTitle}=    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${AssignmentNameSubTitle}=    Get From Dictionary    ${AssignmentDetails}    Activity
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Get Report for A Class or Group    ${preReportType1}    Classes    ${className}    ${AssignmentNameTitle}
    Comment    Selecting the frame Report.
    Wait And Select Frame    ${header.report.reportFrame}
    ${status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.reports.Subject}    ${Delay}
    [Teardown]    Stop Application

ATC 58 Verify the Item Analysis Report after pausing the exam
    [Documentation]    ATC 58 Verify the Item Analysis Report after pausing the exam
    ...
    ...    1.Login with valid Teacher credentials.
    ...    2.Generate report with Paused assignment detials.
    ...    3.Verify the Item Analysis Report after pausing the exam
    [Tags]    TEACHER_30    REPORTS_VERIFY_PAUSED_ASSIGNMENT_REFLECT_IN_REPORT    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisie Students not created
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC12
    ${studentUID}    Get From Dictionary    ${stdDetails}    User ID
    ${studentPWD}    Get From Dictionary    ${stdDetails}    Password
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${className}    Set Variable    @{preClassesList}[0]
    Comment    Login with valid student credentails.
    ${loginStatus}    LoginToWizardApp    ${studentUID}    ${studentPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The student is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The student is able to login successfully.
    comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    ${NavSubmitBtnStatus}=    Click Nav. Controller Buttons    Pause
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail    No Pause button is available in assignment.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Signout and Relogin with Teacher Credentials.
    ${teacherLoginStatus}    Signout And Relogin    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Get Report for A Class or Group    ${preReportType2}    Classes    ${className}    ${AssignmentNameTitle}    \    ${AssignmentNameSubTitle}
    Comment    Selecting the frame Report.
    Wait And Select Frame    ${header.report.reportFrame}
    ${status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.reports.Subject}    ${Delay}
    [Teardown]    Stop Application

ATC59 Manage Assignments page is displayed in 10 sec
    [Documentation]    Login as a teacher and Verify whether the manage assignments page is displayed in 10s or not.
    [Tags]    TEACHER_31    VERIFY_MANAGE_ASSIGNMENTS_NAVIGATION_PERFORMANCE_TEST    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Comment    Login with valid Teacher credentaisl.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignments page,Manage assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Select the manage assignments page.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    Verify whether the manage assignments page is displayed in 10s or not.
    Wait Until Element Is Visible    ${table.manageAssignments.grid}    10s    Manage Assignments page is not displayed with in 10 sec
    [Teardown]    Stop Application

ATC60 Assignments List are displayed in 10 sec
    [Documentation]    ATC60 Assignments List are displayed in 10 sec
    ...
    ...    1.Login with valid Teacher credentials.
    ...    2.Navigate to Manage Assignments page.
    ...    3.Assignments List are displayed in 10 sec
    [Tags]    TEACHER_32    MANAGE_ASSIGNMENTS_VERIFY_ASSIGNMENTS_DISPLAYED    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC44
    ${className}    Set Variable    @{preClassesList}[0]
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[0]
    ${StudentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StudentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StudentMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${Studentname}=    Set Variable    ${StudentFName} ${StudentMName} ${StudentLName}
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page and Manage Assignments page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Wait And Select Frame    ${header.assignments.assignmentManage}
    View Assignments For the selected student of a Class    ${className}    ${Studentname}    ${AssignmentNameTitle}
    Wait And Click Element    ${table.assignment.row}
    Wait And Click Element    ${table.manageAssignments.allGroupList}/div[@class="dgrid-scroller"]/div[contains(@class,"dgrid-content")]//div[contains(@id,"-row") and text()='${className}']
    Wait Until Element is Invisible    ${common.Loading.PleaseWait...}
    ${count}    Get Matching Xpath Count    //span[contains(text(),'${AssignmentNameTitle}')]
    Run Keyword If    "${count}"=="0"    Fail    Assignments List are not displayed within 10 Sec
    [Teardown]    Stop Application

ATC 61 Verify Standard Mastery Report is displayed in 10 Sec
    [Documentation]    ATC 61 Verify Standard Mastery Report is displayed in 10 Sec
    ...
    ...    1.Login with Teacher Credentials.
    ...    2.Navigate to reports page.
    ...    3. Verify Standard Mastery Report is displayed in 10 Sec
    [Tags]    TEACHER_33    REPORTS_VERIFY_REPORT_PERFORMANCE_TEST    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${reportType}    Set Variable    ${preReportType1}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${AssignmentNameSubTitle}=    Get From Dictionary    ${AssignmentDetails}    Activity
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Comment    MYs-3394 : Updated script to generate report for the assignment in the given range of submission date, to overcome the \ day change issue.
    ${from_date}    Get Future Or Past Date From Now    -1
    ${to_date}    Get Future Or Past Date From Now
    Get Report for A Class or Group    ${preReportType1}    Classes    ${className}    ${SubjectName}    \    ${AssignmentNameSubTitle}
    ...    ${from_date}    ${to_date}
    Comment    Selecting the report frame.
    Wait And Select Frame    ${header.report.reportFrame}
    Comment    MYS-3950:Replaced with wait for element visible keyword and increased wait time.
    ${status}    Wait For Element Visible    ${label.reports.Subject}    ${Max Delay}
    Run Keyword If    '${status}'!='True'    Fail    The Standard Mastery Report is not displayed with in 10 Sec
    [Teardown]    Stop Application

ATC 62 Verify Item Analysis Report is displayed in 10 Sec
    [Documentation]    ATC 62 Verify Item Analysis Report is displayed in 10 Sec
    ...
    ...    1.Login with Teacher Credentials.
    ...    2.Navigate to Reports.
    ...    3.Verify Item Analysis Report is displayed in 10 Sec
    [Tags]    TEACHER_34    REPORTS_VERIFY_REPORT_PERFORMANCE_TEST    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${ActivityName}    Get From Dictionary    ${AssignmentDetails}    Activity
    Comment    login with Teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Comment    MYs-3394 : Updated script to generate report for the assignment in the given range of submission date, to overcome the \ day change issue.
    ${from_date}    Get Future Or Past Date From Now    -1
    ${to_date}    Get Future Or Past Date From Now
    Get Report for A Class or Group    ${preReportType2}    Classes    ${className}    ${SubjectName}    \    ${ActivityName}
    ...    ${from_date}    ${to_date}
    Comment    Selects the Reports frame.
    Wait And Select Frame    ${header.report.reportFrame}
    Comment    MYs-3394:Replaced with wait for element visible keyword and increased wait time.
    ${status}    Wait For Element Visible    ${label.reports.Subject}    ${Delay}
    Run Keyword If    '${status}'!='True'    Fail    The Item Analysis Report is not displayed with in 10s
    [Teardown]    Stop Application

ATC63 Verify Teacher Management Screen is displayed within 10 Sec
    [Documentation]    ATC63 Verify Teacher Management Screen is displayed within 10 Sec
    ...
    ...    1.Login with Teacher Credentials.
    ...    2. Verify Teacher Management Screen is displayed within 10 Sec when click on 'Management' button.
    [Tags]    TEACHER_35    VERIFY_MANAGEMENT_NAVIGATION_PERFORMANCE_TEST    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    select the School Admin page.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${status}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.teacher.classToolBar}    10s
    ${text}    Get Text    ${label.teacher.classToolBar}
    Run Keyword If    '${status}'!='True'    Fail and Capture Screenshot    Mangement Page is not loaded within 10 secs.
    [Teardown]    Stop Application

ATC64 Verify a Class is added in 10 Sec
    [Documentation]    ATC64 Verify a Class is added in 10 Sec
    ...
    ...    1.Login with Tacher credentails.
    ...    2.Click on management button.
    ...    3.Verify a Class is added in 10 Sec
    [Tags]    TEACHER_36    MANAGEMENT_VERIFY_CLASS_CREATED_PERFORMANCE_TEST    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword Unless    ${loginStatus}    Fail    ${alertText}
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    select the School Admin page.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Click on 'Add button of Groups.
    Wait And Click Element    ${button.newGroup.Add}
    ${className}    Get Unique Value    DataClass
    ${description}    Set Variable    Added by QA
    Enter Text In Text Field    ${text.newClass.Name}    ${className}
    Enter Text In Text Field    ${text.newGroup.Description}    ${description}
    Wait And Click Element    ${button.newGroup.Ok}
    Comment    Verify whether a newly added class is displayed in 10s or not
    Comment    MYS-3329:Replaced with wait for element visible keyword.
    Wait For Element Visible    ${table.classesAndGroups}//td[text()='${className}']    10s    Newly added Class '${className}' is not displayed in Classes list within 10s.
    [Teardown]    Stop Application

ATC65 Verify a Student is added in 10 Sec
    [Documentation]    Verify whether a student is addded is displayed with in 10secs or not.
    [Tags]    TEACHER_37    MANAGEMENT_VERIFY_STUDENT_CREATED    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${userId}    Set Variable    ${preTeacherID}
    ${password}    Set Variable    ${preTeacherPassword}
    ${random}=    Get Random Number In Given Range    1    10000
    ${studentLN}    Set Variable    ALN${random}
    ${studentFN}    Set Variable    AFN${random}
    ${mandatoryList}    Create List    ${studentFN}    ${studentLN}    UserID${random}    Password${random}
    Comment    Login with Teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${userId}    ${password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${val}    Get Unique Id
    ${uniqueVal}    Set Variable    Student${val}
    ${studentdetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Middle Name    ${uniqueVal}MN    Last Name    LN    Grade Level
    ...    2
    ${studentLName}    Get From Dictionary    ${studentdetails}    Last Name
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    select the School Admin page.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add Student to the users table.
    AddStudent    ${studentdetails}
    Comment    verify Student added or not in 10s.
    Table Column Sorting    ${table.users}    Created    descend
    ${studentStatus}    Verify Values In Table    ${table.users}    Last Name    ${studentLName}
    Capture Page Screenshot And Log    ${OUTPUTDIR}
    Run Keyword If    ${studentStatus}==False    Fail    The newly added user is not shown in the 'Users' table.
    [Teardown]    Stop Application

ATC 66 MYS - 868(feature)- Verify whether Grade page is displayed in 10 seconds \ and validate email support from "To be graded" page.
    [Documentation]    ATC66 Verify whether Grade page is displayed in 10 seconds when "Grade" button is clicked for any title for single user
    ...    Precondition:Student should complete the assignment.
    ...
    ...    1.Login with Teacher Credentails.
    ...    2.click on 'Grading Assignment' button
    ...    3.Verify whether Grade page is displayed in 10 seconds when "Grade" button is clicked for any title for single user
    ...
    ...    (feature) MYS - 868 - Verifying Email Support from To Be Graded Page.
    ...
    ...    4.Clicking "Help" menu and Choose "Email Support"
    ...    5.Entering data into all fields
    ...    6.Clicking Send button and wait for success alert.
    [Tags]    TEACHER_38    VERIFY_GRADE_PAGE_AND_HELP_EMAIL_SUPPORT    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC66
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentName}=    Set Variable    ${StdUserFName} ${StdLName}
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    after login check whether assignments are available
    ${AssignmentsListStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsListStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    comment    select the assignment which is teacher graded
    ${assignmentRowIndex}    Student Do The Assignment    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword If    ${assignmentRowIndex}==0    Fail    The specifed assigment was not found in the assignemnts list.
    ${kwStatus}    Run Keyword And Ignore Error    Assignment Writting
    Run Keyword If    '@{kwStatus}[0]'=='FAIL'    Set Test Message    The Assigment Writting functionality is not done completely because the Next button is clickable but it is not working correctlly during runtime.
    Comment    submit the teacher graded assignment
    ${NavSubmitBtnStatus}=    Click Nav. Controller Buttons    TurnIn
    Run Keyword If    ${NavSubmitBtnStatus}!=True    Fail and Capture Screenshot    No Submit button is available in assignment after clicking on Continue
    ${DialogStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.student.unanwserQuestionsCountAsWrong}
    Run Keyword If    ${DialogStatus}    Click On Element    ${button.studentAssignments.confirmTurnInPromptBttn}
    Close Assigment Report
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    Signout And Relogin    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    select grade assignments and verify that grade is getting opened in 10secs
    Select Graded Assignments
    Wait And Click Element    ${button.gradeAssignments.gradeButton}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.Assignment.done}    10s
    Run Keyword If    "${bStatus}"=="False"    Run Keyword And Continue On Failure    Fail and Capture Screenshot    Grading Page is not displayed in 10s after clicking on "Grade" button.
    Run Keyword If    "${bStatus}"=="False"    Wait Until Element Is Visible    ${button.Assignment.done}    ${TimeOut}
    Comment    Validate the functionality of 'Email Support'.
    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Comment    Verify the Quick Tips in the help menu
    ${bStatus}    Verify Element Visible    ${link.home.emailSupport}
    Run Keyword Unless    ${bStatus}    Click On Element    ${button.home.help}
    Comment    selecting Email support from Help menu
    ${subMenuSelectionStatus}    Run Keyword And Return Status    Wait And Click Element    ${link.home.emailSupport}
    Run Keyword Unless    ${subMenuSelectionStatus}    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Run Keyword Unless    ${subMenuSelectionStatus}    Wait And Click Element    ${link.home.emailSupport}
    Comment    Entering input text into Email support fields
    Input Text    ${text.support.itsAbout}    STD TEST
    Input Text    ${text.support.description}    STD TEST
    Input Text    ${text.support.emailId}    qa4mme+tchr3@gmail.com
    Wait And Click Element    ${button.emailSupport.send}
    Comment    Waiting to successfull alert message
    ${msgSuccessfullStatus}    Get Text    ${label.support.howCanWeHelpYou.msgStatus}
    String Should Contain    ${msgSuccessfullStatus}    Your message has been sent successfully.
    Comment    Wait Until Element Is Visible    //div[@id="mojoStatus" and text()="Your message has been sent successfully."]    ${TimeOut}    "Your message has been sent successfully." Message not displayed when \ sent an email.
    [Teardown]    Stop Application

ATC67 Verify whether Grade page is displayed in 10 seconds when "Review" button is clicked for any title for single user
    [Documentation]    ATC67 Verify whether Grade page is displayed in 10 seconds when "Review" button is clicked for any title for single user
    ...
    ...    Precondition:student should complete the Assignment.
    ...
    ...    1.Login with Teacher Credentails.
    ...    2.Click on Grading Assignments button.
    ...    3.Verify whether Grade page is displayed in 10 seconds when "Review" button is clicked for any title for single user
    [Tags]    TEACHER_39    GRADE_ASSIGNMENTS_VERIFY_REVIEW_FUNCTION    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}=    Set Variable    @{preClassesList}[1]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC35
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentName}    Set Variable    ${StdUserFName} ${StdLName}
    Comment    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    select grade assignments
    Select Graded Assignments
    Comment    select the assignment to be graded
    Comment    click on 'Show Graded Assignments ' button.
    Navigate To Show Graded Assignments
    Select the Assignments to be reviewed    ${ClassName}    ${AssignmentNameSubTitle}
    ${ReviewStatus}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.gradeAssignments.firstRow}    10s
    Run Keyword If    ${ReviewStatus}!=True    Fail    Grade page is not visible in 10secs after clicking on "Riview" Button
    [Teardown]    Stop Application

ATC134 Verify created groups in enable state or disable state new assignments
    [Documentation]    Verify whether the "Show Groups" button is displayed in the new assignments page or not when we add a group to the teacher. It should be displayed when teacher has a group other wise it should be invisible.
    [Tags]    TEACHER_41    NEW_ASSIGNMENTS_VERIFY_GROUP_SELECTABLE    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPWD}    Set Variable    ${preTeacherPassword}
    ${preTeacher LName And FName}    Set Variable    ${preTeacherLastName},${SPACE}${preTeacherFirstName}
    ${assignmentTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${val}    Get Unique Id
    ${uniqueVal}    Set Variable    Student${val}
    ${studentdetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Middle Name    ${uniqueVal}MN    Last Name    LN    Grade Level
    ...    2
    ${StudentUId}    Get From Dictionary    ${studentdetails}    User Name
    ${studentLN}    Get From Dictionary    ${studentdetails}    Last Name
    ${val}    Get Unique Id
    ${testData}    Set Variable    QA${val}
    ${class}    Set Variable    Class${testData}
    Comment    ${Group}    Set Variable    Group${testData}
    ${userIdList}    Create List    ${StudentUId}
    ${userStatusList}    Create List    true
    Comment    Login with Valid Teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus}!=True    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Comment    Select the School admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add Stuent to the users table.
    AddStudent    ${studentdetails}
    Comment    Add Class to the table.
    Add A Class Or Group    ${class}    ${preTeacher LName And FName}    Created By QA Team    Class
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${class}
    Run Keyword If    ${rowNumber}==0    Fail    Class '${class}' is not displayed in Class Table
    Comment    Edit Class details.
    Edit The Class Or Group Details
    ${titleList}    Create List    ${assignmentTitle}
    Comment    Edit student details.
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Wait Until Element Is Visible    ${table.common.'groupUsersList}    ${TimeOut}
    Comment    Edit Title details.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Comment    click on save button.
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element is Invisible    ${button.classDetails.save}
    Wait Until Element Is Visible    ${button.management.showMyStudents}    ${Delay}
    Comment    Verifing that Created Student display in \ Table.
    Table Column Sorting    ${table.users}    Created    descend
    ${studentStatus}    Verify Values In Table    ${table.users}    Last Name    ${studentLN}
    Run Keyword Unless    ${studentStatus}    Fail    Newly added student '${studentLN}' is not displayed in Users list
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Create the Group.
    Comment    Add A Class Or Group    ${Group}    ${preTeacher LName And FName}    Created By QA Team    Group
    Comment    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${Group}
    Comment    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Fail and Capture Screenshot    Class '${class}' is not displayed in Class Table    AddClassError.png
    Comment    edit the Class Details.
    Comment    Edit The Class Or Group Details
    Comment    Comment    Edit student details.
    Comment    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Comment    Wait Until Element Is Visible    ${table.common.'groupUsersList}    ${TimeOut}
    Comment    Comment    Edit title details.
    Comment    Edit Students Or Titles    ${titleList}    ${userStatusList}    Name
    Comment    Comment    Click on Save button.
    Comment    Wait And Click Element    ${button.classDetails.save}
    Comment    Wait Until Element is Invisible    ${button.classDetails.save}
    Unselect Frame
    Comment    Navigate to Home page from Management.
    Navigate BackTo Home Page    Management
    Comment    Navigate to Assignments page,New Assignments page.
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    click on Show Groups button and Select the created Group.
    Comment    Wait And Click Element    ${button.newAssignments.ShowGroups}
    Select Assignment Class    ${class}
    [Teardown]    Stop Application

ATC 136 Teacher verify assigned assignments of a class in manage assignments
    [Documentation]    Teacher- Verify assigned assignments in manage assignments.
    ...
    ...    Step1 : Login as a Teacher.
    ...
    ...    Step2 : Create new assignments.
    ...
    ...    Step3 : Verify weather the assigned assignments are displayed in manage assignments or not.
    [Tags]    TEACHER_43    MANAGE_ASSIGNMENTS_VERIFY_ASSIGNMENTS_OF_CLASS    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisie Students not created
    ${teacherId}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC43
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${StdFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${StdMName}    Get From Dictionary    ${stdDetails}    Middle Name
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${studentName}=    Set Variable    ${StdFName} ${StdMName} ${StdLName}
    ${AssignmentNameTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    Comment    Login with valid Teacher Credentials.
    ${bStatus}    LoginToWizardApp    ${teacherId}    ${teacherPwd}
    Run Keyword Unless    ${bStatus}    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Assignment page and Manage Assignment page.
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Select the manage Assignements frame.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    view the assignments of ${ClassName}    ${studentName}    ${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${ClassName}    ${studentName}    ${AssignmentNameTitle}
    ${AssignmentStatus}=    Verify Element Visible    //*[contains(text(),'${AssignmentNameTitle}')]
    Run Keyword If    ${AssignmentStatus}!=True    Fail    Selected assignment is not availble for the student
    [Teardown]    Stop Application

ATC 216 - Verify whether titles are added or removed for classes in management
    [Documentation]    Verifies whether the titles slected in management for a class are assignd to the class or not.
    ...
    ...    1.Login to the application as Teacher.
    ...
    ...    2.Navigate to management.
    ...
    ...    3.Add a new class.
    ...
    ...    4.Edit the titles of the class and verify the selective and non selective titles count in from table are matching with to table or not.
    ...
    ...    5.Select the all titles check box and save.
    ...
    ...    6.Edit the titles again and verify the count match and \ pass on matching count else fail the scenario.
    [Tags]    TEACHER_48    MANAGEMENT_VERIFY_TITLES_ADDED_OR_REMOVED    HIGH
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPWD}    Set Variable    ${preTeacherPassword}
    ${val}    Get Unique Id
    ${className}    Set Variable    class${val}
    Comment    Login with valid Teacher details
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus} != True    Fail and Capture Screenshot    Failed login with valid Teacher details    TeacherLoginError.png
    Comment    Navigating to management page
    Navigate To Management Page
    Comment    selecting the frame
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Adding new class
    ${addClassStatus}    Add A Class Or Group    ${className}
    Run Keyword If    "${addClassStatus}" !="True"    Fail    The class is not created.
    ${rowNum}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    "${rowNum}" == "0"    Fail    Class not selected/Class not there in list of classes
    Wait And Click Element    ${button.classDetail.edit}    ${Delay}
    Wait Until Element Is Visible    ${button.classDetails.save}    ${Delay}
    Wait And Click Element    ${button.classDetails.editTitles}    ${Delay}
    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    ${allTitleSelectStatus}    Get Element Attribute    ${check.editStudentsorTitles.selectAllCheckbox}@aria-checked
    Comment    counting no of selected and non-selected titles in left table.
    ${checkedTitlesCount}    Get Matching Xpath Count    ${check.editStudentsOrTitles.checkedBoxes}
    ${uncheckedTitlesCount}    Get Matching Xpath Count    ${check.editStudentsOrTitles.uncheckedBoxes}
    Comment    Counting No of selected titles in right table
    ${selectiveTitleAppearCount}    Get Matching Xpath Count    ${check.editStudentsOrTitles.selectedCheckedBoxesCount}
    Run Keyword If    ${selectiveTitleAppearCount}!= ${checkedTitlesCount}    Fail    The selected no of titles are not there in the right table.
    Comment    selecting the whole titles check box
    ${headerCheckboxSelectStatus}    Run Keyword If    "${allTitleSelectStatus}"!= "true" or "${allTitleSelectStatus}" == "mixed"    Run Keyword And Return Status    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    Run Keyword Unless    ${headerCheckboxSelectStatus}    Click On Element    ${check.editStudentsorTitles.selectAllCheckbox}
    Sleep    5s
    ${allTitleSelectStatus}    Get Element Attribute    ${check.editStudentsorTitles.selectAllCheckbox}@aria-checked
    Run Keyword If    "${allTitleSelectStatus}" != "true" or "${allTitleSelectStatus}" == "mixed"    Fail    Whole titles check box selection not done
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Comment    Wait Until Element is Invisible    ${button.editStudentsAndTitles.save}    ${Delay}
    Wait Until Element Is Visible    //div[text()='Please Confirm']    5s
    Wait And Click Element    //button[@id='mysPromptBtnYes']
    Wait And Click Element    ${button.classDetails.editTitles}    ${Delay}
    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Comment    getting the to table titles count after selecting all titles checkbox in from table
    ${selectiveTitleAppearCount}    Get Matching Xpath Count    ${check.editStudentsOrTitles.selectedCheckedBoxesCount}
    Comment    Comparing the from table all titles count with to table titles count failing if not match.
    ${count}    Evaluate    ${checkedTitlesCount} + ${uncheckedTitlesCount}
    Run Keyword If    '${selectiveTitleAppearCount}'!='${count}'    Fail    After selecting all titles in from table count not matching with to table count
    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    Unselect Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    ${allTitleSelectStatus}    Get Element Attribute    ${check.editStudentsorTitles.selectAllCheckbox}@aria-checked
    Run Keyword If    "${allTitleSelectStatus}" == "true" or "${allTitleSelectStatus}" == "mixed"    fail    Select All check box isnot unchecked.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait Until Element Is Visible    ${button.classDetails.save}    ${Delay}
    [Teardown]    Stop Application

ATC 226 - Error message is dispalyed when enter invalid grade.
    [Documentation]    Verifies whether improper grading values are accepting while grading the teacher gradable assignments
    ...
    ...    1.Login as Teacher
    ...
    ...    2.Click on "Grading Asignments".
    ...
    ...    3.Select the assignments which is teacher gradable.
    ...
    ...    4.Enter the improper values into text field for the corresponding question and click on "Done" for the question only.
    ...
    ...    5.Verify whether "invalid entry." Alert is displayed or not for improper values. \
    [Tags]    TEACHER_49    GRADE_ASSIGNMENTS_VERIFY_INVALID_GRADE_PERCENT_ACCEPTED    HIGH
    Comment    please place the Test case before grading any assignment this will not \ \ \ submit the assignment grading,just verifies the improper grade input alerts.
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[1]
    ${AssignmentNameSubTitle}=    Set Variable    @{preActivityNames}[1]
    ${ClassName}    Set Variable    @{preClassesList}[1]
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    comment    select grade assignments
    Select Graded Assignments
    comment    select the assignment to be graded
    ${AssignmentName}    Set Variable    ${AssignmentNameSubTitle}
    @{Grades}    Create List    75.7944    666    text    123.9745
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[contains(@id,'gradeAssmtsListGrid-row')]    ${TimeOut}
    Run Keyword If    ${bStatus}==False    Set Test Message    grade Assignment List Grid-row not dislayed.
    ${GradedAssignmentCount}=    Get Matching Xpath Count    //div[contains(@id,'gradeAssmtsListGrid-row')]
    Run Keyword If    ${GradedAssignmentCount}==0    Fail and Capture Screenshot    No Graded Assignments are available to Grade
    : FOR    ${iCounter}    IN RANGE    1    ${GradedAssignmentCount}+1
    \    Comment    Replaced keyword wait until element is visible with wait for element visible
    \    Wait For Element Visible    //div[contains(@id,'gradeAssmtsListGrid-row')]/parent::div/div[${iCounter}+1]    ${Delay}
    \    ${ClassAndAssignmentName}=    Get Text    //div[contains(@id,'gradeAssmtsListGrid-row')]/parent::div/div[${iCounter}+1]
    \    ${ClassNameStatus}=    String Should Contain    ${ClassAndAssignmentName}    ${ClassName}
    \    ${AssignmentStatus}=    String Should Contain    ${ClassAndAssignmentName}    ${AssignmentName}
    \    Run Keyword If    ${AssignmentStatus}==True and ${ClassNameStatus}==True    Exit For Loop
    Run Keyword If    ${AssignmentStatus}!=True or ${ClassNameStatus}!=True    Fail and Capture Screenshot    Assignment done by student is not a Teacher graded assignment
    Wait And Click Element    //div[contains(@id,'gradeAssmtsListGrid-row')]/parent::div/div[${iCounter}+1]//td[1]
    Comment    Replaced keyword wait until element is visible with wait for element visible
    Wait For Element Visible    //div[@id='fbButton']    ${TimeOut}
    Wait Until Keyword Succeeds    2m    5s    Click On Element    //div[@id='fbButton']
    Comment    Replaced keyword wait until element is visible with wait for element visible
    Wait For Element Visible    //div[@id="gradingProgressBar_label"]    ${TimeOut}
    Wait And Click Element    gradingProgressBar_label    ${TimeOut}
    ${TeacherGradeQuestCount}    Get Matching Xpath Count    //div[@id='assmtGrid']//div[@role='row']
    ${TeacherGradeQuestCount}    Get Length Of List    ${TeacherGradeQuestCount}
    Run Keyword If    '${TeacherGradeQuestCount}-1' < '1'    Fail    No questions are displayed for the assignment
    : FOR    ${GradePercentType}    IN    @{Grades}
    \    Wait Until Element Is Visible    //div[contains(@id,'assmtGrid-row')]/parent::div/div[2]    ${Delay}
    \    Wait And Click Element    //div[contains(@id,'assmtGrid-row')]/parent::div/div[2]
    \    Sleep    2s
    \    Wait And Click Element    //div[@id='fbButton']
    \    ${toolTipStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    id=ggTooltipGrade    5s
    \    Run Keyword Unless    ${toolTipStatus}    Click On Element    //div[@id='fbButton']
    \    Wait Until Keyword Succeeds    2m    5sec    Input Text    id=ggTooltipGrade    ${GradePercentType}
    \    Wait And Click Element    //div[@class='gradeDoneWrapper']/div[text()='Done']
    \    ${GradePercentTypeAlertStatus}    Run Keyword If    "${GradePercentType}" == "666" or "${GradePercentType}" == "text" or "${GradePercentType}" == "123.9745"    Run Keyword And Return Status    Wait Until Element Is Visible    //p[@id='alertMessage' and text()='invalid entry.']
    \    ...    5s
    \    ${floatGradePercentTypeAlertStatus}    Run Keyword If    "${GradePercentType}" == "75.7944"    Run Keyword And Return Status    Wait Until Element Is Visible    //p[@id='alertMessage' and text()='invalid entry.']
    \    ...    5s
    \    ${verifyStatus}    Evaluate    "${GradePercentTypeAlertStatus}" == "True"
    \    ${verifyStatus1}    Evaluate    "${GradePercentType}" == "666" or "${GradePercentType}" == "text" or "${GradePercentType}" == "123.9745"
    \    Run Keyword If    "${verifyStatus}" == "False" and "${verifyStatus1}" == "True"    Fail    "invalid entry." Alert is not displayed for the invalid grade entry's "666" / "75.7944" / "123.9745".
    \    Run Keyword If    "${floatGradePercentTypeAlertStatus}" == "True"    Fail    The grade is not accepting roundable floating point value.
    \    Run Keyword If    "${GradePercentTypeAlertStatus}" == "True" or "${floatGradePercentTypeAlertStatus}" == "True"    Wait And Click Element    //div[@id='alertOkBtn']//button[@id='mysAlertBtn' and text()='Ok']
    [Teardown]    Stop Application

ATC-219 Duplicate class creation for a school
    [Documentation]    Verify whether the teacher is unable to create duplicate classes or not.
    ...
    ...    Steps:
    ...    1)Login to wizard application as a teacher .
    ...    2)Add a class in the management.
    ...    3)Add another class.
    ...    4)Select the newly added class and try to duplicate the class name with the previous one.
    ...    5)The pop-up msg "Class Name Already Exists" should appear and the "Save" button should be in disabled mode.
    [Tags]    TEACHER_51    MANAGEMENT_VERIFY_CREATE_DUPLICATE_CLASS    HIGH
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword Unless    ${loginStatus}    Fail    The teacher is unable to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${val}    Get Unique Id
    ${className1}    Set Variable    teacherClass1${val}
    Add A Class Or Group    ${className1}
    ${className2}    Set Variable    teacherClass2${val}
    Add A Class Or Group    ${className2}
    Select The Record In Table    ${table.classesAndGroups}    Name    ${className2}
    Edit The Class Or Group Details
    Wait Until Element Is Visible    ${text.classDetails.name}    30s
    Clear Text    ${text.classDetails.name}
    Input Text    ${text.classDetails.name}    ${className1}
    Wait And Click Element    ${button.classDetails.save}
    ${isAlert_Present}    Wait For Element Visible    ${label.login.AlertMsg}    5s
    Run Keyword If    '${isAlert_Present}'=='False'    Fail and Capture Screenshot    duplicate classes are created
    ${errorMsg}    Get Text    ${label.login.AlertMsg}
    Log    ${errorMsg}
    Comment    Verify whether the error msg"Class name already exhists" has been displayed or not.
    Run Keyword And Continue On Failure    Should Contain    ${errorMsg}    Class name already exists    The error msg - "${errorMsg}" is displayed inspite of "Class name already exists".
    [Teardown]    Stop Application

ATC 242-Teacher Verify whether 'Edit Student in Group" window is displayed in New Groups window.
    [Documentation]    ATC 242-A Verify whether 'Edit Student in Group" window is displayed in New Groups window
    ...
    ...    Step1 : Login with valid Teacher credentials.
    ...
    ...    Step2 : Add a new group from managementment page.
    ...
    ...    Step3 : Click on student edit button.
    ...
    ...    Step4 : Verify whether 'Edit Student in Group" window is displayed in New Groups window or not.
    [Tags]    TEACHER_53    MANGEMENT_VERIFY_EDIT_STUDENTS_IN_GROUP    MEDIUM
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${userId}    Set Variable    ${preTeacherID}
    ${password}    Set Variable    ${preTeacherPassword}
    ${val}    Get Unique Id
    ${ClassName}    Set Variable    QAClass${val}
    Comment    login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${userId}    ${password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to Management page.
    Navigate To Management Page
    Comment    Selecting the frame School Admin.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Wait Until Element Is Visible    ${button.management.showGroups}    20s
    comment    Wait and click on show groups button
    Comment    Wait And Click Element    ${button.management.showGroups}
    comment    wait and click on add button
    Wait And Click Element    ${button.classesAndUsers.add}    ${TimeOut}    Add
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Input Text    ${text.newClass.Name}    ${ClassName}
    Wait And Click Element    ${button.newGrpUserstudent.Edit}
    Wait Until Element Is Visible    ${header.group.student}    ${TimeOut}    Edit Students in Group is not visible.
    [Teardown]    Stop Application

ATC-271 Next button functionality verification in new student creation
    [Documentation]    ATC-271 Next button functionality verification in new student creation
    ...
    ...    Steps:
    ...    1)Open browser to loginpage and select "Student" from the new user drop-down.
    ...    2)Enter all the student data in the "Student Sign Up" process and verify whether the "next" button is enabled or not.
    ...    3)Clear the entered password and verify whether the "next" button is disabled or not.
    ...    4)Reenter the password in the password field, clear the text in the confirm password field and verify whether next button is disabled or not..
    ...    5)Repeat the steps 3 and 4 for 5 times and verify that the "next" button is enabled at point or not.
    [Tags]    TEACHER_55    REGISTRATION_STUDENT_VERIFY_CREATE_NEW_USER    HIGH
    Comment    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${val}    Get Unique Id
    ${studentUId}    Set Variable    student007${val}
    ${studentPwd}    Set Variable    studentpwd007${val}
    ${classCode}    Get From Dictionary    ${preClassesAndClassCodes}    @{preClassesList}[0]
    OpenBrowserToLoginPage
    Comment    New Student SignUp
    Wait And Click Element    ${button.login.newUser}
    ${kwStatus}    Select Role in Create Account    ${studentRole}
    Run Keyword If    ${kwStatus}==False    Teacher Role section was failed in login page.
    Validate The Step Precondition    ${label.StudentSignup.DialogMessage}    Enter the Class Code    The "Enter the Class Code from your teacher." step was not displayed in student signup process.
    Enter Class Code    ${classCode}
    Validate The Step Precondition    ${label.StudentSignup.DialogMessage}    Enter the Class Code    The "Enter the Class Code from your teacher." step was not displayed in student signup process.
    Enter Class Code    ${classCode}
    Wait And Click Element    ${button.signUp.next}
    Validate The Step Precondition    ${label.StudentSignup.DialogMessage}    User ID and Password    The "Fill in the fields to create your account. User ID and Password" step was not displayed in student signup process.
    Wait Until Keyword Succeeds    1m    10s    Click On Element    ${text.studentSignUp.firstName}
    Enter Text In Text Field    ${text.studentSignUp.firstName}    ${studentUId}
    Enter Text In Text Field    ${text.studentSignUp.lastName}    ${studentUId}
    Enter Text In Text Field    ${text.studentSignUp.UserId}    ${studentUId}
    Select DropDown Values    ${image.studentSignUp.gradeArrow}    ${dropdown.studentSignUp.GradeLevel}    2
    Enter Text In Text Field    ${text.studentSignUp.Password}    ${studentPwd}
    Enter Text In Text Field    ${text.studentSignUp.confirmPassword}    ${studentPwd}
    ${bStatus}    Verify Element Present    ${button.signUp.next}
    Run Keyword If    '${bStatus}'!=True    Select DropDown Values    ${image.studentSignUp.gradeArrow}    ${dropdown.studentSignUp.GradeLevel}    7
    Wait Until Element Is Visible    ${button.signUp.next}    5s    The next button is not enabled even after all fields are entered properly in srudent creation.
    Click On Element    ${button.signUp.next}
    [Teardown]    Stop Application

ATC-229 Grade level is displayed or not in the user detail window.
    [Documentation]    ATC-229 Grade level is displayed "NA" or not when we select "Not Applicable" grade in the new student creation from management.
    ...
    ...    Steps:
    ...    1)Login to wizard application as a teacher and navigate rto management
    ...    2)Add an student with grade level "Not applicable"
    ...    3)Reselect the same user which we have created then his grade level should be displayed either "NA" or "Not Applicable".
    [Tags]    TEACHER_56    MANAGEMENT_VERIFY_GRADE_LEVEL    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword Unless    ${loginStatus}    Fail    The teacher is unable to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${unValue}    Get Unique Id
    ${stdUid}    Set Variable    teststudent1${unValue}
    ${grade}    Set Variable    Not Applicable
    ${studentFName}    Set Variable    teststudent1${unValue}_FN
    ${studentLName}    Set Variable    teststudent1${unValue}_LN
    ${studentUId}    Set Variable    teststudent1${unValue}
    ${studentPassword}    Set Variable    test012345
    ${studentMName}    Set Variable    MN
    Wait Until Keyword Succeeds    2m    5s    Click On Element    ${button.users.add}
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.firstName}    ${studentFName}
    Input Text    ${text.newUser.lastName}    ${studentLName}
    Input Text    ${text.newUser.userId}    ${studentUId}
    Input Text    ${text.newUser.password}    ${studentPassword}
    Input Text    newUserMiddleName    ${studentMName}
    Comment    start of code to add grade to a student
    ${roleStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Run Keyword If    ${roleStatus}    Click On Element    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Select DropDown Values    ${image.addStudent.gradeArrow}    ${dropdown.addStudent.GradeLevel}    ${grade}
    Wait And Click Element    ${button.newUser.oK}    ${Delay}    ${button.newUser.oK}
    Wait Until Element Is Visible    //p[@id="alertMessage"]    10s
    ${aMessage}    Get Text    //p[@id="alertMessage"]
    ${status}    String Should Contain    ${aMessage}    Grade level is required for students.
    Run Keyword If    '${status}'!='True'    Fail    Alert message is not displayed as 'Grade level is required for students.'.
    [Teardown]    Stop Application

ATC 232- Teacher-Same UserID and Password are accepted while creating users in management window
    [Documentation]    ATC 232 -Teacher-verify Same UserID and Password are accepted while creating users or not.
    ...
    ...    Step1 : Try to create new user as Teacher
    ...
    ...    Step2 : Enter same username and password.
    ...
    ...    Step3 : verify Same UserID and Password are accepted while creating users or not.
    [Tags]    TEACHER_57    MANAGEMENT_VERIFY_CREATE_USER_WITH_EXISTING_USERID_PASSWORD    HIGH
    ${uniqueValue}    GetUniqueValue    qa4mme+ta
    ${TeacherUId}    Set Variable    ${uniqueValue}@gmail.com
    ${teacherFName}    Set Variable    ${uniqueValue}FN
    ${teacherLName}    Set Variable    ${uniqueValue}LN
    ${school}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    OpenBrowserToLoginPage
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Sleep    2s
    Comment    Creating a 'Teacher'.
    Select Role in Create Account    ${teacherRole}
    Comment    enter the same registration code and wait for the error tool tip
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    Enter Text In Text Field    ${text.teacherSignUp.registrationCode}    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    ${kwStatus}    Select Zip code    ${schoolZipCode}    teacher    ${school}
    Wait Until Element Is Visible    ${text.teacherSignUp.firstName}    ${Delay}
    Input Text    ${text.teacherSignUp.firstName}    ${teacherFName}
    Input Text    ${text.teacherSignUp.lastName}    ${teacherLName}
    Input Text    ${text.teacherSignUp.email}    ${TeacherUId}
    Input Text    ${text.teacherSignUp.emailConfirm}    ${TeacherUId}
    Wait Until Element Is Visible    ${text.teacherSignUp.password}    ${Delay}
    Input Text    ${text.teacherSignUp.password}    ${TeacherUId}
    Input Text    ${text.teacherSignUp.confirmPassword}    ${TeacherUId}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    ${isAlert_Present}    Wait For Element Visible    ${label.login.AlertMsg}    5s
    Run Keyword If    '${isAlert_Present}'=='False'    Fail and Capture Screenshot    Application is accepted to create a new teacher with same user id and password through registration process
    [Teardown]    Stop Application

ATC 290 Teacher Reports-Valid message is displayed in Activity for classes (or) Groups
    [Documentation]    ATC 290 Teacher Reports-Valid message is displayed in Activity for classes (or) Groups
    ...
    ...
    ...    Step 1: Login as Teacher
    ...
    ...    Step2 : Create a group and add a title from management.
    ...
    ...    Step3 : Navigate to home page ange and select the Reports.
    ...
    ...    Step4 : Select the Item Analysis report ,select group and subject.
    ...
    ...    Step5 : Verify Valid message is displayed in Activity for classes (or) Groups
    [Tags]    TEACHER_58    REPORTS_FILTERS_VERIFY_MESSAGE_NO_ACTIVITY    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${TeacherUID}    Set Variable    ${preTeacherID}
    ${TeacherPWD}    Set Variable    ${preTeacherPassword}
    ${assignmentTitle}    Set Variable    @{preSignUpTitleMenus}[3]
    ${TitlesList}    Create List    ${assignmentTitle}
    ${Subject}    Set Variable    ${assignmentTitle}
    ${reportType}    Set Variable    Item Analysis Report
    ${groupName}    GetUniqueValue    QAClass
    ${userStatusList}    Create List    true
    Comment    Login to Wizard application with valid Teacher credentials
    ${loginStatus}    LoginToWizardApp    ${TeacherUID}    ${TeacherPWD}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to managment page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Wait Until Element Is Visible    ${button.management.showGroups}    ${TimeOut}
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Add a group from management page
    Add A Class Or Group    ${groupName}    \    Created by QA off shore    Class
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Add title to created group
    Edit Students Or Titles    ${TitlesList}    ${userStatusList}    Title Name
    Navigate BackTo Home Page    Management
    Comment    Navigating to reports page
    Navigate To Report Filters Page
    Select The Drop Down Value    Report Type    ${reportType}
    Wait And Click Element    toggleClassesGroupsReportBtn
    sleep    10s
    Select The Drop Down Value    Classes/Groups    ${groupName}
    Select The Drop Down Value    Title    ${Subject}
    Wait Until Element Is Visible    //span[@id='noActivitiesForReport']    5s
    ${ActivityStatus}    Get Text    //span[@id='noActivitiesForReport']
    ${invalidLabelTextMatchStatus}    Run Keyword And Return Status    String Should Contain    ${ActivityStatus}    No activities were found for this group
    Run Keyword If    "${invalidLabelTextMatchStatus}"!="True"    Fail    No activities were found for this "group" is not displayed.Deviating text is :"${ActivityStatus}".
    [Teardown]    Stop Application

ATC 288 - Verify when Student edition and Teacher Edition previews are displayed clearly
    [Documentation]    Verifies when teacher adding a new user(Student) whether both the "classes" and "groups" are present in the student edit classes window.
    ...
    ...    Pre condition :- Prerequisite of "Teacher" and "Groups" must be executed successfully.
    ...
    ...    1.Login with teacher credentials.
    ...
    ...    2.Navigate to Management page.
    ...
    ...    3.Go through the student adding process.
    ...
    ...    4.Select the "Edit" button to add classes.
    ...
    ...    5.Verify whether both "classes" and "groups" are present in the editor window.
    ...
    ...    6.Fail if 5th step returns "True".
    [Tags]    TEACHER_59    NEW_ASSIGNMENT_VERIFY_TEACHER_AND_STUDENT_PREVIEWS    HIGH
    Comment    Login to wizard app as an 'Instructor'.
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher / PreRequisite Groups is not created
    ${userId}    Set Variable    ${preTeacherID}
    ${password}    Set Variable    ${preTeacherPassword}
    Comment    @{groupsList}    Set Variable    ${preGroupList}
    @{classesList}    Set Variable    ${preClassesList}
    ${className}    Set Variable    @{classesList}[0]
    Comment    ${groupName}    Set Variable    @{groupsList}[0]
    ${val}    Get Unique Id
    ${uniqueVal}    Set Variable    Student${val}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}Fn    Middle Name    ${uniqueVal}MN    Last Name    LN    Grade Level
    ...    2
    Comment    Login with Valid teacher Credentials.
    ${loginStatus}=    LoginToWizardApp    ${userId}    ${password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Comment    Selecting the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Go through the student adding process
    ${studentUId}    Get From Dictionary    ${studentDetails}    User Name
    ${studentPassword}    Get From Dictionary    ${studentDetails}    Password
    ${studentFName}    Get From Dictionary    ${studentDetails}    First Name
    ${studentLName}    Get From Dictionary    ${studentDetails}    Last Name
    ${studentMName}    Get From Dictionary    ${studentDetails}    Middle Name
    ${grade}    Get From Dictionary    ${studentDetails}    Grade Level
    Wait Until Keyword Succeeds    2m    5s    Click On Element    //div[@id="newUserBtn"]
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.firstName}    ${studentFName}
    Input Text    ${text.newUser.lastName}    ${studentLName}
    Input Text    ${text.newUser.userId}    ${studentUId}
    Input Text    ${text.newUser.password}    ${studentPassword}
    Input Text    newUserMiddleName    ${studentMName}
    Comment    start of code to add grade to a student
    ${roleStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Run Keyword If    ${roleStatus}    Click On Element    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Select DropDown Values    ${image.addStudent.gradeArrow}    ${dropdown.addStudent.GradeLevel}    ${grade}
    Comment    Editing the classes to add to the student and verifying failing if groups and classes are found together.
    Wait And Click Element    //div[@id='editNewUserGroupsBtn']
    ${elementStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[@id='listEditor']//div[contains(@class,'from')]//span[@class='headerLabel']    10s
    ${headerText}    Run Keyword If    "${elementStatus}" != "False"    Get Text    //div[@id='listEditor']//div[contains(@class,'from')]//span[@class='headerLabel']
    Log    ${headerText}
    Comment    ${groupExistanceStatusinList}    Verify Element Present    ${table.fromTable}//td[text()='${groupName}']
    Comment    Run Keyword And Continue On Failure    Run Keyword Unless    ${groupExistanceStatusinList}    Fail    The groups are not displayed
    ${classExistanceStatusinList}    Verify Element Present    ${table.fromTable}//td[text()='${className}']
    Run Keyword Unless    ${classExistanceStatusinList}    Fail    Fail    The classes are not displayed
    [Teardown]    Stop Application

ATC 352 Teacher-Verify whether Select all Checkbox is displayed as selected when unselected one or more classes
    [Documentation]    ATC 352 Teacher-Verify whether Select all Checkbox is displayed as selected when unselected one or more classes.
    ...
    ...    Step 1 : Login as a Teacher.
    ...
    ...    Step 2 : Create a class from management.
    ...
    ...    Step 3 : Click on Edit button and click on studentDetails edit button.
    ...
    ...    Step 4 : Click on check box for selecting all students.
    ...
    ...    Step 5 : Verify whether Select all Checkbox is displayed as selected when unselected one or more classes or not.
    [Tags]    TEACHER_61    MANAGEMENT_VERIFY_SELECT_ALL_FUNCTION    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    ${uniqueValue}    GetUniqueValue
    ${ClassName}    Set Variable    QAclass${uniqueValue}
    ${userStatusList}    Create List    true
    Comment    Login with Valid Teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Comment    Selecting the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To add a class from management page
    ${bStatus}    Add A Class Or Group    ${ClassName}
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    Comment    Click on Edit button
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Wait and click on students edit button
    Wait And Click Element    ${button.students.edit}
    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Comment    To get unSelected check boxes count
    ${uncheckStudentsStatus}    Get Matching Xpath Count    ${check.editStudents.unselectedCheckBox}
    Comment    Wait and click on selectAllCheckbox
    Wait And Click Element    ${check.editStudentsorTitles.selectAllCheckbox}
    Run Keyword And Continue On Failure    Wait Until Keyword Succeeds    2m    5s    Wait Until Element Is Visible    //div[@class='listEditor']//div[contains(@class,'dgrid-header')]//input[@aria-checked='true']
    Verify Element Visible    ${check.editStudents.CheckboxStatus.true}
    Comment    To get the listEditoe attribute
    ${checkboxStatus}    Get Element Attribute    ${check.editStudentsorTitles.selectAllCheckbox}@aria-checked
    Comment    To get Allselected check boxes count
    ${studentCheboxStatus}    Get Matching Xpath Count    ${check.editStudent.AllSelectedCheckBox}
    Comment    Wait and click on first row checkedbox
    Wait And Click Element    ${check.editStudent.firstRow.selected}
    Verify Element Visible    ${check.editStudent.Mixed}
    Comment    To get the listEditoe attribute
    ${statusOfListEditor}    Get Element Attribute    ${check.editStudentsorTitles.selectAllCheckbox}@aria-checked
    Run Keyword If    "${uncheckStudentsStatus}"!="${studentCheboxStatus}" and "${checkboxStatus}"=="False" and "${statusOfListEditor}"=="False"    Fail    "${uncheckStudentsStatus}","${studentCheboxStatus}" are not equal and "${checkboxStatus}" is false "${statusOfListEditor}"=="False"
    [Teardown]    Stop Application

ATC 302 -8468118 Verify Next button is in enabled mode while doing teacher registration process
    [Documentation]    8468118- Next button is in enabled mode while doing teacher registration process
    ...
    ...    Steps:
    ...    1.Navigate to Login page.
    ...    2.Select new user "Teacher".
    ...    3.Enter All details upto "Teacher Regcode,choose Title".
    ...    4.verfiy Next button is in enabled mode while doing teacher registration process
    [Tags]    TEACHER_62    REGISTRATION_VERIFY_NEXT_BUTTON_STATUS    HIGH
    ${uniqueVal}    GetUniqueValue
    ${TeacherUId}    Set Variable    qa4mme+teacher${uniqueVal}@gmail.com
    ${teacherFName}    Set Variable    TeacherFN${uniqueVal}
    ${teacherLName}    Set Variable    TeacherLN${uniqueVal}
    ${teacherPWD}    Set Variable    test012345
    Comment    Navigate to Login page and Selct new User "Teacher" role.
    OpenBrowserToLoginPage
    Wait And Click Element    ${button.login.newUser}
    ${kwStatus}    Select Role in Create Account    ${teacherRole}
    Return From Keyword If    ${kwStatus}==False    ${kwStatus}
    ${schoolName}    Set Variable    ${preSchoolName}
    Validate The Step Precondition    ${label.TeacherSignUp.dialogMessage}    Enter Te code.    "Enter Teacher registration code" step was not displayed in Teacher Signup proccess.
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    TypeCharactertoTextBox    //input[@id='teacherSignUpDlg-registrationCode']    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    ${kwStatus}    Select Zip code    ${schoolZipCode}    teacher    ${schoolName}
    Input Text    ${text.teacherSignUp.firstName}    ${teacherFName}
    Input Text    ${text.teacherSignUp.lastName}    ${teacherLName}
    Input Text    ${text.teacherSignUp.email}    ${TeacherUId}
    Input Text    teacherSignUpDlg-emailConfirm    ${TeacherUId}
    Input Text    ${text.teacherSignUp.password}    ${teacherPWD}
    Input Text    ${text.teacherSignUp.confirmPassword}    ${teacherPWD}
    Wait And Click Element    ${button.signUp.next}
    ${IAgreeButton}    Set Variable If    ${isDemoQURL}    //div[@id='genericTermsDlg']${common.SignUp.IAgreeBttn}    //div[@id='termsDlg']${common.SignUp.IAgreeBttn}
    Wait For Element Visible    ${IAgreeButton}    ${Delay}
    Wait And Click Element    ${IAgreeButton}
    Wait For Element Visible    ${common.teacherSignUp.Login}    ${Delay}
    Wait And Click Element    ${common.teacherSignUp.Login}
    ${loaderStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}    20s
    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${common.homepage.Loading}    ${Delay}
    ${kwStatus}    Validate User Login Details    ${teacherFName}    ${teacherLName}
    Run Keyword If    ${kwStatus}==False    Fail    New teacher ${teacherFName} ${teacherLName} was not created.
    [Teardown]    Stop Application

ATC 313 Teacher- Check whether the same user ID and password is accepted.
    [Documentation]    ATC 313 Teacher Reg.-Check whether the same user ID and password is accepted.
    ...
    ...    Step 1 : Open browser to login page.
    ...
    ...    Step 2 : Click on Newuser link and select teacher role.
    ...
    ...    Step 3 : Enter Zip code and select school.
    ...
    ...    Step 4 : Enter valid email address.
    ...
    ...    Step 5 : Enter password same as email.
    ...
    ...    Step 6 : Check whether the same user ID and password is accepted or not.
    [Tags]    TEACHER_63    NEW_USER_VERIFY_EXISTING_USERID_PASSWORD_ACCEPTED    HIGH
    ${uniqueVal}    GetUniqueValue
    ${TeacherUId}    Set Variable    qa4mme+teacher${uniqueVal}@gmail.com
    ${teacherFName}    Set Variable    TeacherFN${uniqueVal}
    ${teacherLName}    Set Variable    TeacherLN${uniqueVal}
    Comment    Open browser to login page
    OpenBrowserToLoginPage
    Wait And Click Element    ${button.login.newUser}
    Comment    Select newuser as Teacher role
    ${kwStatus}    Select Role in Create Account    ${teacherRole}
    Return From Keyword If    ${kwStatus}==False    ${kwStatus}
    ${schoolName}    Set Variable    ${preSchoolName}
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    TypeCharactertoTextBox    //input[@id='teacherSignUpDlg-registrationCode']    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    ${kwStatus}    Select Zip code    ${schoolZipCode}    teacher    ${schoolName}
    Input Text    ${text.teacherSignUp.firstName}    ${teacherFName}
    Input Text    ${text.teacherSignUp.lastName}    ${teacherLName}
    Input Text    ${text.teacherSignUp.email}    ${TeacherUId}
    Input Text    teacherSignUpDlg-emailConfirm    ${TeacherUId}
    Input Text    ${text.teacherSignUp.password}    ${TeacherUId}
    Input Text    ${text.teacherSignUp.confirmPassword}    ${TeacherUId}
    Wait And Click Element    ${button.signUp.next}
    ${IAgreeButton}    Set Variable If    ${isDemoQURL}    //div[@id='genericTermsDlg']${common.SignUp.IAgreeBttn}    //div[@id='termsDlg']${common.SignUp.IAgreeBttn}
    Wait For Element Visible    ${IAgreeButton}    ${Delay}
    Wait And Click Element    ${IAgreeButton}
    Wait For Element Visible    ${common.teacherSignUp.Login}    ${Delay}
    Wait And Click Element    ${common.teacherSignUp.Login}
    Comment    ${TooltipStatus}    Get Text    ${label.signUp.toolTipText}
    Comment    String Should Contain    ${TooltipStatus}    The password must not be the same as the UserID.
    Comment    Run Keyword If    '${TooltipStatus}'=='False'    Fail    "The password must not be the same as the UserID." message is not displayed
    [Teardown]    Stop Application

ATC 323-Teacher- Check whether all the School names are displayed when Valid Zipcode is entered.
    [Documentation]    7485753-Teacher- Check whether all the School names are displayed when Valid Zipcode is entered.
    ...
    ...    Step 1 : Open browser to login page.
    ...
    ...    Step 2 : Click on newuser link and select teacher role.
    ...
    ...    Step 3 : Enter the valid zip code.
    ...
    ...    Step 4 : Check whether all the School names are displayed when Valid Zipcode is entered.
    [Tags]    TEACHER_64    NEW_USER_VERIFY_SCHOOL_NAMES_FOR_ZIPCODE    HIGH
    Comment    Open browser to login page
    OpenBrowserToLoginPage
    Wait And Click Element    ${button.login.newUser}
    Comment    Select newuser as Teacher role
    ${kwStatus}    Select Role in Create Account    ${teacherRole}
    Return From Keyword If    ${kwStatus}==False    ${kwStatus}
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    TypeCharactertoTextBox    //input[@id='teacherSignUpDlg-registrationCode']    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    Comment    Validate The Step Precondition    ${label.TeacherSignUp.dialogMessage}    Enter the teacher registration code    The "Enter the teacher registration code " step was not displayed in Teacher signup process.
    ${schoolZipCode}    Get Zipcode For School    ${EXECDIR}\\Automation_Testsuites\\TestData\\MySatori Test DBs.xlsx    ${RegCodeSheetName}    ${schoolName}
    Enter Text In Text Field    teacherSignUpDlg-zip    ${schoolZipCode}
    Press Back Space Key    teacherSignUpDlg-zip
    TypeCharactertoTextBox    teacherSignUpDlg-zip    ${schoolZipCode}
    Comment    Click Element Using Javascript    //td[@class='dijitReset dijitMenuItemLabel' and text()='${school}']
    ${SchoolsStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    teacherSignUpDlg-schools    10s    Schools are not displayed when enter the zip code in registration process
    Comment    To get all School names into list
    ${schoolsList}    Get Matching Xpath Values    //div[@id='teacherSignUpDlg']/following-sibling::div[@id='teacherSignUpDlg-schoolList_dropdown']/table/tbody/tr    /td[@class='dijitReset dijitMenuItemLabel']
    [Teardown]    Stop Application

ATC 325 - 8489950 - Check the student user ID is accepting 6 characters.
    [Documentation]    Verifies whether the student userID field is showing alert when entered userID of length below 6 characters.
    ...
    ...    1.Login as Teacher.
    ...
    ...    2.Navigate to management.
    ...
    ...    3.Go through add new user process.
    ...
    ...    4.Enter UserID of length below 6 characters.
    ...
    ...    5.Fail if the tooltip alert is not displayed saying : "Please enter a student username with at least 6 characters.".
    [Tags]    TEACHER_65    MANAGEMENT_CREATE_USER_VERIFY_STUDENT_USERID_LENGTH    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Comment    Login as a teacher
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying duplicate student creation.
    Wait Until Keyword Succeeds    2m    5s    Click On Element    newUserBtn
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.userId}    STDNT
    Wait And Click Element    ${button.newUser.oK}    ${Delay}    ${button.newUser.oK}
    Capture Page Screenshot And Log    ${OUTPUTDIR}
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert message is not displayed
    Run Keyword If    ${tooltipStatus}    Should Contain    ${toolTipMsg}    Please enter a student User ID with at least 6 characters.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Please enter a student User ID with at least 6 characters.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    [Teardown]    Stop Application

ATC 330-Verify whether error message is displayed while deleting the class or group
    [Documentation]    ATC 330-Verify whether error message is displayed while deleting the class or group.
    ...    Steps:
    ...    1. Login to the application as a teacher.
    ...    2. Navigate to management page.
    ...    3.Select the class or group from the class table.
    ...    4.Click on delete button, alert should display
    [Tags]    TEACHER_66    MANAGEMENT_VERIFY_DELETE_CLASS_ALERT    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserID}    Set Variable    ${preTeacherID}
    ${TeacherPWD}    Set Variable    ${preTeacherPassword}
    ${uniqueID}    GetUniqueValue
    ${ClassName}    Set Variable    Class_name${uniqueID}
    ${loginStatus}    LoginToWizardApp    ${TeacherUserID}    ${TeacherPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    Teacher-${TeacherUserID} logged in.
    ...    ELSE    Fail    Login failed with Teacher-${TeacherUserID}
    Navigate To Management Page
    Wait And Select Frame    iframeSchoolAdmin
    Add A Class Or Group    ${ClassName}
    ${studentRowNumber}=    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Wait Until Element Is Visible    ${button.classes.delete}    ${TimeOut}
    Click Element    ${button.classes.delete}
    Comment    verify whether alert is displayed or not.
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    promptMessage    ${TimeOut}
    Run Keyword Unless    ${bStatus}    Fail    Alert message is not displayed after clicking Delete button.
    ${alertMessage}    Run Keyword If    ${bStatus}    Get Text    promptMessage
    Comment    Verify whether the alert text message matches with the expected or not.
    ${bStatus1}    String Should Contain    ${alertMessage}    Are you sure you want to delete the class
    Run Keyword Unless    ${bStatus1}    Fail    "Are you sure you want to delete the class " message is not displayed.
    [Teardown]    Stop Application

ATC 333 Teacher-Verify whether user can register with same email ID for different schools
    [Documentation]    ATC 333-Teacher-Verify whether user can register with same email ID for different schools
    ...
    ...    Step 1 : Open browser to login page
    ...
    ...    Step 2 : Create Teacher role.
    ...
    ...    Step 3 \ : Signout from the application.
    ...
    ...    Step 4 : Click on newuser link and select Teacher role.
    ...
    ...    Step 5 : Enter zip code select different school name.
    ...
    ...    Step 6 : Try to enter already existed email Id ,password and confirm password click on nex button.
    ...
    ...    Step 7 : Verify whether user can register with same email ID for different schools the alert message is displayed or not.
    [Tags]    TEACHER_67    REGISTRATION_VERIFY_SAME_MAIL_FOR_DIFFERENT_SCHOOLS    HIGH
    ${random}    GetUniqueValue
    ${teacherDetails}    Create Dictionary    UserName    qa4mme+ta${random}@gmail.com    Password    qa4mme+ta${random}    FirstName
    ...    TFN${random}    LastName    TLN${random}    ClassName    DataClass${random}    Title
    ...    CCS Reading Assessments Level 3
    ${teacherLN}    Get From Dictionary    ${teacherDetails}    LastName
    ${TeacherUId}    Get From Dictionary    ${teacherDetails}    UserName
    ${teacherFN}    Get From Dictionary    ${teacherDetails}    FirstName
    ${TeacherPWD}    Get From Dictionary    ${teacherDetails}    Password
    ${school}    Set Variable If    ${isDemoQURL}    ${demoQPreSchoolName}    ${preSchoolName}
    Comment    Open browser to login page
    OpenBrowserToLoginPage
    Comment    To create new Teacher role
    Create New Teacher    ${teacherDetails}
    Comment    Signout from the application
    ${signoutStatus}    SignOut
    Run Keyword Unless    ${signoutStatus}    Go To    ${WizardURL}
    Reload Page
    Comment    Click on 'NewUser' button.
    Wait And Click Element    ${button.login.newUser}
    Sleep    2s
    Comment    Creating a 'Teacher'.
    ${kwStatus}    Select Role in Create Account    ${teacherRole}
    Return From Keyword If    ${kwStatus}==False    ${kwStatus}
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    TypeCharactertoTextBox    //input[@id='teacherSignUpDlg-registrationCode']    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    Comment    Click on 'Next' button at Teacher's signUp.
    ${kwStatus}    Select Zip code    ${schoolZipCode}    teacher    ${school}
    Wait Until Element Is Visible    ${text.teacherSignUp.firstName}    ${Delay}
    Input Text    ${text.teacherSignUp.firstName}    ${teacherFN}
    Input Text    ${text.teacherSignUp.lastName}    ${teacherLN}
    Input Text    ${text.teacherSignUp.email}    ${TeacherUId}
    Input Text    teacherSignUpDlg-emailConfirm    ${TeacherUId}
    Wait Until Element Is Visible    ${text.teacherSignUp.password}    ${Delay}
    Input Text    ${text.teacherSignUp.password}    ${TeacherPWD}
    Input Text    ${text.teacherSignUp.confirmPassword}    ${TeacherPWD}
    Wait And Click Element    ${button.signUp.next}
    Validate The Step Precondition    ${label.login.AlertMsg}    Alert message    Alert message step was not displayed when user can register with same email ID for different schools
    [Teardown]    Stop Application

ATC-295 Verify Grade assignment window after opening Live Chat window
    [Documentation]    7947676-Live chat window is dispalyed under Help Menu in Grade Asssignments
    ...
    ...
    ...    Steps:
    ...    1.Login with Teacher credentials.
    ...    2.Navigate to 'Grade Assignments' page.
    ...    3.Click on 'Help' button.
    ...    4.Click on 'Live Chat' .
    ...    5.slect main window
    ...    6.verfiy Grade assignment window is displayed blank.
    [Tags]    TEACHER_68    HELP_VERIFY_SUB_MENU_LIVE_CHAT    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to 'Grade Assignments' page by clicking on 'Grade Assignments' button.
    Select Graded Assignments
    Wait Until Element Is Visible    ${table.gradeAssignments.rows}    ${TimeOut}
    ${rowsCount}=    Get Matching Xpath Count    ${table.gradeAssignments.rows}
    Comment    Mys- 4098: Updated Locator For the assignments details in the grade assignment page
    ${colCount}=    Get Matching Xpath Count    //div[@id='gradeAssmtsListGrid']//div[@class='dgrid-scroller']//div[@role='row'][1]//td
    ${list}    Create List
    : FOR    ${iCount}    IN RANGE    1    ${colCount}+1
    \    Comment    Mys- 4098: Updated Locator For the assignments details in the grade assignment page
    \    ${tData}=    Get Text    //div[@id='gradeAssmtsListGrid']//div[@class='dgrid-scroller']//div[@role='row'][1]//td[${iCount}]
    \    Append To List    ${list}    ${tData}
    Comment    Click on 'Help' and Select 'Live Chat'.
    Wait And Click Element    ${button.gradeAssignments.Help}
    Comment    verify the LiveChat link in Help menu
    Wait And Click Element    ${link.help.LiveChat}
    ${wNames}    Get Window Titles
    Select Window By Title    Mentoring Minds
    ${actualList}    Create List
    ${actualRowsCount}=    Get Matching Xpath Count    ${table.gradeAssignments.rows}
    Comment    Mys- 4098: Updated Locator For the assignments details in the grade assignment page
    ${actualColCount}=    Get Matching Xpath Count    //div[@id='gradeAssmtsListGrid']//div[@class='dgrid-scroller']//div[@role='row'][1]//td
    : FOR    ${iCount}    IN RANGE    1    ${colCount}+1
    \    Comment    Mys- 4098: Updated Locator For the assignments details in the grade assignment page
    \    ${tData}=    Get Text    //div[@id='gradeAssmtsListGrid']//div[@class='dgrid-scroller']//div[@role='row'][1]//td[${iCount}]
    \    Append To List    ${actualList}    ${tData}
    Run Keyword And Continue On Failure    Should Be Equal    ${rowsCount}    ${actualRowsCount}    Rows count \ is changed Grade Assignment page after opening Livechat window.
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${list}    ${actualList}    Columns data is changed Grade Assignment page after opening Livechat window.
    [Teardown]    Stop Application

ATC 299 Alert message is displayed when clicked on Grade button
    [Documentation]    Validating the alert message is displayed when clicked on grade button.
    [Tags]    TEACHER_69    GRADE_ASSIGNMENTS_VERIFY_GRADE_ALERT    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Select Graded Assignments
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[contains(@id,'gradeAssmtsListGrid-row')]    ${TimeOut}
    Run Keyword If    ${bStatus}==False    Set Test Message    grade Assignment List Grid-row not dislayed.
    ${GradedAssignmentCount}=    Get Matching Xpath Count    //div[contains(@id,'gradeAssmtsListGrid-row')]
    Run Keyword If    ${GradedAssignmentCount}==0    Fail and Capture Screenshot    No Graded Assignments are available to Grade
    Comment    Verify whether the disble grade button is available or not.
    Wait Until Element Is Visible    ${button.toBeGraded.disabledGrade}    30s    Disbled grade button is not displayed in the grade assignment list.
    Wait And Click Element    ${button.toBeGraded.disabledGrade}
    Comment    Verify the alert is displayed or not.
    Wait Until Element Is Visible    alertMessage    30s    The alert message is not coming after clicking on grade button.
    ${alertMessage}    Get Text    alertMessage
    Comment    verify whether the alert message matches with the expected or not.
    ${bStatus}    Run Keyword And Return Status    Should Be Equal As Strings    ${alertMessage}    There is nothing ready to grade. The button will turn green when assignments have been submitted by students.
    Run Keyword Unless    ${bStatus}    fail    Alert message is not matching with expected alert message.
    [Teardown]    Stop Application

ATC 348-Verify whether correct browser name is displayed
    [Documentation]    Validating whether correct browser name is displayed.
    ...    Steps:
    ...    1.Login to the application as teacher.
    ...    2.Select browser test under help menu,New window will open.
    ...    3.Summary regarding browser and operating system details will appear.
    [Tags]    TEACHER_70    HELP_VERIFY_SUBMENU_BROWSER_TEST    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserID}    Set Variable    ${preTeacherID}
    ${TeacherPWD}    Set Variable    ${preTeacherPassword}
    ${loginStatus}    LoginToWizardApp    ${TeacherUserID}    ${TeacherPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    Teacher-${TeacherUserID} logged in.
    ...    ELSE    Fail    Login failed with Teacher-${TeacherUserID}
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Focus    ${button.home.help}
    Wait And Click Element    ${button.home.help}
    Comment    verify the Browser Test link in Help menu
    Wait And Click Element    ${button.help.browserTest}
    ${window_Titles}=    Get Window Names
    Select My Window    selenium_main_app_window
    Sleep    4s
    Wait For Element Visible    //td[@id='browserInfo']/following-sibling::td[@class='testOK']    ${Max Delay}
    Wait Until Element Is Visible    browserInfo    ${Max Delay}
    ${browserName}    Get Text    browserInfo
    Comment    Verify whether broswer name is displayed properly or not.
    Run Keyword If    "${BROWSER}"=="gc"    Should Contain    ${browserName}    Chrome    The browser name is displayed as "${browserName}" inspite of "Chrome"
    Run Keyword If    "${BROWSER}"=="ie"    Should Contain    ${browserName}    Internet Explorer    The browser name is displayed as "${browserName}" inspite of "Internet Explorer"
    [Teardown]    Stop Application

ATC 336 Teacher-Verify whether 'Teacher' is displayed instead of 'Instructor'
    [Documentation]    ATC 336 Teacher-Verify whether 'Teacher' is displayed instead of 'Instructor'
    ...
    ...    Step 1 : Login as Teacher.
    ...
    ...    Step 2 : Click on management tab.
    ...
    ...    Step 3 : Verify whether 'Teacher' is displayed instead of 'Instructor' in all users table.
    [Tags]    TEACHER_71    MANAGEMENT_VERIFY_TEACHER_AND_INSTRUCTOR_LABLES    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisite for teacher is not created.
    ${teacherUID}    Get From Dictionary    ${preTeacherDetails}    UserName
    ${teacherPWD}    Get From Dictionary    ${preTeacherDetails}    Password
    ${teacherFn}    Get From Dictionary    ${preTeacherDetails}    FirstName
    Comment    To login to wizard application with valid Teacher credentials
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to management page
    Navigate To Management Page
    Comment    Wait and select the iframe.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    To sort table values based on role
    Table Column Sorting    ${table.users}    Role    ascend
    ${matchedValue}    Get Text    ${table.users}/div[@class='dgrid-scroller']/div[contains(@class,'dgrid-content')]/div[@role='row']//table[@class='dgrid-row-table']//tr//td[contains(@class,'first_name') and contains(text(),'${teacherFn}')]//following-sibling::td[contains(@class,'dgrid-column-roles')]
    Log    ${matchedValue}
    Run Keyword And Continue On Failure    Run Keyword If    "${matchedValue}" == "{EMPTY}" or "${matchedValue}"!="Teacher"    Teacher record is not found
    [Teardown]    Stop Application

ATC 326 - Verify whether names fields are accepting alpha-numerics and numerics.
    [Documentation]    Verifies whether the First Name and Last Name fields are accepting the alpha-numeric characters or not.
    ...
    ...    1.Login as teacher.
    ...
    ...    2.Navigate to management.
    ...
    ...    3.Go through add new user process.
    ...
    ...    4.Enter alpha-numeric text in First Name and Last Name fields and verify whther is it accepting or showing error for \ \ \ \ \ \ respective fields.
    ...
    ...    5.Fail if raising any error.
    [Tags]    TEACHER_72    MANAGEMENT_CREATE_USER_VERIFY_ALPHANUMERICS_FOR_NAME    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisiteTeacher is not created
    ${teacherUID}    Get From Dictionary    ${preTeacherDetails02}    UserName
    ${teacherPWD}    Get From Dictionary    ${preTeacherDetails02}    Password
    ${uniqueId}    Get Time
    ${studentFName}    Set Variable    Student${uniqueId}_FN
    ${studentLName}    Set Variable    Student${uniqueId}_LN
    Comment    Login with valid teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    10s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying FirstName and Last Name fields alert displayed or not when entered only numeric values and also checking for alpha-numeric values.
    Wait Until Keyword Succeeds    2m    5s    Click On Element    newUserBtn
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.userId}    STDNT
    Input Text    ${text.newUser.firstName}    ${uniqueId}01
    Input Text    ${text.newUser.lastName}    ${uniqueId}02
    Wait And Click Element    ${button.newUser.oK}    ${Delay}    ${button.newUser.oK}
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert "Class name is not valid. " is not displayed when selecting roles and Student and Teacher and Click on Save button .
    Run Keyword If    ${tooltipStatus}    Should Contain    ${toolTipMsg}    First Name contains invalid characters.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Grade level is required for students.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Last Name contains invalid characters.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Please enter a student User ID with at least 6 characters.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Password is required.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    [Teardown]    Stop Application

ATC 304 - Teacher - Verify duplicate groups are being created from management.
    [Documentation]    Verifies whether teacher is able to create duplicate groups from management window.
    ...
    ...    1.Login with Teacher credentials.
    ...
    ...    2.Navigate to management.
    ...
    ...    3.Try to add new group with existing group name in management and verify and fail if no proper alert is displayed on \ \ \ \ saving with existing group detals.
    [Tags]    TEACHER_73    MANAGEMENT_VERIFY_DUPLICATE_GROUP_CREATION    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisiteTeacher PreRequisite Groups is not created
    Comment    Login with valid Teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3394:Updated to wait and inteeract with the first row which get displayed in classes table, to deal with loading.
    Wait And Click Element    //div[@id='groupGrid']//div[@role='row'][1]//table//tr//td[1]
    ${groupName}    Set Variable    @{preClassesList}[1]
    ${description}    Set Variable    Added by QA
    Comment    Add a group to the groups table.
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.showGroups}
    Run Keyword If    ${bStatus}==True    Wait And Click Element    ${button.management.showGroups}
    Comment    The 'Classes & Groups' table should appear with 'Add' button it.
    Comment    Click 'Add' button.
    Wait And Click Element    ${button.classesAndUsers.add}    ${TimeOut}    Add
    Wait Until Element Is Visible    ${text.newClass.Name}    ${Delay}
    Input Text    ${text.newClass.Name}    ${groupName}
    Run Keyword If    '${description}'!='${Empty}'    Input Text    newGroupDescription    ${description}
    Wait And Click Element    newGroupOK    ${TimeOut}    newGroupOK
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert "Class name is not valid. " is not displayed when selecting roles and Student and Teacher and Click on Save button .
    Run Keyword If    ${tooltipStatus}    Should Be Equal As Strings    ${toolTipMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Should Be Equal As Strings    ${alertMsg}    Class name already exists.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    Comment    ${bStatus}=    String Should Contain    ${alert}    Class name is not valid.
    Comment    Run Keyword If    ${bStatus}!=True    Fail    Alert "Class name is not valid. " is not displayed when selecting roles and Student and Teacher and Click on Save button .
    [Teardown]    Stop Application

ATC 305 - Teacher - Verify duplicate students are being created from management.
    [Documentation]    Verifies whether teacher is able to create duplicate students from management window.
    ...
    ...    1.Login with Teacher credentials.
    ...
    ...    2.Navigate to management.
    ...
    ...    3.Try to add new student with existing student details from same management window and verify and fail if no \ \ \ \ proper alert is displayed on saving with existing stuudent details.
    [Tags]    TEACHER_74    MANAGEMENT_VERIFY_DUPLICATE_STUDENT_CREATION    HIGH
    Run Keyword If    '${preScriptStatus}'=='False'    Fail    PreRequisiteTeacherPreRequisite Groups is not created
    ${teacherUID}    Get From Dictionary    ${preTeacherDetails02}    UserName
    ${teacherPWD}    Get From Dictionary    ${preTeacherDetails02}    Password
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC46B
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${studentFName}    Get From Dictionary    ${stdDetails}    First Name
    ${studentLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentMName}    Set Variable    MN
    ${grade}    Set Variable    4
    Comment    Login with valid School Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    10s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Navigate to Management Page.
    Navigate To Management Page
    Comment    Wait and select the iframe.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying duplicate student creation.
    Wait Until Keyword Succeeds    2m    5s    Click On Element    ${button.users.add}
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.firstName}    ${studentFName}
    Input Text    ${text.newUser.lastName}    ${studentLName}
    Input Text    ${text.newUser.userId}    ${StdUserID}
    Input Text    ${text.newUser.password}    ${studentPassword}
    Select DropDown Values    ${image.addStudent.gradeArrow}    ${dropdown.addStudent.GradeLevel}    ${grade}
    Wait And Click Element    ${button.newUser.oK}    ${Delay}
    Wait Until Element Is Visible    ${label.login.Alert}    ${Delay}    The Alert is not displayed. Teacher is able to add duplicate students.
    ${alertText}    Get Text    ${label.login.AlertMsg}
    Comment    MYS-3211 : Updated alert text content in validation.
    Comment    MYS-2963 : Updated alert text content in validation to "This User ID is already taken".
    String Should Contain    ${alertText}    This User ID is already taken.
    [Teardown]    Stop Application

ATC 329-Teacher-Verify whether tool tip message is displayed for last name field
    [Documentation]    ATC 329-Teacher-Verify whether tool tip message is displayed for last name field.
    ...
    ...    Step 1 : Login as a Teacher.
    ...
    ...    Step 2 : Navigating to management page.
    ...
    ...    Step 3 : Click on Add newuser button.
    ...
    ...    Step 4 : Enter first name and Last name and click on back space.
    ...
    ...    Step 5 : Verify whether tool tip message"This value is required" is displayed for last name field or not.
    [Tags]    TEACHER_75    MANAGEMENT_CREATE_USER_VERIFY_TOOL_TIP    HIGH
    Run Keyword If    '${preScriptStatus}'!='True'    Fail    PreRequisite teacher is not created
    ${TeacherUserName}    Set Variable    ${preTeacherID}
    ${TeacherPassword}    Set Variable    ${preTeacherPassword}
    Comment    login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${TeacherUserName}    ${TeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigating to management page
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    ${bStatus}=    Wait Until Element Is Visible    ${button.management.showGroups}    20s
    Comment    Wait and click on Add button
    Wait And Click Element    ${button.users.add}
    Wait Until Element Is Visible    ${text.newUser.firstName}    5s    New user window is not visible.
    Comment    Enter first name
    Input Text    ${text.newUser.firstName}    Student
    Comment    Enter last name
    Input Text    ${text.newUser.lastName}    !
    Wait And Click Element    ${button.newUser.oK}    ${Delay}    ${button.newUser.oK}
    ${tooltipStatus}    Wait For Element Visible    ${label.signUp.toolTipText}    15s
    ${alertMsgStatus}    Verify Element Visible    ${text.Details.Alert}
    ${toolTipMsg}    Run Keyword If    ${tooltipStatus}    Get Text    ${label.signUp.toolTipText}
    ${alertMsg}    Run Keyword If    ${alertMsgStatus}    Get Text    ${text.Details.Alert}
    Run Keyword If    ${tooltipStatus}!=True and ${alertMsgStatus}!=True    Fail    Alert message is not dispalyed
    Run Keyword If    ${tooltipStatus}    Should Contain    ${toolTipMsg}    Last Name is required.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    User ID is required
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Password is required.
    Run Keyword If    ${alertMsgStatus}    Should Contain    ${alertMsg}    Grade level is required for students.
    Run Keyword If    ${alertMsgStatus}    Wait And Click Element    ${button.Alert.OK}
    [Teardown]    Stop Application

ATC 205 Verify Whether Option name is displayed along with the answer under the Correct answer tab.
    [Documentation]    ATC 205-Verify Whether Option name is displayed along with the answer under the Correct answer tab.
    ...
    ...
    ...    Step1 : Login as a Teacher.
    ...
    ...    Step2 : Create a class add students and titles.
    ...
    ...    Step4 : Assign assignments to student.
    ...
    ...    Step5 : Login as a student
    ...
    ...    Step6 : Write the assignments “Unit 3 - Understanding Odd and Even Numbers to 20, Page 20 - \ Partner Practice (2.OA.C.3)
    ...
    ...    Step7 : Click on save answers button.
    ...
    ...    Step8 : Verify Whether Option name is displayed along with the answer under the Correct answer tab.
    [Tags]    TEACHER_76    ASSIGNMENT_WRITING_VERIFY_CORRECT_ANSWER_TABS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC35
    ${StdUserID}    Get From Dictionary    ${stdDetails}    User ID
    ${StdPassword}    Get From Dictionary    ${stdDetails}    Password
    ${uniqueValue}    GetUniqueValue    QA
    ${className}    Set Variable    ${uniqueValue}Class
    ${assignmentName}    Set Variable    @{preSignUpTitleMenus}[3]
    ${activitySelectMenu}    Set Variable    Unit 3 - Understanding Odd and Even Numbers to 20
    ${activityName}    Set Variable    Page 20 - Partner Practice (2.OA.C.3)
    ${activityNme}    Create List    Understanding Odd and Even Numbers to 20
    ${textMessage}    Set Variable    QA
    ${titleList}    Create List    ${assignmentName}
    ${userStatusList}    Create List    true
    ${userIdList}    Create List    ${StdUserID}
    Comment    Login to Wizard application with Teacher credentials
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Comment    Selecting the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3394:Updated to wait and inteeract with the first row which get displayed in classes table, to deal with loading.
    Wait And Click Element    //div[@id='groupGrid']//div[@role='row'][1]//table//tr//td[1]
    Add A Class Or Group    ${className}
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    Comment    Click on Edit button
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Edit students to the class.
    Edit Students Or Titles    ${userIdList}    ${userStatusList}    User Id
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    15
    Comment    Add Students To A Class Or Group    ${className}
    Wait And Click Element    ${button.classDetails.save}
    Comment    Click on Edit button
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Edit Titles to the class.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}    15s
    Comment    Clicking on the button 'save'.
    Wait And Click Element    ${button.classDetails.save}
    Comment    Navigating to Management page
    Navigate BackTo Home Page    Management
    Comment    Navigating to NewAssignments page
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Add assignment to a student
    Add Assignment To A Student    ${className}    ${assignmentName}    ${activitySelectMenu}    ${activityName}    ${EMPTY}    1
    Close Browser
    Comment    Signout from the Teacher and relogin to Student
    ${loginStatus}    LoginToWizardApp    ${StdUserID}    ${StdPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${AssignmentsStatus}    Verify The Assignments List
    Run Keyword If    ${AssignmentsStatus}==False    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Comment    Student doassignment
    ${bstatus}    Run Keyword And Return Status    DoAssignment    ${assignmentName}    @{activityNme}[0]
    Run Keyword If    ${bstatus}!=True    Fail and Capture Screenshot    ${assignmentName} ${activityName} is not avaibable for the selected student.
    Sleep    2s
    Run Keyword And Return Status    Wait Until Element Is Visible    questionContent    5s    'InputTextControls' are not visible at Assignments page.
    Comment    Wait and click on particular option
    Wait And Click Element    ${button.studentAssignments.OptionChoiseA}
    Wait Until Element Is Visible    ${button.studentAssignments.submit}    10s
    Comment    Wait and click on save answers button
    Wait And Click Element    ${button.studentAssignments.submit}
    Wait Until Element Is Visible    solutionContentV    10s
    ${bstatus}    Wait Until Element Is Visible    //div[@id='mcSolutionHTML']//table/tbody/tr/td[1]    5s
    Run Keyword If    '${bStatus}'=='False'    Fail    The correct choice button is not displayed.
    [Teardown]    Stop Application

ATC-377 Email Support-After submitting Email Support Extra popup shown “How Can We help’.
    [Documentation]    ATC-377 Email Support-After submitting Email Support Extra popup shown “How Can We help’.
    ...
    ...    Steps:
    ...    1. Login to the wizard application as a teacher.
    ...    2. Click on "Help" button.
    ...    3. Click on sub menu "Email support" link.
    ...    4. Send the "testdata" to the subject and description fileds.
    ...    5. Click on "Attach file" and send the file path to the text filed.
    ...    6. Click on "Open" button.
    ...    7. Click on "Send" button.
    ...    8. Observe that Extra popup shown “How Can We help’.
    [Tags]    TEACHER_78    HELP_VERIFY_SUBMENU_EMAIL_SUPPORT    MEDIUM
    Comment    Pre requisite "${preStudentDetails}" should exist.
    Variable Should Exist    ${preStudentDetails}    The pre repository "${preStudentDetails}" doesn't exhists.
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    Comment    Login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Comment    Verify the Email support in the help menu
    ${bStatus}    Verify Element Visible    ${link.home.emailSupport}
    Run Keyword Unless    ${bStatus}    Click Element    ${button.home.help}
    ${subMenuSelectionStatus}    Run Keyword And Return Status    Wait And Click Element    ${link.home.emailSupport}
    Run Keyword Unless    ${subMenuSelectionStatus}    Wait And Click Element    ${button.home.help}    ${TimeOut}    Help
    Run Keyword Unless    ${subMenuSelectionStatus}    Wait And Click Element    ${link.home.emailSupport}
    Wait And Click Element    ${link.emailSupport.attachFiles}
    Wait Until Element Is Visible    ${text.emailSupport.subject}    30s
    ${testdata}    Set Variable    SDT TEST
    Input Text    ${text.emailSupport.subject}    ${testdata}
    Input Text    ${text.emailSupport.description}    ${testdata}
    Input Text    ${text.emailSupport.email}    qa4mme+tc12203508500073@gmail.com
    Click Element    ${button.support.send}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //div[@id="mojoDlg"]//span[text()='How can we help you?']    ${TimeOut}
    ${status}    Run Keyword And Return Status    Run Keyword If    ${bStatus}    Wait Until Element Is Visible    //div[@id="mojoStatusDiv"]/div[contains(text(),'Your message has been sent successfully.')]    ${TimeOut}
    [Teardown]    Stop Application

ATC 407 - Verify whether Class code information pop up is closed when clicked on any part of the pop up.
    [Documentation]    ATC 407 - Verify whether Class code information pop up is closed when clicked on any part of the pop up.
    ...    Steps:
    ...    1. Login to the wizard application as a teacher.
    ...    2. Navigate to the management page.
    ...    3. Select any class in management page.
    ...    4. Click on "classCodeHelper" for the selected class.
    ...    5. Class code information pop up is displayed.
    ...    6. Verify whether Class code information pop up is closed when clicked on any part of the pop up.
    [Tags]    TEACHER_79    MANAGEMENT_VERIFY_CLASS_CODE_INFO    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    Comment    Login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to management page.
    Navigate To Management Page
    Comment    Wait and select the iframe
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Select any class from classes table.
    Wait And Click Element    ${table.classesAndGroups}//td
    Comment    Click on "class code helper" link.
    Wait Until Element Is Visible    //a[@id='classCodeHelper']    10s
    Click On Element    //a[@id='classCodeHelper']
    Comment    Verify whether Class Code information is displayed or not.
    ${visibilityStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${header.management.classCodeInfo}    10s
    Run Keyword Unless    ${visibilityStatus}    Fail    Class Code information is not displayed.
    Comment    Verify whether class code information pop up is closed when clicked on any part of the pop up.
    ${classCodeInfo}    Run Keyword If    ${visibilityStatus}    Run Keyword And Return Status    Click On Element    ${header.management.classCodeInfo}
    ${visibilityStatus}    Run Keyword And Return Status    Run Keyword If    ${classCodeInfo}    Wait Until Element is Invisible    //div[@class="mysCloseButton"]/following-sibling::h1[contains(text(),'Class Code Information')]    20s
    Run Keyword Unless    '${visibilityStatus}'=='True'    Fail    Class code information pop up is closed when clicked on any part of the pop up.
    [Teardown]    Stop Application

ATC 331-Verify the classes displayed for adding a student.
    [Documentation]    Verify the classes displayed for adding a student.
    ...    Steps:
    ...    1.Login to the wizard application as a teacher.
    ...    2.Navigate to management page.
    ...    3.Add a group
    ...    4.Click on add user button and edit classes frame
    ...    5.Verify whether the group is not displaying in the "Available Classes" list or not.
    [Tags]    TEACHER_80    MANAGEMENT_CREATE_USER_VERIFY_EDIT_CLASSES    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserID}    Set Variable    ${preTeacherID}
    ${TeacherPWD}    Set Variable    ${preTeacherPassword}
    ${loginStatus}    LoginToWizardApp    ${TeacherUserID}    ${TeacherPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    Teacher-${TeacherUserID} logged in.
    ...    ELSE    Fail    Login failed with Teacher-${TeacherUserID}
    Navigate To Management Page
    Wait And Select Frame    iframeSchoolAdmin
    Comment    ${groupName}    Set Variable    @{preGroupList}[0]
    ${className}    Set Variable    @{preClassesList}[0]
    Wait And Click Element    ${button.users.add}
    Wait Until Element Is Visible    ${button.class.editNewUser}    ${TimeOut}
    Wait And Click Element    ${button.class.editNewUser}
    Wait Until Keyword Succeeds    ${TimeOut}    5s    Click On Element    ${header.availableClasses.name}
    Comment    Verify whether only classes are displayed in the "Available Classes" table or not
    Comment    MYS-3211 : Replaced Input Text with TypeCharacterstoTextBox to resolve synchronizing issue and an update to fix stale element reference exception.
    Comment    TypeCharactertoTextBox    listEditorSearch    ${groupName}
    Comment    ${groupStatus}    Run Keyword And Return Status    Wait Until Page Contains Element    //td[contains(@class,'column-name') and contains(text(),'${groupName}')]    10s
    Comment    Clear Text    listEditorSearch
    TypeCharactertoTextBox    listEditorSearch    ${className}
    ${classStatus}    Run Keyword And Return Status    Wait Until Page Contains Element    //td[contains(@class,'column-name') and contains(text(),'${className}')]    10s
    Run Keyword If    "${classStatus}"=="False"    Fail    Both class names and Groups names should be displayed.
    [Teardown]    Stop Application

ATC 339 -Verify whether 'Not Applicable' is present in 'Grade' while editing the User.
    [Documentation]    Verify whether 'NotAvailable' is present in 'Grade' while editing the User.
    ...    Steps:
    ...    1.Login to the wizard application as a teacher.
    ...    2.Navigate to mnagement page.
    ...    3.Click on add user button.
    ...    4.While adding user we observed that there is "not available" grade in grade section.
    ...    5.While editing a student there is no such grade as "not available".
    ...    6.This shows application inconsistent \ behaviour regarding grade level
    [Tags]    TEACHER_81    MANAGEMENT_VERIFY_GRADE_NOT_AVAILABLE    HIGH
    [Setup]
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${TeacherUserID}    Set Variable    ${preTeacherID}
    ${TeacherPWD}    Set Variable    ${preTeacherPassword}
    ${testData}    GetUniqueValue    MR
    ${userFN}    Set Variable    FN${testData}
    ${userLN}    Set Variable    LN${testData}
    ${userUID}    Set Variable    student${testData}
    ${userPWD}    Set Variable    student123pwd
    ${mandatoryList}=    Create List    ${userFN}    ${userLN}    ${userUID}    ${userPWD}
    ${loginStatus}    LoginToWizardApp    ${TeacherUserID}    ${TeacherPWD}
    Run Keyword If    ${loginStatus}    Set Test Message    Teacher-${TeacherUserID} logged in.
    ...    ELSE    Fail    Login failed with Teacher-${TeacherUserID}
    Navigate To Management Page
    Wait And Select Frame    iframeSchoolAdmin
    Wait And Click Element    newUserBtn
    Wait And Click Element    ${text.newUser.firstName}
    Input Text    ${text.newUser.firstName}    ${userFN}
    Input Text    ${text.newUser.lastName}    ${userLN}
    Input Text    ${text.newUser.userId}    ${userUID}
    Input Text    ${text.newUser.password}    ${userPWD}
    Comment    start of code to add grade to a student
    ${roleStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Run Keyword If    ${roleStatus}    Click On Element    //input[@name='newUserRoleStudent']/parent::div/following-sibling::label[contains(@for,'newUser')]
    Select DropDown Values    ${image.addStudent.gradeArrow}    ${dropdown.addStudent.GradeLevel}    Not Applicable
    Wait And Click Element    ${button.newUser.oK}    ${Delay}    ${button.newUser.oK}
    Wait Until Element Is Visible    //p[@id="alertMessage"]    ${TimeOut}
    ${alert}    Get Text    //p[@id="alertMessage"]
    ${bStatus}    String Should Contain    ${alert}    Grade level is required for students.
    Run Keyword If    ${bStatus}    Pass Execution    'Grade level is required for students.' alert displayed when 'not available' grade selected for the student.
    Run Keyword And Continue On Failure    Wait Until Element Is Visible    ${dropdown.newuserGrade.menu}    ${TimeOut}
    Wait Until Element Is Visible    ${table.users.row}//td[text()="Teacher"]    ${TimeOut}
    Wait Until Keyword Succeeds    ${TimeOut}    5s    Click On Element    ${table.users.row}//td[text()="Teacher"]
    Wait Until Keyword Succeeds    ${TimeOut}    5s    Click On Element    editUserBtn
    Wait Until Element Is Visible    ${dropdown.userGrade}    ${TimeOut}
    Click On Element    ${dropdown.userGrade}
    ${bStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.userDetails.grade}//tr[3]//td[2][text()="Not Applicable"]    ${TimeOut}
    Run Keyword Unless    ${bStatus}    fail    "Not Available" is not present in "GradeLevel" while editing the user.
    [Teardown]    Stop Application

ATC-545-MYS-993-student-Assignment material
    [Documentation]    MYS-993-student-Assignment material: Copyright to be moved to 2015
    ...
    ...
    ...    Step 1 : Login as a teacher
    ...
    ...    Step 2 : Add a group ,student,titles from management page.
    ...
    ...    Step 3: Assign new assignment to the student to a student.
    ...
    ...    Step 4 : Sign out and relogin as a student.
    ...
    ...    Step 5 : Statrt assignment and verify Assignment material: Copyright to be moved to 2015 or not.
    [Tags]    TEACHER_82    ASSIGNMENTS_VERIFY_COPYRIGHT_LABEL    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${uniqueVal}    GetUniqueValue
    ${studentUID}    Set Variable    ${uniqueVal}
    ${studentPWD}    Set Variable    Password${uniqueVal}
    ${AssignmentNameTitle}    Set Variable    @{preSignUpTitleMenus}[0]
    ${activitySelectMenu}    Set Variable    @{preActivityNames}[0]
    ${activityName}    Set Variable    @{preActivityNames}[0]
    ${titleList}    Create List    @{preSignUpTitleMenus}[0]
    ${statusList}    Create List    True
    ${studentDetails}    Create Dictionary    First Name    FN${uniqueVal}    Last Name    LN${uniqueVal}    User Name
    ...    ${uniqueVal}    Password    Password${uniqueVal}    Role    \    Middle Name
    ...    ${EMPTY}    Grade Level    5
    ${classList}    Create List    Class${uniqueVal}
    Comment    Login with Valid Student credentials.
    ${loginStatus}=    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    MYS-3394:Updated to wait and inteeract with the first row which get displayed in classes table, to deal with loading.
    Wait And Click Element    //div[@id='groupGrid']//div[@role='row'][1]//table//tr//td[1]
    Comment    Add a group frommanagement page
    Add A Class Or Group    Class${uniqueVal}    \    Created by QA    Class
    Wait And Click Element    ${button.classDetail.edit}
    Edit Students Or Titles    ${titleList}    ${statusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    AddClassToStudent    ${studentDetails}    ${classList}
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Add assignment to a group
    Add Assignment To A Student    Class${uniqueVal}    ${AssignmentNameTitle}    ${activitySelectMenu}    ${activityName}    ${studentUID}    1
    ...    Class    False
    Comment    Signout and relogin as a student
    ${loginStatus}    Signout And Relogin    ${studentUID}    ${studentPWD}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${AssignmentsListStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.StudentHome.AssignmentsRow}    ${Delay}
    ${NoAssignStatus}    Verify Element Visible    ${label.StudentHome.No Assignments}
    ${AssignStatus}    Evaluate    ${AssignmentsListStatus}==True and ${NoAssignStatus}==False
    Run Keyword If    ${AssignStatus}==True    Fail    For the above logged in Student User no assignments are available to verify the operations.
    Wait And Click Element    //div[@class='adminButtonGreen']
    Comment    verify whether the copyright to be moved to 2015
    Wait Until Element is Invisible    ${common.homepage.Loading}
    ${assignmentPageStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.studentassignment.footerCopyright}    ${TimeOut}
    Run Keyword If    "${assignmentPageStatus}"=="False"    Fail    Writting assignment page is not open
    Comment    Wait Until Element Is Visible    ${common.studentassignment.footerCopyright}
    Comment    ${copyRightStatus}    Get Text    ${common.studentassignment.footerCopyright}
    Comment    String Should Contain    ${copyRightStatus}    Copyright © 2015
    ${copyRightStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.studentassignment.footerCopyright}    ${TimeOut}    Copyright is not visible.
    ${copyRighttext}    Run Keyword If    "${copyRightStatus}"!="False"    Get Text    ${common.studentassignment.footerCopyright}
    Run Keyword And Continue On Failure    Should Be Equal    ${copyRighttext}    ILLEGAL TO COPY
    [Teardown]    Stop Application

ATC-546-MYS-984 - Verify Resource Link added into Help Dropdown
    [Documentation]    MYS-984-Resource Link added into Help Dropdown
    ...
    ...    Step 1 : Login as teacher.
    ...
    ...    Step 2 : click on help drop down and select resources link.
    ...
    ...    Step 3 : verify whether the resources link is properly working or not.
    [Tags]    TEACHER_83    HELP_VERIFY_SUBMENU_RESOURCES    MEDIUM
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${Login_Status}=    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${Login_Status}==False    Fail    The user is not able to login with valid credentials.
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enhancementAlert}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.window.Enhancements}    ${TimeOut}
    Comment    Run Keyword If    ${enhancementAlert}    Wait And Click Element    ${common.windowEnhancements.alertOkBtn}
    Focus    ${button.home.help}
    Wait And Click Element    ${button.home.help}
    Comment    MYS-3515 : Updated script to click on Help menu and verify for its submenu item Resources and perform the action if the item is visible else repeat the action in loop.
    : FOR    ${itr}    IN RANGE    0    15
    \    ${isResource_link_visible}    Wait For Element Visible    ${link.home.Resources}    5s
    \    ${resource_click_status}    Run Keyword If    ${isResource_link_visible}    Run Keyword And Return Status    Click On Element    ${link.home.Resources}
    \    Exit For Loop If    '${resource_click_status}'=='True'
    \    Click On Element    ${button.home.help}
    Sleep    20s
    @{windowNames}=    Get Window Titles
    Select Window By Title    @{windowNames}[1]
    ${windowNames}=    Set Variable    @{windowNames}
    Comment    Select the resources window when select on resources.
    ${bStatus}=    Select the desired window    ${windowNames}    Mentoring Minds
    Run Keyword If    ${bStatus}==False    Fail    The Mentoring Minds Window is not able to open.
    [Teardown]    Stop Application

ATC-370-MYS-800-Reports-Average score of student for assignments in standard mastery report is incorrect
    [Documentation]    ACMYS-800-Reports-Average score of student for assignments in standard mastery report is incorrect.
    ...
    ...    Step 1 : Login as a Teacher.
    ...
    ...    Step 2 : Add a class from management
    [Tags]    TEACHER_84    REPORTS_VALIDATE_SCORE_CALCULATIONS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created / "Student assignment should have done upto mnimum extent to calculate reports scores"
    ${className}    Set Variable    @{preClassesList}[0]
    ${SubjectName}    Set Variable    @{preSignUpTitleMenus}[0]
    ${stdDetails}    Get Student Details    ${preStudentDetails}    ATC35
    Log Dictionary    ${stdDetails}
    ${StdUserFName}    Get From Dictionary    ${stdDetails}    First Name
    ${StdLName}    Get From Dictionary    ${stdDetails}    Last Name
    ${studentName}    Set Variable    ${StdLName},${SPACE}${StdUserFName}
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    "${loginStatus}"=="False"    Fail    The user is not able to login with these ctredentials-'${preTeacherID}' and '${preTeacherPassword}'.
    Comment    Navigate To Report Filters Page
    Comment    MYs-3394 : Updated script to generate report for the assignment in the given range of submission date, to overcome the \ day change issue.
    ${from_date}    Get Future Or Past Date From Now    -1
    ${to_date}    Get Future Or Past Date From Now
    Get Report for A Class or Group    ${preReportType1}    Classes    ${className}    ${SubjectName}    \    ${EMPTY}
    ...    ${from_date}    ${to_date}
    Comment    Navigate To Reports Page
    Wait And Select Frame    iframeReport
    Comment    MYS-3394 : Updated with wait for element visible keyword.
    ${reportsPageStatus}    Wait For Element Visible    ${label.reports.FilterHeader}    ${Delay}
    Comment    MYS-3394 : Updated with wait for element visible keyword.
    Comment    MYS-3394 : Updated with wait for element visible keyword.
    ${rEMStatus}    Run Keyword Unless    ${reportsPageStatus}    Wait For Element Visible    ${label.reports.reportEmptyMessage}
    ${reportEmptyMessage}    Run Keyword If    '${rEMStatus}'=='True'    Get Text    ${label.reports.reportEmptyMessage}
    Run Keyword If    '${rEMStatus}'=='True'    Fail    ${reportEmptyMessage}
    Comment    MYS-3394 : Updated with wait for element visible keyword.
    Wait For Element Visible    ${label.reports.ReportTypeHeader}    30s
    ${reportbanner}    Get Text    ${label.reports.ReportTypeHeader}
    Run Keyword And Continue On Failure    Should Contain    ${reportbanner}    ${schoolName}
    Run Keyword And Continue On Failure    Should Contain    ${reportbanner}    ${preReportType1}
    Comment    MYS-3394 : Updated with wait for element visible keyword.
    ${bStatus1}    Wait For Element Visible    ${label.reports.ClassTreeExpand}
    Run Keyword If    ${bStatus1}    Wait And Click Element    ${label.reports.ClassTreeExpand}
    ${repClassName}    Get Text    //div[@id='filters-container']/div[2]
    ${repSujName}    Get Text    ${label.reports.Subject}
    ${studentCompleteNames}    Get Matching Xpath Values    //div[contains(@class,'gridxRow') and @role='row']    //table[@class='gridxRowTable']/tbody/tr[1]/td[1]//div[@class='gridxTreeExpandoContent gridxCellContent']
    Log    ${studentCompleteNames}
    Run Keyword And Continue On Failure    Should Contain    ${repClassName}    ${className}    The class name of the assignment ${className} is not matching with reports class name ${repClassName}
    Run Keyword And Continue On Failure    Should Contain    ${repSujName}    ${SubjectName}    The subject name of the assignment ${SubjectName} is not matching with reports subject name ${repSujName}
    ${depthValues}    Create List    4    8    12    15    19
    ...    23    27    29
    Comment    ${IndexDepthWithTipSubText}    Create Dictionary    4    Reading: Literature: Key Ideas and Details    8    Reading: Literature: Craft and Structure
    ...    12    Reading: Literature: Integration of Knowledge and Ideas    15    Reading: Informational Text: Key Ideas and Details    19    Reading: Informational Text: Craft and Structure
    ...    23    Reading: Informational Text: Integration of Knowledge and Ideas    27    Reading: Foundational Skills: Phonics and Word Recognition    29    Critical Thinking
    ${IndexDepthWithTipSubText}    Create Dictionary
    ${lengthOfList}    Get Length Of List    ${depthValues}
    ${ItemNames}    Get Matching Xpath Values    //div[@id='reportTreePanel']//div[@class='gridxHeaderRowInner']//table[@role='presentation']//tr//following-sibling::td[contains(@class,'gridxCell \ field-rtGoal_1')]
    Log List    ${ItemNames}
    : FOR    ${itr}    IN RANGE    0    ${lengthOfList}
    \    Set To Dictionary    ${IndexDepthWithTipSubText}    @{depthValues}[${itr}]    @{ItemNames}[${itr}]
    Log Dictionary    ${IndexDepthWithTipSubText}
    ${finalvalue}    Set Variable    ${EMPTY}
    ${numarator}    Set Variable    0
    ${denominaror}    Set Variable    0
    : FOR    ${item}    IN    @{depthValues}
    \    ${dictValue}    Get From Dictionary    ${IndexDepthWithTipSubText}    ${item}
    \    ${tooltipmsg}    Get Tooltip Message Of Score Indicators In Reports    //table[@class='gridxRowTable']//tbody//tr//td[${item}]//div    ${dictValue}
    \    ${numerator_and_denominator}    Convert Reports Tooltip Fraction Values Into Floating Value    ${tooltipmsg}
    \    ${numarator}    Evaluate    @{numerator_and_denominator}[0]+${numarator}
    \    ${denominaror}    Evaluate    @{numerator_and_denominator}[1]+${denominaror}
    ${avgScoreOfItems}    Evaluate    ${numarator}/${denominaror}*100
    ${classLevelAvgTooltipMsg}    Get Tooltip Message Of Score Indicators In Reports    //table[@class='gridxRowTable']//tbody//tr//td[3]//div    ${SubjectName}
    ${numerator_and_denominator_Overall}    Convert Reports Tooltip Fraction Values Into Floating Value    ${classLevelAvgTooltipMsg}
    ${classLevelAvg}    Evaluate    @{numerator_and_denominator_Overall}[0]/@{numerator_and_denominator_Overall}[1]*100
    Should Be Equal As Integers    ${avgScoreOfItems}    ${classLevelAvg}    Overall class average score is mismatching with avrage of individual items average.
    Should Be Equal As Integers    ${avgScoreOfItems}    ${classLevelAvg}    Overall class average score is mismatching with avrage of individual items average.
    [Teardown]    Stop Application

ATC-553-MYS-1519 :Verifying "Not Applicable" option in Grade dropdown while creating students from Teacher role.
    [Documentation]    MYS-1519 :Verifying \ "Not Available" option in Grade dropdown while creating students from Teacher role.
    ...
    ...
    ...
    ...    Steps:
    ...    1. Open browser to login page.
    ...    2. Login with valid teacher credentials.
    ...    3. Navigate to management page.
    ...    4. Click on Add button of users.
    ...    5. Click on Grade level drop down arrow
    ...    6. Verify "Not Available" is present or not.
    [Tags]    TEACHER_85    MANAGEMENT_VERIFY_GRADE_NOT_AVAILABLE    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${userId}    Set Variable    ${preTeacherID}
    ${password}    Set Variable    ${preTeacherPassword}
    Comment    Login with Teacher credentials.
    Comment    ${userId}    Set Variable    qa4mme+tass@gmail.com
    Comment    ${password}    Set Variable    test1234
    Open Browser    ${WizardURL}    ${BROWSER}
    Sleep    5s
    ${loginStatus}    Enter Login Details    ${userId}    ${password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Navigate to Management page.
    Navigate To Management Page
    Sleep    30s
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Click Element    ${button.users.add}
    Wait And Click Element    ${image.addStudent.gradeArrow}
    ${xpathCount}    Get Matching Xpath Count    ${dropdown.addStudent.GradeLevel}
    Comment    Creating list
    ${matching values list}    Create List
    : FOR    ${gradeValueExists}    IN RANGE    0    ${xpathCount}
    \    ${bStatus}    Verify Element Visible    ${dropdown.addstudent.gradevalues}//td[contains(@id,'dijit_MenuItem_${gradeValueExists}_text')]
    \    Run Keyword If    ${bStatus}!=True    Click On Element    ${image.addStudent.gradeArrow}
    \    CommonLibrary.Mouse Move    ${dropdown.addstudent.gradevalues}//td[contains(@id,'dijit_MenuItem_${gradeValueExists}_text')]
    \    Focus    ${dropdown.addstudent.gradevalues}//td[contains(@id,'dijit_MenuItem_${gradeValueExists}_text')]
    \    ${gradeValue}    Get Text    ${dropdown.addstudent.gradevalues}//td[contains(@id,'dijit_MenuItem_${gradeValueExists}_text')]
    \    ${length}    Get Length    ${gradeValue}
    \    ${gradeValue}    Run Keyword If    '${length}' == '0'    Get Text    ${dropdown.addstudent.gradevalues}//td[contains(@id,'dijit_MenuItem_${gradeValueExists}_text')]
    \    ...    ELSE    Set Variable    ${gradeValue}
    \    Comment    Adding values to list
    \    Append To List    ${matching values list}    ${gradeValue}
    Log List    ${matching values list}
    List Should Contain Value    ${matching values list}    Not Applicable    "Not Applicable" is appearing in Grade drop down in new user window of Teacher management.
    [Teardown]    Stop Application

ATC-555-MYS-1493- Teacher is able to review after colleting the assignments.
    [Documentation]    MYS-1493- Teacher- Verify whether assignments are visible under review state in grade assignments page after colleting the assignments from manage assignments.
    ...
    ...    Step1 : Login as a teacher
    ...
    ...    Step2 : Add a class titles and students from management.
    ...
    ...    Step3 : Add assignments to the student from new assignments page.
    ...
    ...    Step4 : Collect assignments from the manage assignments page.
    ...
    ...    Step5 : \ Verify whether assignments are visible under review state in grade assignments page after colleting the \ \ \ \ \ \ \ \ \ \ \ \ \ \ assignments from manage assignments page.Fail if not visible under "Review" state.
    [Tags]    TEACHER_87    GRADE_ASSIGNMENTS_VERIFY_REVIEW_AFTER_GRADING    CRITICAL
    ${titleList}    Create List    CCS Reading Assessments Level 3
    ${userStatusList}    Create List    true
    ${AssignmentNameTitle}=    Set Variable    @{preSignUpTitleMenus}[0]
    ${AssignmentNameSubTitle}=    Create List    01-02 Form A: Part 2 - Performance Tasks 1 and 2    02-02 Form B: Part2 - Performance Tasks 1 and 2    03-02 Form C: Part 2 - Performance Tasks 1 and 2
    ${uniqueVal}    GetUniqueValue
    ${studentdetails}    Create Dictionary    User Name    ${uniqueVal}    Password    ${uniqueVal}pwd    First Name
    ...    ${uniqueVal}_Fn    Middle Name    ${uniqueVal}_MN    Last Name    ChangeThis_Ln    Grade Level
    ...    2
    ${studentFN}    Get From Dictionary    ${studentdetails}    First Name
    ${studentLName}    Get From Dictionary    ${studentdetails}    Last Name
    ${studentMName}    Get From Dictionary    ${studentdetails}    Middle Name
    ${StdUserID}    Get From Dictionary    ${studentdetails}    User Name
    ${StdPassword}    Get From Dictionary    ${studentdetails}    Password
    ${Studentname}=    Set Variable    ${studentFN}${SPACE}${studentMName}${SPACE}${studentLName}
    ${ClassList}    Create List    Class${uniqueVal}
    ${className}    Set Variable    Class${uniqueVal}
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add A Class Or Group    ${className}    \    Created by QA to test Review button.
    Comment    Select the Created Class name record.
    ${rowNumber}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${rowNumber}!=0    Wait Until Element Is Visible    ${button.classDetail.edit}    ${Delay}
    ...    ELSE    Set Test Message    Logged in user does not have any class
    Comment    Click on Edit button
    Wait And Click Element    ${button.classDetail.edit}
    Comment    Edit Titles to the class.
    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    Wait Until Element is Invisible    ${button.editStudentOrEditClass.save}
    Comment    Clicking on the button 'save'.
    Wait And Click Element    ${button.classDetails.save}
    AddClassToStudent    ${studentdetails}    ${ClassList}
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Add assignment to the student from new assignments page.
    ${kwStatus}    Add Assignment To A Student    ${className}    ${AssignmentNameTitle}    ${AssignmentNameTitle}    ${AssignmentNameSubTitle}
    Run Keyword And Continue On Failure    Run Keyword If    ${kwStatus}    Set Test Message    Assignment is Handed out.
    ...    ELSE    Fail    Assignment is not Handed out.
    Navigate BackTo Home Page    New Assignments
    Navigate To Assignment Page
    Navigate To Manage Assignments Page
    Comment    Selecting the manage Assignments frmae.
    Wait And Select Frame    ${header.assignments.assignmentManage}
    Comment    viewing the Assignments of the ${ClassName}    ${Studentname}    ${AssignmentNameTitle}.
    View Assignments For the selected student of a Class    ${className}    ${Studentname}    ${AssignmentNameTitle}
    Wait Until Element is Invisible    ${common.spinner.loadingIcon}
    Comment    Collecting the Assignments of the ${AssignmentNameTitle}    ${AssignmentNameSubTitle}    ${Studentname}.
    Collect Student Assignment From Assignments    ${AssignmentNameTitle}    01-02 Form A: Part 2 - Performance Tasks 1 and 2    ${Studentname}
    Wait Until Element is Invisible    ${common.manageAssignments.collect.Grading unanswered questions...}
    Collect Student Assignment From Assignments    ${AssignmentNameTitle}    02-02 Form B: Part2 - Performance Tasks 1 and 2    ${Studentname}
    Wait Until Element is Invisible    ${common.manageAssignments.collect.Grading unanswered questions...}
    Collect Student Assignment From Assignments    ${AssignmentNameTitle}    03-02 Form C: Part 2 - Performance Tasks 1 and 2    ${Studentname}
    Wait Until Element is Invisible    ${common.manageAssignments.collect.Grading unanswered questions...}
    Navigate BackTo Home Page    Manage Assignments
    Select Graded Assignments
    Navigate To Show Graded Assignments
    Table Column Values Sorting    ${table.showgradedassignments.gradeAssmtsListGrid}    Graded
    Comment    Verify wether Teacher is \ able to review after collecting the assignments.
    : FOR    ${eachActivity}    IN    @{AssignmentNameSubTitle}
    \    ${elementStatus}    Run Keyword And Return Status    CommonLibrary.Mouse Move    ${table.showgradedassignments.gradeAssmtsListGrid}//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Review']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${eachActivity}')]
    \    Run Keyword Unless    ${elementStatus}    CommonLibrary.Mouse Move    ${table.showgradedassignments.gradeAssmtsListGrid}//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Review']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${eachActivity}')]
    \    ${reviewStatus}    Verify Element Visible    ${table.showgradedassignments.gradeAssmtsListGrid}//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Review']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${eachActivity}')]
    \    Run Keyword Unless    ${reviewStatus}    Teacher is not able to review after collecting the assignments.
    [Teardown]    Stop Application

ATC551-MYS-1471 :Verify Alert message when entering invalid zip code while teacher registration process.
    [Documentation]    MYS-1471 :Verify Alert message displayed or not when entering invalid zip code in teacher registration process.
    ...
    ...    Steps:
    ...
    ...    1. Open browser to login page.
    ...    2. Click on New User and select Teacher or Admin role.
    ...    3. Enter invalid School's Zip code.
    ...    4. Verify alert is present or not.
    [Tags]    TEACHER_88    REGISTRATION_VERIFY_INVALID_ZIP_CODE_ALERT    HIGH
    OpenBrowserToLoginPage
    Wait And Click Element    ${button.login.newUser}
    Sleep    2s
    ${schoolZipCode}    Set Variable    80076
    Comment    Selecting Teacher role from new user
    Select Role in Create Account    ${teacherRole}
    Comment    enter the same registration code and wait for the error tool tip
    ${teacherRegCode}    Get Teacher Registration Code    ${CODES_URL}
    Enter Text In Text Field    ${text.teacherSignUp.registrationCode}    ${teacherRegCode}
    Wait Until Element Is Visible    ${button.signUp.next}    ${Delay}
    Click On Element    ${button.signUp.next}
    Comment    Entering invalid \ school's zip code
    Wait Until Element Is Visible    ${text.TeacherSignup.Zip}    ${Delay}
    TypeCharactertoTextBox    ${text.TeacherSignup.Zip}    ${schoolZipCode}
    Comment    Verifying alert message for invalid school's zip code
    ${alertStatus}    Wait Until Element Is Visible    ${label.signup.ZipcodeAlert}    ${TimeOut}
    ${alertmsg}    Run Keyword If    ${alertStatus}    Get Text    ${label.signup.ZipcodeAlert}/div/div
    Run Keyword If    "${alertStatus}"=="False"    Fail    Alert is not displayed when entered invalid Zipcode in teacher registration process.
    [Teardown]    Stop Application

ATC-552-MYS-551-Verify wether the teachers view under reports it should say "needs to be graded" not grade or "Needs grading".
    [Documentation]    551-Verify whether the teachers view under reports it should say "needs to be graded" not grade or "Needs grading".
    ...
    ...    Step 1 : Login as a teacher
    ...
    ...    Step 2 \ : Navigate to reports filters page.
    ...
    ...    Step 3 : Select the report type 1 (Standards Mastery Report).
    ...
    ...    Step 4 : Select the class from drop down.
    ...
    ...    Step 5 : Select the subject and activity from the drop down list and click on generate report button.
    ...
    ...    Step 6 : Verify whether the teachers view under reports it should say "needs to be graded" not grade or "Needs grading".
    [Tags]    TEACHER_90    REPORTS_VERIFY_TEACHER_GRADED_ITEMS    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No teacher data is avaialble.
    ${className}    Get From Dictionary    ${AssignmentDetails}    Class Name
    ${reportType}    Set Variable    ${preReportType1}
    ${SubjectName}    Get From Dictionary    ${AssignmentDetails}    Subject Name
    ${AssignmentNameSubTitle}=    Get From Dictionary    ${AssignmentDetails}    Activity
    Comment    Login with Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    ${fromdate}    Get Future Or Past Date From Now    -1
    ${todate}    Get Future Or Past Date From Now
    Get Report for A Class or Group    ${reportType}    Classes    ${className}    ${SubjectName}    \    ${EMPTY}
    ...    ${fromdate}    ${todate}
    Comment    Selecting the report frame.
    Wait And Select Frame    ${header.report.reportFrame}
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    MYS-3329:Replaced with wait for element visible keyword and also updating the waiting time to 4m.
    ${status}    Wait For Element Visible    ${label.reports.Subject}    4m
    Run Keyword If    '${status}'!='True'    Fail    The Standard Mastery Report is not displayed.
    Comment    Verifing on the teachers view under reports it should say "needs to be graded" or "Needs grading" is visble or not.
    ${needsToGradingItemStatus}    Verify Element Visible    ${label.reportType1.needGrading}
    Run Keyword If    "${needsToGradingItemStatus}"=="False"    Fail    Needs to grading item is not visible in Standards Mastery Report page.
    ${needsToGradingStatus}    Get Text    ${label.reportType1.needGrading}
    ${bStatus1}    String Should Contain    ${needsToGradingStatus}    Needs Grading
    ${bStatus2}    String Should Contain    ${needsToGradingStatus}    Needs to be Graded.
    Run Keyword If    "${bStatus1}"=="False" and "${bStatus2}"=="False"    Fail    "Needs Grading" or "Need to be Graded" are not visible in standards mastery report page.
    [Teardown]    Stop Application

ATC-437-Authorization alert display's when Teacher edit's class details
    [Documentation]    ATC-435-Teacher-
    ...
    ...    Step1 : Login as a Teacher with valid credentials.
    ...
    ...    Step2 : Add two classes from management page.
    ...
    ...    Step3 : Select classA edit group discription and with out saving classA,select ClassB.
    ...
    ...    Step4 : "Verification of Authorization to use Seats" alert message should be displayed then click on "Proceed button" edited group discriptin message should be saved.
    ...
    ...    Step5 : Again select ClassA edit the group discription field and with out saving classA,select ClassB.
    ...
    ...    Step6 : "Verification of Authorization to use Seats" alert message should be displayed then click on"Cancel" button automatically it should be select classB.
    ...
    ...    Step7 : Again select ClassA, click on edit button and click on edit titles button.
    ...
    ...    Step8 : Select one title,click on save button then "Verification of Authorization to use Seats" alert message should be displayed then click on "Proceed button" the selected title should be saved.
    ...
    ...    Step9 : Again click on edit titles button and select one more title then click on save button.
    ...
    ...    Step10 : "Verification of Authorization to use Seats" alert message should be displayed then click on"Cancel" button then the selected title should not be saved.
    [Tags]    TEACHER_91    MANAGEMENT_VERIFY_CLASS_EDIT_AUTHORIZATION_ALERT    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    ${teacherUID}    Set Variable    ${preTeacherID}
    ${teacherPwd}    Set Variable    ${preTeacherPassword}
    ${assignmentTitle1}    Set Variable    CCS Math Assessments Level 2
    ${assignmentTitle2}    Set Variable    CCS Math Assessments Level 4
    ${titleList}    Create List    ${assignmentTitle1}    ${assignmentTitle2}
    ${userStatusList}    Create List    true
    comment    Login to wizard application with district admin credentials.
    ${loginStatus}    LoginToWizardApp    ${teacherUID}    ${teacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${uniqueValue}    GetUniqueValue    da
    ${studentDetails}    Create Dictionary    First Name    FN${uniqueValue}    Last Name    LN${uniqueValue}    User Name
    ...    ${uniqueValue}    Password    Password${uniqueValue}    Role    \    Middle Name
    ...    ${EMPTY}    Grade Level    5
    ${classesList}    Create List    Class${uniqueValue}A    Class${uniqueValue}B
    Comment    Adding two classes from management page.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Add A Class Or Group    Class${uniqueValue}A
    Add A Class Or Group    Class${uniqueValue}B
    Comment    Select classA and edit the group discription.
    ${recordStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}A
    Run Keyword If    ${recordStatus}    Wait And Click Element    ${button.classDetail.edit}
    Enter Text In Text Field    ${text.classDetails.description}    created by QA
    Comment    Verifying whether with out saving classA then select classB record then alert is displayed or not.
    ${selectClass2RecordStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${selectClass2RecordStatus}    Fail    Another class record is not selected.
    ${promptMsgStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}
    Run Keyword And Continue On Failure    Run Keyword Unless    ${promptMsgStatus}    Fail    Prompt message is not displayed while edit one class and without saving and select the another class.
    Comment    Verifying whether click on proceed button group discription is properly saved or not.
    Comment    MYS-3105 : Changed locator as per application changes.
    ${ProceedStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.management.OK}
    Sleep    2s
    ${DiscriptionMSGStatus}    Run Keyword If    ${ProceedStatus}    Get Value    ${text.classDetails.description}
    ${DiscriptionMSGStatus}    String Should Contain    ${DiscriptionMSGStatus}    created by QA
    Run Keyword And Continue On Failure    Run Keyword Unless    ${DiscriptionMSGStatus}    Fail    After click on the proceed the edited text in discription text field is not saved properly.
    Comment    Click on edit button
    Wait And Click Element    ${button.classDetail.edit}
    Press Back Space Key    ${text.classDetails.description}
    Comment    Enter text into group discription field.
    Enter Text In Text Field    ${text.classDetails.description}    Modified SDT TEST
    Comment    Verifying whether with out saving classA then select classB record then alert is displayed or not.
    ${selectClass2RecordStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.classesAndGroups}    Name    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${selectClass2RecordStatus}    Fail    Another class record is not selected.
    Get Text    ${label.management.Name}
    ${promptMsgStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.deleteClassOrGroup.promptMsg}
    Run Keyword And Continue On Failure    Run Keyword Unless    ${promptMsgStatus}    Fail    Prompt message is not displayed while edit one class and without saving and select the another class.
    Comment    Verifying whether click on cancel button,class name will change or not.
    ${cancelStatus}    Run Keyword And Return Status    Wait And Click Element    ${button.management.PromptBtnNo}
    ${classStatus}    Run Keyword If    ${cancelStatus}    Get Value    ${text.classDetails.name}
    ${ClassNameStatus}    String Should Contain    ${classStatus}    Class${uniqueValue}B
    Run Keyword And Continue On Failure    Run Keyword Unless    ${ClassNameStatus}    Fail    After click on the cancel button the class should be changed.
    Comment    Verifying whether when titles are edit and save then prompt message is displayed or not.
    Wait And Click Element    ${button.classDetail.edit}
    Wait And Click Element    ${button.classDetails.editTitles}
    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Click On Element    //td[text()='${assignmentTitle1}']
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Comment    Verifying whether click on proceed button titles are saved properly or not.
    ${seatsAuthorizationAlert}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.Proceed}    10s    Specified element is not visible in given time.
    Run Keyword If    ${seatsAuthorizationAlert}    Wait And Click Element    ${button.management.Proceed}
    Wait Until Element Is Visible    ${button.classDetails.editTitles}    ${TimeOut}
    Sleep    2s
    Comment    MYS-3211 : Updated with wait for element visible to wait until the edited tites save take effect.
    ${titlesList}    Wait For Element Visible    //div[text()='${assignmentTitle1}']
    Comment    Verifying whether when titles are edit and save then prompt message is displayed or not.
    Run Keyword And Continue On Failure    Run Keyword If    ${titlesList}    Wait And Click Element    ${button.classDetails.editTitles}
    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${Delay}
    Click On Element    //td[text()='${assignmentTitle2}']
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Comment    Verifying whether click on cancel button titles are saved or not..
    ${seatsAuthorizationAlert}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.Proceed}    10s
    Run Keyword If    ${seatsAuthorizationAlert}    Wait And Click Element    ${button.management.PromptBtnNo}
    ${titlesList}    Verify Element Visible    //div[text()='${assignmentTitle2}']
    Run Keyword If    ${titlesList}    Fail    After clicking on cancel button titles are added.
    [Teardown]    Stop Application

ATC 393 - Teacher - Exported students list shows a gender value when none was specified.
    [Documentation]    Verifying the exported users file values whether gender column values conflicting.
    ...
    ...    1.Login as teacher.
    ...
    ...    2.Navigate to management page.
    ...
    ...    3.Add a class and add student to that class.
    ...
    ...    4.Export the specified student of that class andf verify the Gender column value.
    ...
    ...    5.Fail if Gender column contains M / F values in file,where in application no where the gender field is specified while adding the user.
    [Tags]    TEACHER_92    IMPORT_AND_MANAGEMENT_VERIFY_GENDER_ON_IMPORT_WITH_NONE    HIGH
    Run Keyword If    ${preScriptStatus}!=True    Fail    Teacher prerequisite has not been created.
    ${uniqueVal}    Get Unique Id
    ${className}    Set Variable    ClassGender_${uniqueVal}
    ${stdUID}    Set Variable    AAAStd_${uniqueVal}_UID
    ${stdPWD}    Set Variable    ${uniqueVal}PWD
    ${stdFN}    Set Variable    AAAStd_${uniqueVal}_FN
    ${stdLN}    Set Variable    AAAStd_${uniqueVal}_LN
    ${stdMN}    Set Variable    AAAStd_${uniqueVal}_MN
    ${stdGrde}    Set Variable    3
    ${studentDetails}    Create Dictionary    User Name    ${stdUID}    Password    ${stdPWD}    First Name
    ...    ${stdFN}    Last Name    ${stdLN}    Middle Name    ${stdMN}    Grade Level
    ...    ${stdGrde}
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    '${loginStatus}'=='False'    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Adding a class from management.
    ${classStatus}    Run Keyword And Return Status    Add A Class Or Group    ${className}    \    Class to verify gender in export file.
    Run Keyword If    ${classStatus}!=True    Fail    Adding class from management got failed.
    Comment    Adding the created class to Student from management.
    ${classesList}    Create List    ${className}
    ${classAddToStdStstus}    Run Keyword And Return Status    AddClassToStudent    ${studentDetails}    ${classesList}
    Run Keyword If    ${classAddToStdStstus}!=True    Fail    Adding Classes to the perticuler student got failed.
    Comment    Exporting the users(Student).
    Wait And Click Element    ${button.userDetails.ExportAndprint}    ${TimeOut}
    Comment    MYS-3879 : Updated test scripts to reslove the Time stamp issue. Here For loop will used to fix is to run the key part of the test a second time if the first time through the loop fails. Since Midnight cannot appear again, the second loop must be successful
    : FOR    ${iCounter}    IN RANGE    1    3
    \    ${cDate}    Get Time
    \    ${cDate}    Split String    ${cDate}
    \    ${cDate}    Set Variable    @{cDate}[0]
    \    ${prefixFileName}    Set Variable    Users_${cDate}
    \    ${fileDir}    Get Default Download Path
    \    ${FilepathStatus}    Remove Files with PrefixFileName    ${fileDir}    ${prefixFileName}
    \    Run Keyword If    ${FilepathStatus}    Remove File    ${fileDir}${prefixFileName}
    \    ${usersList}    Create List    ${stdUID}
    \    ${lengthOFList}    OperatingSystem.Count Files In Directory    ${fileDir}
    \    Export or Print All Users Data    export    ${className}    ${usersList}
    \    Sleep    ${TimeOut}
    \    Save Exported File    ${fileDir}    ${lengthOFList}
    \    ${expFileName}    Exported File with PrefixFileName    ${fileDir}    ${prefixFileName}
    \    Sleep    10s
    \    Run Keyword If    '${expFileName}'!='${EMPTY}'    Exit For Loop
    Run Keyword If    '${expFileName}'=='${EMPTY}'    Fail    File not downloaded
    Comment    Reading the Gender column values of exportd students file.
    ${list}    Get Csv File Column Values Into List By Columnindex    ${expFileName}    6
    ${list1}    Remove From List    ${list}    0
    Log    ${list}
    ${listLength}    Get Length    ${list}
    @{exportGenderColValues}    Set Variable    M    F
    Comment    Verifying the Gender column valus containg any values(Male or Female).Failing if contains any default value.
    : FOR    ${iterate}    IN RANGE    0    ${listLength}
    \    ${valueMatchStatus}    Evaluate    "@{list}[${iterate}]" !="@{exportGenderColValues}[0]" and "@{list}[${iterate}]" !="@{exportGenderColValues}[1]"
    \    Run Keyword If    "${valueMatchStatus}"!="True" and "@{list}[${iterate}]" !="${EMPTY}"    Fail    The Exported Students file contains default gender value as "@{list}[${iterate}]" where no such gender field in application while adding user.
    [Teardown]    Stop Application

ATC-441-Teacher-Assign assignment to multiple class
    [Documentation]    Teacher-Assign assignment to multiple class.
    ...
    ...    Step1 : Login as a Teacher with valid credentials.
    ...
    ...    Step2 : Add classes,titles and students from mangement page.
    ...
    ...    Step3 : Assign assignment for multiple classes from new assignments page.
    ...
    ...    Step4 : Signout and relogin as a students and verify whether the assignments are displyed or not.
    ...
    ...    Step5 : Assignments should be displayed in student home page.
    [Tags]    TEACHER_93    NEW_ASSIGNMENTS_VERIFY_HANDOUT_ASSIGMENT_FOR_MULTIPLE_CLASSES    HIGH
    ${uniqueVal}    GetUniqueValue    user
    ${className1}    Set Variable    class${uniqueVal}A
    ${className2}    Set Variable    class${uniqueVal}B
    ${classesList1}    Create List    ${className1}
    ${classesList2}    Create List    ${className2}
    ${classesList}    Create List    ${className1}    ${className2}
    ${classes2Dlist}    Create List    ${classesList1}    ${classesList2}
    ${studentdetails1}    Create Dictionary    User Name    STD1${uniqueVal}    Password    test012345    First Name
    ...    STD1${uniqueVal}_Fn    Middle Name    STD1${uniqueVal}_MN    Last Name    ChangeThis_Ln    Grade Level
    ...    2
    ${studentFN1}    Get From Dictionary    ${studentdetails1}    First Name
    ${StdUserID1}    Get From Dictionary    ${studentdetails1}    User Name
    ${StdPassword}    Get From Dictionary    ${studentdetails1}    Password
    ${studentdetails2}    Create Dictionary    User Name    STD2${uniqueVal}    Password    test012345    First Name
    ...    STD2${uniqueVal}_Fn    Middle Name    STD2${uniqueVal}_MN    Last Name    ChangeThis_Ln    Grade Level
    ...    3
    ${studentFN2}    Get From Dictionary    ${studentdetails2}    First Name
    ${StdUserID2}    Get From Dictionary    ${studentdetails2}    User Name
    ${titleList}    Create List    CCS Math Assessments Level 4
    ${userStatusList}    Create List    true
    ${activityName}    Set Variable    01 Form A
    ${studentFN}    Create List    ${studentFN1}    ${studentFN2}
    Comment    Login with Valid teacher Credentials.
    ${loginStatus}=    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a classes,titles from management page.
    : FOR    ${each_Class}    IN    @{classesList}
    \    Add A Class Or Group    ${each_Class}
    \    ${classAStatus}    Verify Values In Table    ${table.classesAndGroups}    Name    ${each_Class}
    \    Run Keyword If    ${classAStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${each_Class}
    \    Comment    Editing Class or Group.
    \    Edit The Class Or Group Details
    \    Edit Students Or Titles    ${titleList}    ${userStatusList}    Title Name
    \    Wait And Click Element    ${button.classDetails.save}
    Comment    Add class to student from management page.
    ${studentDetails}    Create List    ${studentdetails1}    ${studentdetails2}
    ${noOfStudents}    Get Length Of List    ${studentDetails}
    : FOR    ${index}    IN RANGE    0    ${noOfStudents}
    \    ${each_Student}    Set Variable    @{studentDetails}[${index}]
    \    ${studentStatus}    AddClassToStudent    ${each_Student}    @{classes2Dlist}[${index}]
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    \    ${recordStatus}    Run Keyword If    ${studentStatus}    Search The Records    ${table.users}    ${text.management.search}
    \    ...    @{studentFN}[${index}]
    \    Run Keyword Unless    ${recordStatus}    Fail    Student record was not found in user details table.
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Select assignment for multiples classes from new assignments page
    ${class1Status}    Select Assignment Class    ${className1}
    Run Keyword If    '${class1Status}'!='True'    Fail    Class is not selected in new assignments page.
    ${class2Status}    Select Assignment Class    ${className2}
    Run Keyword If    '${class2Status}'!='True'    Fail    Class is not selected in new assignments page.
    ${subjectStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.newAssignment.subjectList}    ${TimeOut}    The Subject \ is not displayed after classes selection.
    Comment    Select subject for multiple classes
    Select Subject    ${titleList}
    ${levelStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.newAssignments.Level}    ${TimeOut}    The Level is not displayed after classes selection.
    Comment    Select level for multiple classes.
    Select Level    CCS Math Assessments Level 4
    ${assignmentStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudents.unselectedCheckBox}    ${TimeOut}    The Assignment \ is not displayed after classes selection.
    ${asmtStatus}    Run Keyword If    ${assignmentStatus}    Click On Element    ${check.editStudents.unselectedCheckBox}
    Run Keyword Unless    ${asmtStatus}    Select Checkbox    ${check.editStudents.unselectedCheckBox}
    Wait And Click Element    ${button.newAssignment.assignNow}
    Wait Until Element is Invisible    ${common.newAssignments.Loading}
    Comment    Signout and relogin as student and verifing the assignment is assigned or not.
    ${studentUids}    Create List    ${StdUserID1}    ${StdUserID2}
    ${noOfStudents}    Get Length Of List    ${studentUids}
    : FOR    ${index}    IN RANGE    0    ${noOfStudents}
    \    ${each_Student}    Set Variable    @{studentUids}[${index}]
    \    Close Browser
    \    ${loginStatus}=    LoginToWizardApp    ${each_Student}    ${StdPassword}
    \    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    \    ...    ELSE    Set Test Message    The user is able to login successfully.
    \    Comment    After login check whether assignments are available
    \    ${AssignmentsListStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.StudentHome.AssignmentsRow}    ${Delay}    Assignments are not visible in student home page.
    \    ${AssignmentStatus}    Run Keyword And Return Status    Student Do The Assignment    CCS Math Assessments Level 4    ${activityName}    False
    \    Run Keyword Unless    ${AssignmentStatus}    Fail    Assignment is not displayed in student home page when assigned assignements to multiple classes.
    [Teardown]    Stop Application

ATC 454 - Grade Book Type Assignments.
    [Documentation]    Verifying the "Grade" functionality for book type assignments.
    ...
    ...    1. Login to Application as a Teacher.
    ...
    ...    2. Add a Class and add the same class to a new student with an activity.
    ...
    ...    3. Assign assignment to the student as a Book type assignment.
    ...
    ...    4. Go to Grading page and select "All Questions" dropdown label and set to correct(setting all Qns grade to 100%).
    ...
    ...    5. Verifying all the questions grade is properly set to 100% or not.
    ...
    ...    6. Select "All Questions" dropdown label and set to InCorrect(setting all Qns grade to 0%).
    ...
    ...    7. Verifying all the questions grade is properly set to 0% or not.
    ...
    ...    8. Fail in both scenarios if the grade values were not set proprerly in bunch grading.
    [Tags]    TEACHER_95    GRADE_ASSIGNMENTS_GRADE_BOOK_TYPE    HIGH
    Run Keyword If    '${secondTeacherCreationStatus}'!='True'    Fail    PreRequisite teacher is not created
    ${TeacherUId}    Get From Dictionary    ${preTeacherDetails02}    UserName
    ${TeacherPwd}    Get From Dictionary    ${preTeacherDetails02}    Password
    ${AssignmentNameTitle}    Set Variable    CCS Reading Assessments Level 3
    ${AssignmentNameSubTitle}    Set Variable    01-01 Form A: Part 1
    ${titleList}    Create List    ${AssignmentNameTitle}
    ${activityList}    Create List    ${AssignmentNameSubTitle}
    ${statusList}    Create List    true
    Comment    ${ClassName}    Set Variable    @{preClassesList}[0]
    ${uniqueVal}    GetUniqueValue
    ${className}    Set Variable    ClassSDT_Grade_BookAssign${uniqueVal}
    ${classesList}    Create List    ${className}
    ${studentUId}    Set Variable    ${uniqueVal}_STD
    ${studentPassword}    Set Variable    ${uniqueVal}
    ${studentFName}    Set Variable    ${uniqueVal}_FN
    ${studentLName}    Set Variable    ${uniqueVal}_LN
    ${student}    Set Variable    ${studentFName}${SPACE}${studentLName}
    ${studentMName}    Set Variable    ${EMPTY}
    ${grade}    Set Variable    5
    ${studentDetails}    Create Dictionary    User Name    ${studentUId}    Password    ${studentPassword}    First Name
    ...    ${studentFName}    Last Name    ${studentLName}    Middle Name    ${studentMName}    Grade Level
    ...    ${grade}
    Comment    Login into Wizard App with teacher Role.
    ${loginStatus}    LoginToWizardApp    ${TeacherUId}    ${TeacherPwd}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${loaderStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${common.homepage.Loading}    10s
    Run Keyword If    ${loaderStatus}==True    Run Keyword And Ignore Error    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Wait And Click Element    ${button.home.management}
    Wait And Select Frame    ${header.management.schoolAdminFrame}    ${Delay}
    Comment    MYS-3519 : Replaced with wait for element visible keyword.
    Wait For Element Visible    ${button.classes.add}    ${Delay}    Add Class/Group button is not visible in the given time.
    Comment    Selecting first row in table to bring the add button into focus.
    Wait And Click Element    //div[@id='groupGrid']//div[@class='dgrid-scroller']//div[2]//table//tr//td[1]
    Comment    Adding a class to test the book type assignment grading.
    Add A Class Or Group    ${className}    \    SDT class to test book type assignment grading.
    Comment    Adding titles to the class.
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titleList}    ${statusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    Adding the class to a new student.
    AddClassToStudent    ${studentDetails}    ${classesList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    Navigating to new assignments page.
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Assigning Book Type assignment to the student.    Navigate BackTo Home Page
    Wait And Click Element    //div[@class='raClassLabel' and contains(text(),'${className}')]
    Add Assignment To A Student    ${className}    ${AssignmentNameTitle}    ${EMPTY}    ${activityList}    \    1
    ...    \    True
    Comment    MYS-3519 : Uncommented the keyword for navigate back to home page as the keyword updated in this branch itself.
    Comment    Wait And Click Element    //div[contains(@id,'assignmentsView')]//div[@class='breadcrumb']//td[contains(@class,'mblToolBarButton') and text()='Home']
    Navigate BackTo Home Page    New Assignments
    Comment    select grade assignments.
    Select Graded Assignments
    Wait For Element Visible    //div[@id='gradeAssmtsListGrid']//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Grade']    ${TimeOut}
    ${GradedAssignmentCount}=    Get Matching Xpath Count    ${label.gradeAssignments.firstRow}
    Run Keyword If    ${GradedAssignmentCount}==0    Fail and Capture Screenshot    No Graded Assignments are available to Grade
    Wait Until Page Contains Element    //div[@id='gradeAssmtsListGrid']//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Grade']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${AssignmentNameSubTitle}')]//preceding-sibling::td//button[text()='Grade']    ${Delay}    Given Book type assignment is not visible in the grading assignments page.
    Wait And Click Element    //div[@id='gradeAssmtsListGrid']//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Grade']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${AssignmentNameSubTitle}')]//preceding-sibling::td//button[text()='Grade']
    Wait Until Element is Invisible    //div[@id='gradeAssmtsListGrid']//div[contains(@id,'gradeAssmtsListGrid-row') and @role='row']//table//tr//td//button[text()='Grade']//parent::td//following-sibling::td[text()='${className}']//following-sibling::td[text()='${AssignmentNameTitle}']//following-sibling::td[contains(text(),'${AssignmentNameSubTitle}')]//preceding-sibling::td//button[text()='Grade']
    Comment    Selecting "All Questions" dropdown lable to grade them to 100% in a bunch.
    Comment    MYS-3519 : Replaced with wait for element visible keyword.
    Wait For Element Visible    //select[@id='setCorrectCB']    ${Delay}    Grading page is not visible in the given time.
    Wait Until Keyword Succeeds    2m    3s    Select From List By Label    //select[@id='setCorrectCB']    All Questions
    Wait And Click Element    //span[@id='setCorrectBtn']
    Comment    MYS-3519 : Replaced with wait for element visible keyword and to check for page overlay blocker and wait til it invisible.
    ${page_overlay_blocker}    Wait For Element Visible    //div[@id='pageOverlayBg']
    Run Keyword If    ${page_overlay_blocker}    Wait Until Element is Invisible    //div[@id='pageOverlayBg']
    Wait Until Element is Invisible    //div[@id='pageOverlayDiv']//div[@id='pageOverlayMsg' and contains(text(),'Setting Scores...')]
    Wait For Element Visible    //td[contains(@class,'dgrid-column-grade')]//div[text()='100%']    ${TimeOut}    All Questions were not graded to 100% at bunch.
    ${totalQnsGradedCount}    Get Matching Xpath Count    //td[contains(@class,'dgrid-column-grade')]//div[text()='100%']
    Run Keyword And Continue On Failure    Should Contain    ${totalQnsGradedCount}    38    All Questions were not graded to 100% at bunch.
    Comment    Selecting "All Questions" dropdown lable to grade them to 0% in a bunch.
    Wait Until Keyword Succeeds    2m    3s    Select From List By Label    //select[@id='setCorrectCB']    All Questions
    Wait And Click Element    //span[@id='setIncorrectBtn']
    ${page_overlay_blocker}    Wait For Element Visible    //div[@id='pageOverlayBg']
    Run Keyword If    ${page_overlay_blocker}    Wait Until Element is Invisible    //div[@id='pageOverlayBg']
    Wait Until Element is Invisible    //div[@id='pageOverlayDiv']//div[@id='pageOverlayMsg' and contains(text(),'Setting Scores...')]
    Comment    MYS-3519 : Replaced with wait for element visible keyword.
    Wait For Element Visible    //td[contains(@class,'dgrid-column-grade')]//div[text()='0%']    ${TimeOut}    All Questions were not graded to 0% at bunch.
    ${totalQnsGradedCount}    Get Matching Xpath Count    //td[contains(@class,'dgrid-column-grade')]//div[text()='0%']
    Should Contain    ${totalQnsGradedCount}    38    All Questions were not graded to 0% at bunch.
    [Teardown]    Stop Application

ATC-445-Teacher-Archive classes and Groups functionality verification.
    [Documentation]    ATC-445-Teacher-Archive classes and Groups functionality verification.
    ...
    ...    Step1 : Login to wizard application with teacher credentials.
    ...
    ...    Step2 : Add a class from management page.
    ...
    ...    Step3 : Signout and relogin as a district admin.
    ...
    ...    Step4 : Navigate to management page \ To Archive the class and group.Class and Group name should be hide in class details table.
    ...
    ...    Step5 : Signout and relogin as a teacher,to verify the class and group names in class details window.Class and Group names should not be visible in class details table.
    ...
    ...    Step6 : Signout and relogin as a district admin navigate to management page.Teo dearchive the class and group names should be visible in class details window.
    ...
    ...    Step7 : Signout and relogin as a teacher navigate to management page,to verify the class and group names in class details window.Class and Group names should be visible in class details table.
    [Tags]    TEACHER_96    MANAGEMENT_ARCHIVE_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}'    Fail    PreRequisite teacher is not created
    Run Keyword If    '${preDistrictAdminStatus}'=='False'    Fail    PreRequisite District Admin is not created
    ${dAdmin_ID}    Get From Dictionary    ${preDistrictAdminDetails}    UserName
    ${dAdmin_Password}    Get From Dictionary    ${preDistrictAdminDetails}    Password
    Comment    Login to wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    Navigating to mangement page.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${uniqueValue}    GetUniqueValue    QA
    ${className}    Set Variable    Class${uniqueValue}
    Comment    ${groupName}    Set Variable    Group${uniqueValue}
    Comment    ${bStatus}=    Wait Until Element Is Visible    ${button.management.showGroups}    ${TimeOut}    The Show Groups button is not visble in management page.
    ${classAndGroupList}    Create List    ${className}
    ${classOrGroupType}    Create List    Class
    : FOR    ${type}    IN    @{classOrGroupType}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait And Click Element    ${button.management.showGroups}
    \    Comment    Run Keyword If    '${type}'=='Group'    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}
    \    ...    Show groups button clicking action not recieved by element.
    \    Comment    Add a class from mangement page.
    \    ${classAndGroup}    Set Variable    ${className}
    \    Add A Class Or Group    ${classAndGroup}    \    Created by QA off shore    ${type}
    \    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    \    Run Keyword Unless    ${bStatus}    Fail    The newly added class is not shown in the 'classes' table.
    Close Browser
    Comment    Login to wizard application with district credentials.
    ${loginStatus}    LoginToWizardApp    ${dAdmin_ID}    ${dAdmin_Password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Comment    MYS-3211:Updated code to handle enhancements dialog if not in login keyword.
    Wait For Element Visible    //div[@class='dashLink']/div[@class='headerLabelSchool']
    Comment    Mys-4471 :Enhancement Alert message has been removed from application
    Comment    ${enhancementAlertStatus}    Wait For Element Visible    ${common.window.Enhancements}    5s
    Comment    Run Keyword If    ${enhancementAlertStatus}    Wait And Click Element    ${button.Alert.OK}
    Select The School Name    ${preSchoolName}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifing to Archive classes and groups functionality.
    ${archiveClassGroups}    Archive Classes And Groups    ${classAndGroupList}
    Run Keyword Unless    ${archiveClassGroups}    Fail    Failed to archive classes or Groups
    Comment    verifing the class or group name after archive class or group in class details table.
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${classAndGroup}
    Run Keyword If    ${bStatus}    Fail    The class or group name is still visible after Archied the class.
    Close Browser
    Comment    Login to wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    verifing the class name after archive class in class details table.
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${bStatus}    Fail    After archive the class name is still visible in class details table
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}    Show groups button clicking action not recieved by element.
    Comment    verifing the group name after archive group in group details table.
    Comment    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${groupName}
    Comment    Run Keyword If    ${bStatus}    Fail    After archive the group name is still visible in group details table
    Close Browser
    Comment    Login to wizard application with district admin credentials.
    ${loginStatus}    LoginToWizardApp    ${dAdmin_ID}    ${dAdmin_Password}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Select The School Name    ${preSchoolName}
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verifying whether dearchive the classes and groups.
    ${deArchiveClassGroups}    De-Archive Classes Or Groups    ${classAndGroupList}
    Run Keyword Unless    ${deArchiveClassGroups}    Fail    Failed to archive classes or Groups
    Comment    verifing the class name after deArchive class in class details table.
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword Unless    ${bStatus}    Fail    The class name is not visible after deArchied the class.
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}    Show groups button clicking action not recieved by element.
    Comment    Comment    verifing the group name after deArchive group in group details table.
    Comment    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${groupName}
    Comment    Run Keyword Unless    ${bStatus}    Fail    The class name is not visible after deArchied the class.
    Close Browser
    Comment    Login to wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ...    ELSE    Set Test Message    The user is able to login successfully.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    verifing the class name after deArchive class in class details table.
    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword Unless    ${bStatus}    Fail    The class name is not visible after deArchied the class.
    Comment    Wait And Click Element    ${button.management.showGroups}
    Comment    Wait Until Element Is Visible    ${button.management.showClasses}    ${TimeOut}    Show groups button clicking action not recieved by element.
    Comment    verifing the group name after deArchive group in group details table.
    Comment    ${bStatus}=    Verify Values In Table    ${table.classesAndGroups}    Name    ${groupName}
    Comment    Run Keyword Unless    ${bStatus}    Fail    The group name is not visible after deArchied the group.
    [Teardown]    Stop Application

ATC 498 Teacher-Verify close button and search functionality in edit classes&Groups
    [Documentation]    ATC 498 Teacher-Verify close button and search functionality in edit classes&Groups
    ...
    ...    Step1 : Login to wizard app with Teacher credentials.
    ...
    ...    Step2 : Add a student from management page.
    ...
    ...    Step3 : Select the student record in user details table and click on edit button.
    ...
    ...    Step4 : And click on classes and groups edit button.
    ...
    ...    Step5 : Filter the class name using search funtionality,unique class name should be displayed.
    ...
    ...    Step 6 : Verify the close button in list editor table,close button should be displayed.
    ...
    ...    Step7 : Click on close button, list editor page should be closed.
    [Tags]    TEACHER_97    MANAGEMENT_VERIFY_SEARCH_AND_CLOSE_IN_CLASSES_AND_GROUPS    HIGH
    Run Keyword If    '${preTeacherID}'=='${EMPTY}' and "${preGroupsScriptStatus}" != "True"    Fail    PreRequisite teacher / PreRequisite Groups is not created
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    Comment    ${groupName}    Set Variable    @{preGroupList}[0]
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentLN}    Get From Dictionary    ${studentDetails}    Last Name
    Comment    Login to wizard app with teacher credentials
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a student from manageemnt page. and select the student record from user details table.
    ${studentStatus}    AddStudent    ${studentDetails}
    Run Keyword If    '${studentStatus}'=='False'    Fail    Student is not added
    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Comment    Wait And Click Element    ${button.userDetails.edit}
    Comment    ${classAndGroupsEditBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.classesAndGroups.edit}    ${TimeOut}    Classes and groups edit button is not visible in calss details window.
    Wait And Click Element    ${button.classesAndGroups.edit}
    ${classesAndGroupsListEditorStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${TimeOut}    Classes and groups list editor page is not visisble.
    Comment    Filter the calss and group name using search functionality in classes& Groups listeditor table.
    ${classesAndGroups}    Create List    ${ClassName}
    : FOR    ${itr}    IN    @{classesAndGroups}
    \    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${itr}
    \    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    \    ${recordsStatus}    String Should Contain    ${recordCount}    1
    \    Select The Record In Table    ${table.fromTable}    Name    ${ClassName}
    \    ${SelectedTitleStatus}    Verify Element Visible    //td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name dgrid-focus' and text()='${ClassName}']
    \    Comment    Run Keyword If    '${SelectedTitleStatus}'=='False'    Fail    Title is not selected in syllabus table.
    \    Clear Text    ${Text.search.studentOrTitles}
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${closeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.userDetails.save}    ${TimeOut}    close button is not clicked in list editors table.
    [Teardown]    Stop Application

ATC 495-Teacher-Verify close button and search functionality in Edit titles class window
    [Documentation]    ATC 494-Teacher-Verify close button and search functionality in Edit titles window
    ...
    ...    Step1 : Login to wizard app with Teacher credentials
    ...
    ...    Step2 : Select the class in class details table from management page.
    ...
    ...    Step3 : Click on class details edit button and click on titles edit button,Titles list editor table should be displayed.
    ...
    ...    Step4 : Verify the record using search functionality,unique record should be displayed.
    ...
    ...    Step5 : Verify the close button,close button should be displayed.
    ...
    ...    Step6 : Click on close button, list editor page should be closed.
    [Tags]    TEACHER_98    MANAGEMENT_VERIFY_SEARCH_AND_CLOSE_IN_EDIT_TITLES    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${titleName}    Set Variable    CCS Motivation Reading Level 02
    comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${rowNo}    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword If    '${rowNo}'=='0'    Fail    Failed to select the created class.
    Comment    Edit student in class details window
    Edit The Class Or Group Details
    ${studentEditBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.titles.edit}    ${TimeOut}    Titles edit button is not visible in calss details window.
    Wait And Click Element    ${button.titles.edit}
    Comment    Select the title using search funtionality from titles list.
    ${studentListEditorStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${TimeOut}    titles list editor page is not visisble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${titleName}
    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    String Should Contain    ${recordCount}    1
    ${titleSelectionStatus}    CommonLibrary.Select The Row    ${table.fromTable}    1
    ${SelectedTitleStatus}    Verify Element Visible    //td[@class='dgrid-cell dgrid-cell-padding dgrid-column-name field-name dgrid-focus' and text()='${titleName}']
    Run Keyword If    '${SelectedTitleStatus}'=='False'    Fail    Title is not selected in syllabus table.
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${closeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.classDetails.save}    ${TimeOut}    close button is not clicked in list editors table.
    [Teardown]    Stop Application

ATC 492-Teacher-Verify close button and search functionality is working in 'Edit students in class' window.
    [Documentation]    ATC 492-Teacher-Verify close button and search functionality is working in 'Edit students in class' window.
    ...
    ...    Step1 : Login to wizard app with teacher credentials
    ...
    ...    Step2 : Add class to a student from management page.
    ...
    ...    Step3 : Click on class details edit button and click on student edit button,Student list editor table should be displayed.
    ...
    ...    Step4 : Verify the record using search functionality,unique record should be displayed.
    ...
    ...    Step5 : Verify the close button,close button should be displayed.
    ...
    ...    Step6 : Click on close button, list editor page should be closed.
    [Tags]    TEACHER_99    MANAGEMENT_VERIFY_SEARCH_AND_CLOSE_IN_EDIT_STUDENTS    HIGH
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${ClassName}=    Set Variable    @{preClassesList}[0]
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentUId}    Get From Dictionary    ${studentDetails}    User Name
    comment    Login to Wizard application with school Admin credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    Navigate to Management page and Selecting the frame School Admin.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classesList}    Create List    ${ClassName}
    Comment    Add class to a student \ the management page
    ${addstudentToAClassStatus}    AddClassToStudent    ${studentDetails}    ${classesList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Comment    Edit student in class details window
    Edit The Class Or Group Details
    ${studentEditBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.students.edit}    ${TimeOut}    Student edit button is not visible in calss details window.
    Wait And Click Element    ${button.students.edit}
    Comment    To search the student record in list editor table.
    ${studentListEditorStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${check.editStudentsorTitles.selectAllCheckbox}    ${TimeOut}    Student list editor page is not visisble.
    Comment    MYS-3211 : Replaced Input Text with TypeCharacterstoTextBox to resolve synchronizing issue and an update to fix stale element reference exception.
    Wait Until Page Contains Element    ${Text.search.studentOrTitles}    ${TimeOut}    Search field not fond in list editor window of students after clicking on edit button.
    TypeCharactertoTextBox    ${Text.search.studentOrTitles}    ${studentUId}
    ${recordCount}    Get Matching Xpath Count    ${table.fromTable}//div[@class='dgrid-content ui-widget-content']//div[@role='row']
    ${recordsStatus}    String Should Contain    ${recordCount}    1
    Run Keyword Unless    ${recordsStatus}    Fail    Students records count were mismatched using search functionality.
    Comment    Verifying close button functionality in listeditor page
    ${closeBtnStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.listEditor.close}    ${TimeOut}    Close button is not visible in list editor page.
    Wait And Click Element    ${button.listEditor.close}
    Wait Until Element is Invisible    ${button.listEditor.close}
    ${closeStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.classDetails.save}    ${TimeOut}    close button is not clicked in list editors table.
    [Teardown]    Stop Application

ATC 504 -Validate the invalid registration code functionality
    [Documentation]    ATC 505-Validate the invalid registration code functionality
    ...
    ...    Step1 : Open browser to login page.
    ...
    ...    Step2 : Click on new user link and select teacher role.
    ...
    ...    Step3 : Teacher registration window should be displayed enter the invalid teacher registration code,alert message should be displayed.
    [Tags]    TEACHER_100    REGISTRATION_VALIDATE_INVALID_REGISTRATION_CODE    HIGH
    Comment    Open browser to login page
    OpenBrowserToLoginPage    ${WizardURL}
    ${newUserLinkStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.login.newUser}    ${TimeOut}    New user link is not visible in login page.
    Wait And Click Element    ${button.login.newUser}
    Comment    Select the teacher role from the roles menu
    ${roleStatus}    Select Role in Create Account    ${teacherRole}
    ${teRegWinStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${text.teacherSignUp.registrationCode}    ${TimeOut}    Teacher registration window is not visble
    Comment    Enter the invalid teacher registration code in to text field
    Enter Text In Text Field    ${text.teacherSignUp.registrationCode}    SDT-TEST-QWE
    Wait And Click Element    ${button.signUp.next}
    Comment    Verifying the Invalid registration code alert message is displayed or not
    ${invalidRegAlertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.alertClipMsg.duplicateClassorGroup}    ${TimeOut}    Alert message is not displayed when enter the invalid registration code.
    ${alertMsgStatus}    Get Text    ${label.alertClipMsg.duplicateClassorGroup}
    ${MsgStatus}    String Should Contain    ${alertMsgStatus}    Invalid registration code.
    Run Keyword If    '${MsgStatus}'=='False'    Fail    Miss matched the expected and actual alert message.
    [Teardown]    Stop Application

ATC 523-TE-Validate removed student is available in class details table
    [Documentation]    ATC-523-TE Validate removed student is available in class details table
    ...
    ...    Step1 : Login to wizard application with teacher credentials.
    ...
    ...    Step2 : Add Class to a student from management page.
    ...
    ...    Step3 : Select the class from class details table and verify the student is visible or not in details table.Student full name should be visible.
    ...
    ...    Step4 : Click on edit student details and uncheck the student from student list editor table click on save button.Verify the student is visible or not in details table.Student full name should not be visible.
    ...
    ...    Step5 : Verify the student in "Show my students table" student name is visible or not,student name should not visisble.
    ...
    ...    Step6: Click on show all users button and verify the student in "All users" table student name is visible or not.Student name should be visible in all users table.
    ...
    ...    Step7 : Select the student from all users table,click on edit button and click on classes and groups edit button from user details table.
    ...
    ...    Step8 : Classes and groups list editor table should be displayed.Select the class name and click on save button.
    ...
    ...    Step9 : Verify the class name is visible or not in classes and groups window,should be visible.
    ...
    ...    Step10 : Verify the student full name is visible or not in class details table or not,Student full name should be visible.
    [Tags]    TEACHER_104    MANAGEMENT_VERIFY_DELETED_USER_IN_CLASS    CRITICAL
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${ClassName}=    Set Variable    class${uniqueVal}
    ${classesList}    Create List    ${ClassName}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentFN}    Get From Dictionary    ${studentDetails}    First Name
    ${studentLN}    Get From Dictionary    ${studentDetails}    Last Name
    ${studentFullName}    Set Variable    ${studentFN}${SPACE}${studentLN}
    comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${ClassName}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Failed to add a class
    comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classesList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    Select the record in classes table and verify the student is visible in details table or not.
    ${classNameStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${ClassName}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Class name is not visible in class details table.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student is not added to the class
    Edit The Class Or Group Details
    Wait And Click Element    ${button.students.edit}
    Comment    Edit the students in classesdetails table and uncheck the student.
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Students list editor table is not visble.
    ${checkBoxSelectionStatus}    Run Keyword And Return Status    Select Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    ${checkBoxUnSelectionStatus}    Run Keyword And Return Status    Unselect Checkbox    ${check.editStudentsorTitles.selectAllCheckbox}
    Run Keyword If    '${checkBoxSelectionStatus}'=='False' and '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to select and unselect check box selection.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait And Click Element    ${button.classDetails.save}
    Wait Until Element is Invisible    ${button.classDetails.save}
    Comment    Student is visible or not when uncheck the student and click on save button.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student name is still visible after unchecked the student from class.
    Comment    Verifing the student name is visible or not in show all users table,after unchecked the student from class
    ${StudentStatusInShowAllUsersTable}    Verify Values In Table    ${table.users}    Last Name    ${studentLN}
    Run Keyword If    '${StudentStatusInShowAllUsersTable}'=='False'    Fail    Student name is still \ not visible in show all users table, after unchecked the student from class.
    Comment    Verifing the student name is visible or not in show my students table,after unchecked the student from class
    Wait And Click Element    ${button.management.showMyStudents}
    ${studentStatusInAllUsersTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.showAllUsers}    ${TimeOut}    Show all users is not visible after click on show my students.
    ${StudentStatusINMyStudentsTable}    Verify Values In Table    ${table.users}    Last Name    ${studentLN}
    Run Keyword If    ${StudentStatusINMyStudentsTable}    Fail    Student name is still visible in show my students table, after unchecked the student from class.
    Comment    Click on show all users select the student record from user details table.
    Wait And Click Element    ${button.management.showAllUsers}
    ${studentStatusInAllUsersTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${button.management.showMyStudents}    ${TimeOut}    Show all users is not visible after click on show my students.
    ${studentRecordSelectionStatus}    Select The Record In Table    ${table.users}    Last Name    ${studentLN}
    Comment    Wait And Click Element    ${button.userDetails.edit}
    Comment    Verify the to select the class from classesAndGroups window,Class name is visible in classAndGroups window or not.
    Wait And Click Element    ${button.classesAndGroups.edit}
    ${listEditorTable}    Run Keyword And Return Status    Wait Until Element Is Visible    ${table.fromTable}    ${TimeOut}    Students list editor table is not visble.
    Enter Text In Text Field    ${Text.search.studentOrTitles}    ${ClassName}
    ${checkBoxUnSelectionStatus}    CommonLibrary.Select The Row    ${table.fromTable}    1
    Run Keyword If    '${checkBoxUnSelectionStatus}'=='False'    Fail    Fail to check the record in list editor table.
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait Until Element is Invisible    ${button.editStudentsAndTitles.save}
    Comment    Verifying the student name is visible in classes details window or not when select the class from classesAndGroups window.
    ${studentStatusInStudentEditDetais}    Verify Element Visible    //div[text()='${studentFullName}']
    Run Keyword If    '${studentStatusInStudentEditDetais}'=='False'    Fail    Student name is not visible in classes details window when select the class from classesAndGroups window.
    [Teardown]    Stop Application

ATC 525-TE-Validate removed student is available in the class at new assignments
    [Documentation]    ATC 525-TE-Validate removed student is available in the class at new assignments
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Add a student from class and add titles to the class (No students)
    ...
    ...    Step3 : Navigate back to home page,to select the class from new assignments page,verify the alert message is displayed or not when select the empty class.Alert message should be displayed.
    ...
    ...    Step4 : Navigate back to home page,add two student to the class and click on save button.
    ...
    ...    Step5 : To remove the on student from the class and verify the revomed student is visible or not in select individual student list editor of class at new assignments page.
    ...
    ...    Step6 : Removed student should not be visible in student list editor page.
    [Tags]    TEACHER_106    NEW_ASSIGNMENTS_VERIFY_REMOVED_STUDENT_IN_CLASS    CRITICAL
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${className}    Set Variable    class${uniqueVal}
    ${classesList}    Create List    ${className}
    ${studentDetails1}    Create Dictionary    User Name    ${uniqueVal}SDT1    Password    Password${uniqueVal}SDT1    First Name
    ...    ${uniqueVal}SDT1FN    Last Name    SDT1LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentLN1}    Get From Dictionary    ${studentDetails1}    Last Name
    ${studentDetails2}    Create Dictionary    User Name    ${uniqueVal}SDT2    Password    Password${uniqueVal}SDT2    First Name
    ...    ${uniqueVal}SDT2FN    Last Name    SDT2LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    5
    ${studentLN2}    Get From Dictionary    ${studentDetails2}    Last Name
    Comment    MYS-2350: Updated the variable name to retreive titles from prerequisite data.
    ${titlesList}    Create List    @{preSignUpTitleMenus}[0]
    ${userStatusList}    Create List    true
    comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Add a class from management page and add titles to the class
    Comment    MYS-2969 : Updated script to select the class from classes table.
    ${addAClassStatus}    Add A Class Or Group    ${className}
    ${classSelectionStatus}    Run Keyword And Return Status    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}    False
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    Comment    Verifying alert message is displayed or not when select the empty class in new assignments page
    Comment    MYS-2969 : Updated script to wait for element visible instead of wait until element is visible.
    Comment    MYS-3191 : Removed "run keyword and return status" keyword to avoid false status and capture actual status returning by "wait for element visible" keyword.
    ${classStatus}=    Wait For Element Visible    ${label.newAssignments.classesList}//div[text()='${className}']    ${TimeOut}    Class name is not visisble in new assignments page.
    ${classSelectionStatus}    Run Keyword And Return Status    Click On Element    ${label.newAssignments.classesList}//div[text()='${className}']/following-sibling::input
    ${alertStatus}    Run Keyword And Return Status    Wait Until Element Is Visible    ${label.login.AlertMsg}    ${TimeOut}    Alert message is not displayed when select empty students of a class.
    Run Keyword If    '${alertStatus}'!='True'    Run Keyword And Continue On Failure    Fail    Alert message is not displayed when select empty students of a class.
    Wait And Click Element    ${button.login.AlertMsg.Ok}
    Navigate BackTo Home Page    New Assignments
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${studentDetails}    Create List    ${studentDetails1}    ${studentDetails2}
    : FOR    ${itr}    IN    @{studentDetails}
    \    Comment    Add class to a students from management page.
    \    ${addClassToAStudentStatus}    AddClassToStudent    ${itr}    ${classesList}
    \    Wait Until Element is Invisible    ${button.newUser.oK}
    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Wait And Click Element    ${button.classDetail.edit}
    Wait And Click Element    ${button.students.edit}
    Comment    To remove the student one from the class
    Comment    MYS-2969 : Updated script to wait for element visible instead of wait until element is visible.
    Comment    MYS-3191 : Removed "run keyword and return status" keyword to avoid false status and capture actual status returning by "wait for element visible" keyword.
    ${studentListEditorStatus}    Wait For Element Visible    ${table.fromTable.firstRow}/tr/td[text()='${studentLN1}']/parent::tr/td[1]/input    ${TimeOut}    Student list editor table is not visible.
    Unselect Checkbox    ${table.fromTable.firstRow}/tr/td[text()='${studentLN1}']/parent::tr/td[1]/input
    Wait And Click Element    ${button.editStudentsAndTitles.save}
    Wait Until Element is Invisible    ${button.editStudentsAndTitles.save}
    Navigate BackTo Home Page    Management
    Navigate To Assignment Page
    Navigate To New Assignments Page
    ${classStatus}=    Select Assignment Class    ${className}
    Run Keyword If    '${classStatus}'!='True'    Fail    Selectclass is fail
    Wait And Click Element    ${label.newAssignments.SelectIndividual}
    Comment    MYS-2969 : Updated script to wait for element visible instead of wait until element is visible.
    Comment    MYS-3191 : Removed "run keyword and return status" keyword to avoid false status and capture actual status returning by "wait for element visible" keyword.
    ${sudentListEditorTableStatus}    Wait For Element Visible    ${table.fromTable}    ${TimeOut}    Student list editor table is not visible.
    Comment    MYS-2969: Replaced keyword "Enter Text In Text field" with "TypeCharactertoTextBox".
    TypeCharactertoTextBox    ${Text.search.studentOrTitles}    ${studentLN1}
    Comment    verifying the removed student is visible or not in select individual student list editors table.
    ${studentRecordStatus}    Verify Values In Table    ${table.fromTable}    Last Name    ${studentLN1}
    Run Keyword If    '${studentRecordStatus}'=='True'    Fail    Student record is still visible in select invidual student list editor of new assignments page.When remove a student from a class.
    Clear Text    ${Text.search.studentOrTitles}
    Comment    MYS-2969: Replaced keyword "Enter Text In Text field" with "TypeCharactertoTextBox".
    TypeCharactertoTextBox    ${Text.search.studentOrTitles}    ${studentLN2}
    ${studentRecordStatus}    Verify Values In Table    ${table.fromTable}    Last Name    ${studentLN2}
    Run Keyword If    '${studentRecordStatus}'!='True'    Fail    Student record is not visible in select invidual student list editor of new assignments page.When add a student from a class.
    [Teardown]    Stop Application

ATC 530-TE-Verify the assignments in student home page when delete a class
    [Documentation]    ATC 530-TE-Verify the assignment in home page when delete the class
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Add a class and student,title from management page.
    ...
    ...    Step3 : Navigate back to home page add assignment to the class from new assignments page
    ...
    ...    Step4 : Delete the class from management page.
    ...
    ...    Step5 : Sigin out relogin as a student.
    ...
    ...    Step6 : Verify assignments are avalible or not in student home page,assignments should not be avaliable.
    [Tags]    TEACHER_108    MANAGEMENT_VERIFY_REMOVED_CLASS_ASSIGNMENTS_FOR_STUDENT    CRITICAL
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentUid}    Get From Dictionary    ${studentDetails}    User Name
    ${studentPWD}    Get From Dictionary    ${studentDetails}    Password
    ${signUpTitleMenu}    Set Variable    @{preSignUpTitleMenus}[0]
    ${activityName}    Set Variable    @{preActivityNames}[0]
    ${titlesList}    Create List    ${signUpTitleMenu}
    ${userStatusList}    Create List    true
    Comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Edit The Class Or Group Details
    Edit Students Or Titles    ${titlesList}    ${userStatusList}    Title Name
    Wait And Click Element    ${button.classDetails.save}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Navigate BackTo Home Page    Management
    Comment    Add assignment to a student
    Add Assignment To A Student    ${className}    ${signUpTitleMenu}    ${EMPTY}    ${activityName}
    Navigate BackTo Home Page    New Assignments
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    delete class from management page.
    ${deleteClassFromTheTableStatus}    Run Keyword And Return Status    Delete The Record From table    ${table.classesAndGroups}    Name    ${className}
    ${classStatusAfterDelete}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${classStatusAfterDelete}    Fail    Failed to delete a class
    Close Browser
    Comment    Enters the login details & click on 'SignIn' button.
    ${loginAsStudent}=    LoginToWizardApp    ${studentUid}    ${studentPWD}
    Run Keyword If    '${loginAsStudent}'!='True'    Fail    student login is failed
    Comment    After login check whether assignments are available or not when delete a class.
    Wait Until Element is Invisible    ${common.homepage.Loading}
    Comment    MYS-3329: Replaced with wait for element
    ${NoAssignStatus}    Wait For Element Visible    ${label.StudentHome.No Assignments}    ${Delay}    Assignments are visible in student home page ,when delete the class.
    Run Keyword If    '${NoAssignStatus}'!='True'    Fail    Assignments are visible in student home page ,when delete the class.
    [Teardown]    Stop Application

ATC 529-TE-Verify the student join a class functionality when delete the class
    [Documentation]    ATC 529-TE-Verify the student join a class functionality when delete the class
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Add a class and student from management page.
    ...
    ...    Step3 : Get a class code and delete the class from management page.
    ...
    ...    Step4 : Sigin out from the district admin and open browser to login page.
    ...
    ...    Step5 : Click on new user link and select the student role.
    ...
    ...    Step6 : Enter the class code,verify alert message is displayed or not.Alert message should be displayed.
    ...
    ...    Step7 : Relogin as a student and click on student stitting dropdown image.
    ...
    ...    Step8 : Select join a class and enter the class code click on join button.
    ...
    ...    Step9 : Verify "No class joined" alert message is displayed or not.
    [Tags]    TEACHER_109    MANAGEMENT_VERIFY_REMOVED_GROUP_ASSIGNMENTS_FOR_STUDENT    CRITICAL
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueVal}    GetUniqueValue    SDTTest
    ${className}    Set Variable    class${uniqueVal}
    ${classList}    Create List    ${className}
    ${studentDetails}    Create Dictionary    User Name    ${uniqueVal}    Password    Password${uniqueVal}    First Name
    ...    ${uniqueVal}FN    Last Name    LN${uniqueVal}    Middle Name    MN    Grade Level
    ...    K
    ${studentUid}    Get From Dictionary    ${studentDetails}    User Name
    ${studentPWD}    Get From Dictionary    ${studentDetails}    Password
    Comment    Login to Wizard application with teacher credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Navigate To Management Page
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    ${classNameStatus}    Add A Class Or Group    ${className}
    Run Keyword If    '${classNameStatus}'=='False'    Fail    Failed to add a class
    ${classSelectionStatus}    Select The Record In Table    ${table.classesAndGroups}    Name    ${className}
    Comment    ${classCode}    Get Text    ${common.classDetails.classCode}
    Comment    To add class to a student from management page.
    ${addClassToStudentStatus}    AddClassToStudent    ${studentDetails}    ${classList}
    Wait Until Element is Invisible    ${button.newUser.oK}
    Comment    delete class from management page.
    ${deleteClassFromTheTableStatus}    Run Keyword And Return Status    Delete The Record From table    ${table.classesAndGroups}    Name    ${className}
    ${classStatusAfterDelete}    Verify Values In Table    ${table.classesAndGroups}    Name    ${className}
    Run Keyword If    ${classStatusAfterDelete}    Fail    Failed to delete a class
    Close Browser
    Comment    Open browser to login page and enter the class code for the student
    OpenBrowserToLoginPage    ${WizardURL}
    Wait And Click Element    ${button.login.newUser}
    Select Role in Create Account    Student
    Comment    MYS-3329: Replaced with wait for element visible keyword.
    ${classCodeWindowStatus}    Wait For Element Visible    ${text.signUp.classCode}    ${TimeOut}    Class code window is not visible
    Comment    Alert is displayed or not Enter the deleted code.
    Enter Text In Text Field    ${text.signUp.classCode}    ${classCode}
    Wait And Click Element    ${button.signUp.next}
    Comment    MYS-3329: Replaced with wait for element visible keyword.
    ${alertStatus}    Wait For Element Visible    ${label.login.AlertMsg}    ${Delay}    Alert message is not displayed when enter invalid classcode.
    Wait And Click Element    ${button.Alert.OK}
    :FOR    ${iCount}    IN RANGE    1    6
    \    Mouse Over    ${button.signUp.close}
    \    Wait And Click Element    ${button.signUp.close}
    \    sleep    5s
    \    ${closeBtnStatus}    Verify Element Visible    ${button.signUp.close}
    \    Exit For Loop If    ${closeBtnStatus}==False
    Comment    Enters the login details & click on 'SignIn' button.
    ${loginAsStudent}=    Run Keyword And Return Status    Enter Login Details    ${studentUid}    ${studentPWD}
    Run Keyword If    '${loginAsStudent}'!='True'    Fail    student login is failed
    Wait And Click Element    ${image.studentHomePage.sittingDeskArrow}
    Wait And Click Element    ${label.studentHomePage.joinAClass}
    Comment    MYS-3329: Replaced with wait for element visible keyword.
    ${classCodeToJoinAclassStatus}    Wait For Element Visible    ${text.studentHomePage.joinClassCode}    ${TimeOut}    Class code window is not visible when click on join a class.
    Comment    When enter the Invalid class code in join a class alert is displayed or not
    Enter Text In Text Field    ${text.studentHomePage.joinClassCode}    ${classCode}
    Wait And Click Element    ${button.studentHomePage.joinClassDlgNext}
    Comment    Wait Until Element is Invisible    ${button.studentHomePage.joinClassDlgNext}
    Comment    MYS-3329: Replaced with wait for element visible keyword.
    ${alertStatus}    Wait For Element Visible    ${button.importTemplate.DialogMessage}    ${Delay}    Aler message is not displayed when enter invalid class code.
    [Teardown]    Stop Application

Teacher-Verify guided help functionality for Make a class.
    [Documentation]    Teacher-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate the make class guided functinality by click on Go to step 1.
    [Tags]    TEACHER_110    Make_a_class_in_guided_Help    High
    [Setup]
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${val}    Get Unique Id
    ${class_Name}    Set Variable    DataQaClass${val}
    Comment    login with Valid Teacher Credentials.
    ${SignUpTitleMenus}    Create List    CCS Reading Assessments Level 3
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    ${description}    Set Variable    created by QA
    Comment    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    validate guided help tool tip in home page
    ${Guided tool tip}    Run Keyword And Return Status    Wait For Element Visible    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]    5s
    Run Keyword If    ${Guided tool tip}    Wait And Click Element    //div[@class='guidedHelpTooltipFooter']/div[contains(text(),'Hide Guided Help')]
    Make a class in Guided help    ${class_Name}    ${SignUpTitleMenus}    \    ${description}
    ${classStatus}    Verify Values In Table    //div[@id='groupGrid']    Name    ${class_Name}
    Run Keyword Unless    ${classStatus}    Fail    ${class_Name} was not added
    Capture Page Screenshot And Log    ${OUTPUTDIR}    ${class_Name}_01.png
    [Teardown]    Stop Application

Teacher-Verify guided help functionality for Adding Users to Classes/Groups.
    [Documentation]    Teacher-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate the Adding users to classes/groups in guided functinality by click on Go to step 1.
    [Tags]    TEACHER_111    Adding_users_to_classes/groups_in_guided_Help    High
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${val}    Get Unique Id
    ${class_Name}    Set Variable    DataQaClass${val}
    Comment    login with Valid Teacher Credentials.
    ${SignUpTitleMenus}    Create List    CCS Reading Assessments Level 3
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Comment    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Navigate To Management Page
    Comment    Select the School Admin frame.
    Wait And Select Frame    ${header.management.schoolAdminFrame}
    Comment    Verify whether is able to add titles and students to the class or not
    Add A Class Or Group    ${class_Name}    \    Created by QA off shore
    Navigate BackTo Home Page    Management
    Adding Users to Classes/Groups in Guided help    ${class_Name}
    [Teardown]    Stop Application

Teacher-Verify guided help functionality for Manual Entry of Students
    [Documentation]    Teacher-Verify guided help functionality for Make a class.
    ...
    ...    Step1 : Login to wizard application with teacher credentials
    ...
    ...    Step2 : Click on help drown down list.
    ...
    ...    Step3 : Click on guided help link.
    ...
    ...    Step4 : validate the Manual Entry of students in guided help functinality by click on Go to step 1.
    [Tags]    TEACHER_112    Manual_entry_of_students_in_guided_Help    High
    Run Keyword If    ${preScriptStatus}==False    Fail    No student data is avaialble.
    ${uniqueValue}    GetUniqueValue    AAASTD
    ${stdFN}    Set Variable    ${uniqueValue}FN
    ${stdLN}    Set Variable    ${uniqueValue}LN
    ${stdUserId}    Set Variable    student${uniqueValue}
    ${password}    Set Variable    ${uniqueValue}PWD
    Comment    login with Valid Teacher Credentials.
    ${loginStatus}    LoginToWizardApp    ${preTeacherID}    ${preTeacherPassword}
    Run Keyword If    ${loginStatus}==False    Fail    The user is not able to login with valid credentials.
    Manual Entry of Students    ${stdFN}    ${stdLN}    ${stdUserId}    ${password}    Student    ${EMPTY}
    ...    6
    [Teardown]    Stop Application
